{
  "KSampler": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "KSampler",
    "display_name": "KSampler",
    "description": "",
    "category": "sampling",
    "output_node": false
  },
  "CheckpointLoaderSimple": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "name": "CheckpointLoaderSimple",
    "display_name": "Load Checkpoint",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "CLIPTextEncode": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "CLIPTextEncode",
    "display_name": "CLIP Text Encode (Prompt)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "CLIPSetLastLayer": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "stop_at_clip_layer": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIPSetLastLayer",
    "display_name": "CLIP Set Last Layer",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "VAEDecode": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "VAEDecode",
    "display_name": "VAE Decode",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "VAEEncode": {
    "input": {
      "required": {
        "pixels": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "VAEEncode",
    "display_name": "VAE Encode",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "VAEEncodeForInpaint": {
    "input": {
      "required": {
        "pixels": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "mask": [
          "MASK"
        ],
        "grow_mask_by": [
          "INT",
          {
            "default": 6,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "VAEEncodeForInpaint",
    "display_name": "VAE Encode (for Inpainting)",
    "description": "",
    "category": "latent/inpaint",
    "output_node": false
  },
  "VAELoader": {
    "input": {
      "required": {
        "vae_name": [
          [
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ]
      }
    },
    "output": [
      "VAE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "VAE"
    ],
    "name": "VAELoader",
    "display_name": "Load VAE",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "EmptyLatentImage": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 8192,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 8192,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "EmptyLatentImage",
    "display_name": "Empty Latent Image",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "LatentUpscale": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentUpscale",
    "display_name": "Upscale Latent",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "LatentUpscaleBy": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "scale_by": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 0.01,
            "max": 8.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentUpscaleBy",
    "display_name": "Upscale Latent By",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "LatentFromBatch": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "batch_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 63
          }
        ],
        "length": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentFromBatch",
    "display_name": "Latent From Batch",
    "description": "",
    "category": "latent/batch",
    "output_node": false
  },
  "RepeatLatentBatch": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "amount": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "RepeatLatentBatch",
    "display_name": "Repeat Latent Batch",
    "description": "",
    "category": "latent/batch",
    "output_node": false
  },
  "SaveImage": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveImage",
    "display_name": "Save Image",
    "description": "",
    "category": "image",
    "output_node": true
  },
  "PreviewImage": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "PreviewImage",
    "display_name": "Preview Image",
    "description": "",
    "category": "image",
    "output_node": true
  },
  "LoadImage": {
    "input": {
      "required": {
        "image": [
          [
            "example.png"
          ],
          {
            "image_upload": true
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "LoadImage",
    "display_name": "Load Image",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "LoadImageMask": {
    "input": {
      "required": {
        "image": [
          [
            "example.png"
          ],
          {
            "image_upload": true
          }
        ],
        "channel": [
          [
            "alpha",
            "red",
            "green",
            "blue"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "LoadImageMask",
    "display_name": "Load Image (as Mask)",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "ImageScale": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ]
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageScale",
    "display_name": "Upscale Image",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "ImageScaleBy": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ]
        ],
        "scale_by": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.01,
            "max": 8.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageScaleBy",
    "display_name": "Upscale Image By",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "ImageInvert": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageInvert",
    "display_name": "Invert Image",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ImageBatch": {
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBatch",
    "display_name": "Batch Images",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ImagePadForOutpaint": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "left": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "top": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "right": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "bottom": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "feathering": [
          "INT",
          {
            "default": 40,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "ImagePadForOutpaint",
    "display_name": "Pad Image for Outpainting",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "EmptyImage": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8192,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8192,
            "step": 1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ],
        "color": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16777215,
            "step": 1,
            "display": "color"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "EmptyImage",
    "display_name": "EmptyImage",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ConditioningAverage": {
    "input": {
      "required": {
        "conditioning_to": [
          "CONDITIONING"
        ],
        "conditioning_from": [
          "CONDITIONING"
        ],
        "conditioning_to_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningAverage",
    "display_name": "ConditioningAverage",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningCombine": {
    "input": {
      "required": {
        "conditioning_1": [
          "CONDITIONING"
        ],
        "conditioning_2": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningCombine",
    "display_name": "Conditioning (Combine)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningConcat": {
    "input": {
      "required": {
        "conditioning_to": [
          "CONDITIONING"
        ],
        "conditioning_from": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningConcat",
    "display_name": "Conditioning (Concat)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningSetArea": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "width": [
          "INT",
          {
            "default": 64,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 64,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningSetArea",
    "display_name": "Conditioning (Set Area)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningSetAreaPercentage": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "width": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "height": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "x": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "y": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningSetAreaPercentage",
    "display_name": "Conditioning (Set Area with Percentage)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningSetMask": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "mask": [
          "MASK"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "set_cond_area": [
          [
            "default",
            "mask bounds"
          ]
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningSetMask",
    "display_name": "Conditioning (Set Mask)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "KSamplerAdvanced": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "add_noise": [
          [
            "enable",
            "disable"
          ]
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "return_with_leftover_noise": [
          [
            "disable",
            "enable"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "KSamplerAdvanced",
    "display_name": "KSampler (Advanced)",
    "description": "",
    "category": "sampling",
    "output_node": false
  },
  "SetLatentNoiseMask": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "SetLatentNoiseMask",
    "display_name": "Set Latent Noise Mask",
    "description": "",
    "category": "latent/inpaint",
    "output_node": false
  },
  "LatentComposite": {
    "input": {
      "required": {
        "samples_to": [
          "LATENT"
        ],
        "samples_from": [
          "LATENT"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "feather": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentComposite",
    "display_name": "Latent Composite",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "LatentBlend": {
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ],
        "blend_factor": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentBlend",
    "display_name": "Latent Blend",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "LatentRotate": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "rotation": [
          [
            "none",
            "90 degrees",
            "180 degrees",
            "270 degrees"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentRotate",
    "display_name": "Rotate Latent",
    "description": "",
    "category": "latent/transform",
    "output_node": false
  },
  "LatentFlip": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "flip_method": [
          [
            "x-axis: vertically",
            "y-axis: horizontally"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentFlip",
    "display_name": "Flip Latent",
    "description": "",
    "category": "latent/transform",
    "output_node": false
  },
  "LatentCrop": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentCrop",
    "display_name": "Crop Latent",
    "description": "",
    "category": "latent/transform",
    "output_node": false
  },
  "LoraLoader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_name": [
          []
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -20.0,
            "max": 20.0,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -20.0,
            "max": 20.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP"
    ],
    "name": "LoraLoader",
    "display_name": "Load LoRA",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "CLIPLoader": {
    "input": {
      "required": {
        "clip_name": [
          []
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIPLoader",
    "display_name": "Load CLIP",
    "description": "",
    "category": "advanced/loaders",
    "output_node": false
  },
  "UNETLoader": {
    "input": {
      "required": {
        "unet_name": [
          []
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "UNETLoader",
    "display_name": "UNETLoader",
    "description": "",
    "category": "advanced/loaders",
    "output_node": false
  },
  "DualCLIPLoader": {
    "input": {
      "required": {
        "clip_name1": [
          []
        ],
        "clip_name2": [
          []
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "name": "DualCLIPLoader",
    "display_name": "DualCLIPLoader",
    "description": "",
    "category": "advanced/loaders",
    "output_node": false
  },
  "CLIPVisionEncode": {
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "CLIP_VISION_OUTPUT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP_VISION_OUTPUT"
    ],
    "name": "CLIPVisionEncode",
    "display_name": "CLIP Vision Encode",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "StyleModelApply": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "style_model": [
          "STYLE_MODEL"
        ],
        "clip_vision_output": [
          "CLIP_VISION_OUTPUT"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "StyleModelApply",
    "display_name": "Apply Style Model",
    "description": "",
    "category": "conditioning/style_model",
    "output_node": false
  },
  "unCLIPConditioning": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "clip_vision_output": [
          "CLIP_VISION_OUTPUT"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "noise_augmentation": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "unCLIPConditioning",
    "display_name": "unCLIPConditioning",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ControlNetApply": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ControlNetApply",
    "display_name": "Apply ControlNet",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ControlNetApplyAdvanced": {
    "input": {
      "required": {
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative"
    ],
    "name": "ControlNetApplyAdvanced",
    "display_name": "Apply ControlNet (Advanced)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ControlNetLoader": {
    "input": {
      "required": {
        "control_net_name": [
          [
            "SD1-5/control_v11e_sd15_ip2p_fp16.safetensors",
            "SD1-5/control_v11e_sd15_shuffle_fp16.safetensors",
            "SD1-5/control_v11f1e_sd15_tile.pth",
            "SD1-5/control_v11f1e_sd15_tile_fp16.safetensors",
            "SD1-5/control_v11f1p_sd15_depth_fp16.safetensors",
            "SD1-5/control_v11p_sd15_canny_fp16.safetensors",
            "SD1-5/control_v11p_sd15_inpaint_fp16.safetensors",
            "SD1-5/control_v11p_sd15_lineart_fp16.safetensors",
            "SD1-5/control_v11p_sd15_mlsd_fp16.safetensors",
            "SD1-5/control_v11p_sd15_normalbae_fp16.safetensors",
            "SD1-5/control_v11p_sd15_openpose_fp16.safetensors",
            "SD1-5/control_v11p_sd15_scribble_fp16.safetensors",
            "SD1-5/control_v11p_sd15_seg_fp16.safetensors",
            "SD1-5/control_v11p_sd15_softedge_fp16.safetensors",
            "SD1-5/control_v11p_sd15s2_lineart_anime_fp16.safetensors",
            "SDXL/control-lora-canny-rank256.safetensors",
            "SDXL/control-lora-depth-rank256.safetensors",
            "SDXL/control-lora-openposeXL2-rank256.safetensors",
            "SDXL/control-lora-recolor-rank256.safetensors",
            "SDXL/control-lora-sketch-rank256.safetensors"
          ]
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "ControlNetLoader",
    "display_name": "Load ControlNet Model",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "DiffControlNetLoader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "control_net_name": [
          [
            "SD1-5/control_v11e_sd15_ip2p_fp16.safetensors",
            "SD1-5/control_v11e_sd15_shuffle_fp16.safetensors",
            "SD1-5/control_v11f1e_sd15_tile.pth",
            "SD1-5/control_v11f1e_sd15_tile_fp16.safetensors",
            "SD1-5/control_v11f1p_sd15_depth_fp16.safetensors",
            "SD1-5/control_v11p_sd15_canny_fp16.safetensors",
            "SD1-5/control_v11p_sd15_inpaint_fp16.safetensors",
            "SD1-5/control_v11p_sd15_lineart_fp16.safetensors",
            "SD1-5/control_v11p_sd15_mlsd_fp16.safetensors",
            "SD1-5/control_v11p_sd15_normalbae_fp16.safetensors",
            "SD1-5/control_v11p_sd15_openpose_fp16.safetensors",
            "SD1-5/control_v11p_sd15_scribble_fp16.safetensors",
            "SD1-5/control_v11p_sd15_seg_fp16.safetensors",
            "SD1-5/control_v11p_sd15_softedge_fp16.safetensors",
            "SD1-5/control_v11p_sd15s2_lineart_anime_fp16.safetensors",
            "SDXL/control-lora-canny-rank256.safetensors",
            "SDXL/control-lora-depth-rank256.safetensors",
            "SDXL/control-lora-openposeXL2-rank256.safetensors",
            "SDXL/control-lora-recolor-rank256.safetensors",
            "SDXL/control-lora-sketch-rank256.safetensors"
          ]
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "DiffControlNetLoader",
    "display_name": "Load ControlNet Model (diff)",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "StyleModelLoader": {
    "input": {
      "required": {
        "style_model_name": [
          []
        ]
      }
    },
    "output": [
      "STYLE_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STYLE_MODEL"
    ],
    "name": "StyleModelLoader",
    "display_name": "Load Style Model",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "CLIPVisionLoader": {
    "input": {
      "required": {
        "clip_name": [
          []
        ]
      }
    },
    "output": [
      "CLIP_VISION"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP_VISION"
    ],
    "name": "CLIPVisionLoader",
    "display_name": "Load CLIP Vision",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "VAEDecodeTiled": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "VAEDecodeTiled",
    "display_name": "VAE Decode (Tiled)",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "VAEEncodeTiled": {
    "input": {
      "required": {
        "pixels": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "VAEEncodeTiled",
    "display_name": "VAE Encode (Tiled)",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "unCLIPCheckpointLoader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "CLIP_VISION"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "CLIP_VISION"
    ],
    "name": "unCLIPCheckpointLoader",
    "display_name": "unCLIPCheckpointLoader",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "GLIGENLoader": {
    "input": {
      "required": {
        "gligen_name": [
          []
        ]
      }
    },
    "output": [
      "GLIGEN"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "GLIGEN"
    ],
    "name": "GLIGENLoader",
    "display_name": "GLIGENLoader",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "GLIGENTextBoxApply": {
    "input": {
      "required": {
        "conditioning_to": [
          "CONDITIONING"
        ],
        "clip": [
          "CLIP"
        ],
        "gligen_textbox_model": [
          "GLIGEN"
        ],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "width": [
          "INT",
          {
            "default": 64,
            "min": 8,
            "max": 8192,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 64,
            "min": 8,
            "max": 8192,
            "step": 8
          }
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "GLIGENTextBoxApply",
    "display_name": "GLIGENTextBoxApply",
    "description": "",
    "category": "conditioning/gligen",
    "output_node": false
  },
  "CheckpointLoader": {
    "input": {
      "required": {
        "config_name": [
          [
            "anything_v3.yaml",
            "v1-inference.yaml",
            "v1-inference_clip_skip_2.yaml",
            "v1-inference_clip_skip_2_fp16.yaml",
            "v1-inference_fp16.yaml",
            "v1-inpainting-inference.yaml",
            "v2-inference-v.yaml",
            "v2-inference-v_fp32.yaml",
            "v2-inference.yaml",
            "v2-inference_fp32.yaml",
            "v2-inpainting-inference.yaml"
          ]
        ],
        "ckpt_name": [
          [
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "name": "CheckpointLoader",
    "display_name": "Load Checkpoint With Config (DEPRECATED)",
    "description": "",
    "category": "advanced/loaders",
    "output_node": false
  },
  "DiffusersLoader": {
    "input": {
      "required": {
        "model_path": [
          []
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "name": "DiffusersLoader",
    "display_name": "DiffusersLoader",
    "description": "",
    "category": "advanced/loaders/deprecated",
    "output_node": false
  },
  "LoadLatent": {
    "input": {
      "required": {
        "latent": [
          []
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LoadLatent",
    "display_name": "LoadLatent",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "SaveLatent": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "latents/ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveLatent",
    "display_name": "SaveLatent",
    "description": "",
    "category": "_for_testing",
    "output_node": true
  },
  "ConditioningZeroOut": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningZeroOut",
    "display_name": "ConditioningZeroOut",
    "description": "",
    "category": "advanced/conditioning",
    "output_node": false
  },
  "ConditioningSetTimestepRange": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "start": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningSetTimestepRange",
    "display_name": "ConditioningSetTimestepRange",
    "description": "",
    "category": "advanced/conditioning",
    "output_node": false
  },
  "LoraLoaderModelOnly": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "lora_name": [
          []
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -20.0,
            "max": 20.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "LoraLoaderModelOnly",
    "display_name": "LoraLoaderModelOnly",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "LatentAdd": {
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentAdd",
    "display_name": "LatentAdd",
    "description": "",
    "category": "latent/advanced",
    "output_node": false
  },
  "LatentSubtract": {
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentSubtract",
    "display_name": "LatentSubtract",
    "description": "",
    "category": "latent/advanced",
    "output_node": false
  },
  "LatentMultiply": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentMultiply",
    "display_name": "LatentMultiply",
    "description": "",
    "category": "latent/advanced",
    "output_node": false
  },
  "LatentInterpolate": {
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ],
        "ratio": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentInterpolate",
    "display_name": "LatentInterpolate",
    "description": "",
    "category": "latent/advanced",
    "output_node": false
  },
  "LatentBatch": {
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentBatch",
    "display_name": "LatentBatch",
    "description": "",
    "category": "latent/batch",
    "output_node": false
  },
  "HypernetworkLoader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "hypernetwork_name": [
          []
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "HypernetworkLoader",
    "display_name": "HypernetworkLoader",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "UpscaleModelLoader": {
    "input": {
      "required": {
        "model_name": [
          [
            "4x-UltraSharp.pth",
            "4x_foolhardy_Remacri.pth",
            "ESRGAN_4x.pth",
            "RealESRGAN_x4plus.pth"
          ]
        ]
      }
    },
    "output": [
      "UPSCALE_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "UPSCALE_MODEL"
    ],
    "name": "UpscaleModelLoader",
    "display_name": "Load Upscale Model",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "ImageUpscaleWithModel": {
    "input": {
      "required": {
        "upscale_model": [
          "UPSCALE_MODEL"
        ],
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageUpscaleWithModel",
    "display_name": "Upscale Image (using Model)",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "ImageBlend": {
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ],
        "blend_factor": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "blend_mode": [
          [
            "normal",
            "multiply",
            "screen",
            "overlay",
            "soft_light",
            "difference"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBlend",
    "display_name": "ImageBlend",
    "description": "",
    "category": "image/postprocessing",
    "output_node": false
  },
  "ImageBlur": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "blur_radius": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 31,
            "step": 1
          }
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.1,
            "max": 10.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageBlur",
    "display_name": "ImageBlur",
    "description": "",
    "category": "image/postprocessing",
    "output_node": false
  },
  "ImageQuantize": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "colors": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "max": 256,
            "step": 1
          }
        ],
        "dither": [
          [
            "none",
            "floyd-steinberg",
            "bayer-2",
            "bayer-4",
            "bayer-8",
            "bayer-16"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageQuantize",
    "display_name": "ImageQuantize",
    "description": "",
    "category": "image/postprocessing",
    "output_node": false
  },
  "ImageSharpen": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "sharpen_radius": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 31,
            "step": 1
          }
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.1,
            "max": 10.0,
            "step": 0.1
          }
        ],
        "alpha": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 5.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageSharpen",
    "display_name": "ImageSharpen",
    "description": "",
    "category": "image/postprocessing",
    "output_node": false
  },
  "ImageScaleToTotalPixels": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ]
        ],
        "megapixels": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.01,
            "max": 16.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageScaleToTotalPixels",
    "display_name": "ImageScaleToTotalPixels",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "LatentCompositeMasked": {
    "input": {
      "required": {
        "destination": [
          "LATENT"
        ],
        "source": [
          "LATENT"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "resize_source": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentCompositeMasked",
    "display_name": "LatentCompositeMasked",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "ImageCompositeMasked": {
    "input": {
      "required": {
        "destination": [
          "IMAGE"
        ],
        "source": [
          "IMAGE"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "resize_source": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageCompositeMasked",
    "display_name": "ImageCompositeMasked",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "MaskToImage": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "MaskToImage",
    "display_name": "Convert Mask to Image",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "ImageToMask": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "channel": [
          [
            "red",
            "green",
            "blue",
            "alpha"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "ImageToMask",
    "display_name": "Convert Image to Mask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "ImageColorToMask": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "color": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16777215,
            "step": 1,
            "display": "color"
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "ImageColorToMask",
    "display_name": "ImageColorToMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "SolidMask": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8192,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8192,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "SolidMask",
    "display_name": "SolidMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "InvertMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "InvertMask",
    "display_name": "InvertMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "CropMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8192,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8192,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "CropMask",
    "display_name": "CropMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "MaskComposite": {
    "input": {
      "required": {
        "destination": [
          "MASK"
        ],
        "source": [
          "MASK"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "operation": [
          [
            "multiply",
            "add",
            "subtract",
            "and",
            "or",
            "xor"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "MaskComposite",
    "display_name": "MaskComposite",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "FeatherMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "left": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "top": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "right": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "bottom": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "FeatherMask",
    "display_name": "FeatherMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "GrowMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "expand": [
          "INT",
          {
            "default": 0,
            "min": -8192,
            "max": 8192,
            "step": 1
          }
        ],
        "tapered_corners": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "GrowMask",
    "display_name": "GrowMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "PorterDuffImageComposite": {
    "input": {
      "required": {
        "source": [
          "IMAGE"
        ],
        "source_alpha": [
          "MASK"
        ],
        "destination": [
          "IMAGE"
        ],
        "destination_alpha": [
          "MASK"
        ],
        "mode": [
          [
            "ADD",
            "CLEAR",
            "DARKEN",
            "DST",
            "DST_ATOP",
            "DST_IN",
            "DST_OUT",
            "DST_OVER",
            "LIGHTEN",
            "MULTIPLY",
            "OVERLAY",
            "SCREEN",
            "SRC",
            "SRC_ATOP",
            "SRC_IN",
            "SRC_OUT",
            "SRC_OVER",
            "XOR"
          ],
          {
            "default": "DST"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "PorterDuffImageComposite",
    "display_name": "Porter-Duff Image Composite",
    "description": "",
    "category": "mask/compositing",
    "output_node": false
  },
  "SplitImageWithAlpha": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "SplitImageWithAlpha",
    "display_name": "Split Image with Alpha",
    "description": "",
    "category": "mask/compositing",
    "output_node": false
  },
  "JoinImageWithAlpha": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "alpha": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "JoinImageWithAlpha",
    "display_name": "Join Image with Alpha",
    "description": "",
    "category": "mask/compositing",
    "output_node": false
  },
  "RebatchLatents": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "RebatchLatents",
    "display_name": "Rebatch Latents",
    "description": "",
    "category": "latent/batch",
    "output_node": false
  },
  "RebatchImages": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "RebatchImages",
    "display_name": "Rebatch Images",
    "description": "",
    "category": "image/batch",
    "output_node": false
  },
  "ModelMergeSimple": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "ratio": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelMergeSimple",
    "display_name": "ModelMergeSimple",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "ModelMergeBlocks": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "input": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "middle": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "out": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelMergeBlocks",
    "display_name": "ModelMergeBlocks",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "ModelMergeSubtract": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelMergeSubtract",
    "display_name": "ModelMergeSubtract",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "ModelMergeAdd": {
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelMergeAdd",
    "display_name": "ModelMergeAdd",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "CheckpointSave": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "checkpoints/ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "CheckpointSave",
    "display_name": "CheckpointSave",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": true
  },
  "CLIPMergeSimple": {
    "input": {
      "required": {
        "clip1": [
          "CLIP"
        ],
        "clip2": [
          "CLIP"
        ],
        "ratio": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIPMergeSimple",
    "display_name": "CLIPMergeSimple",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "CLIPSave": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "clip/ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "CLIPSave",
    "display_name": "CLIPSave",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": true
  },
  "VAESave": {
    "input": {
      "required": {
        "vae": [
          "VAE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "vae/ComfyUI_vae"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "VAESave",
    "display_name": "VAESave",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": true
  },
  "TomePatchModel": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ratio": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "TomePatchModel",
    "display_name": "TomePatchModel",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "CLIPTextEncodeSDXLRefiner": {
    "input": {
      "required": {
        "ascore": [
          "FLOAT",
          {
            "default": 6.0,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01
          }
        ],
        "width": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "CLIPTextEncodeSDXLRefiner",
    "display_name": "CLIPTextEncodeSDXLRefiner",
    "description": "",
    "category": "advanced/conditioning",
    "output_node": false
  },
  "CLIPTextEncodeSDXL": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ],
        "crop_w": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192
          }
        ],
        "crop_h": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192
          }
        ],
        "target_width": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ],
        "target_height": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ],
        "text_g": [
          "STRING",
          {
            "multiline": true,
            "default": "CLIP_G"
          }
        ],
        "clip": [
          "CLIP"
        ],
        "text_l": [
          "STRING",
          {
            "multiline": true,
            "default": "CLIP_L"
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "CLIPTextEncodeSDXL",
    "display_name": "CLIPTextEncodeSDXL",
    "description": "",
    "category": "advanced/conditioning",
    "output_node": false
  },
  "Canny": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "low_threshold": [
          "FLOAT",
          {
            "default": 0.4,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "high_threshold": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Canny",
    "display_name": "Canny",
    "description": "",
    "category": "image/preprocessors",
    "output_node": false
  },
  "FreeU": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "b1": [
          "FLOAT",
          {
            "default": 1.1,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "b2": [
          "FLOAT",
          {
            "default": 1.2,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "s1": [
          "FLOAT",
          {
            "default": 0.9,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "s2": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "FreeU",
    "display_name": "FreeU",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "FreeU_V2": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "b1": [
          "FLOAT",
          {
            "default": 1.3,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "b2": [
          "FLOAT",
          {
            "default": 1.4,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "s1": [
          "FLOAT",
          {
            "default": 0.9,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "s2": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "FreeU_V2",
    "display_name": "FreeU_V2",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "SamplerCustom": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "add_noise": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "sampler": [
          "SAMPLER"
        ],
        "sigmas": [
          "SIGMAS"
        ],
        "latent_image": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "output",
      "denoised_output"
    ],
    "name": "SamplerCustom",
    "display_name": "SamplerCustom",
    "description": "",
    "category": "sampling/custom_sampling",
    "output_node": false
  },
  "BasicScheduler": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "name": "BasicScheduler",
    "display_name": "BasicScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "KarrasScheduler": {
    "input": {
      "required": {
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "sigma_max": [
          "FLOAT",
          {
            "default": 14.614642,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01,
            "round": false
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "default": 0.0291675,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01,
            "round": false
          }
        ],
        "rho": [
          "FLOAT",
          {
            "default": 7.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "name": "KarrasScheduler",
    "display_name": "KarrasScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "ExponentialScheduler": {
    "input": {
      "required": {
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "sigma_max": [
          "FLOAT",
          {
            "default": 14.614642,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01,
            "round": false
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "default": 0.0291675,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01,
            "round": false
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "name": "ExponentialScheduler",
    "display_name": "ExponentialScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "PolyexponentialScheduler": {
    "input": {
      "required": {
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "sigma_max": [
          "FLOAT",
          {
            "default": 14.614642,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01,
            "round": false
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "default": 0.0291675,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01,
            "round": false
          }
        ],
        "rho": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "name": "PolyexponentialScheduler",
    "display_name": "PolyexponentialScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "VPScheduler": {
    "input": {
      "required": {
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "beta_d": [
          "FLOAT",
          {
            "default": 19.9,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01,
            "round": false
          }
        ],
        "beta_min": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01,
            "round": false
          }
        ],
        "eps_s": [
          "FLOAT",
          {
            "default": 0.001,
            "min": 0.0,
            "max": 1.0,
            "step": 0.0001,
            "round": false
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "name": "VPScheduler",
    "display_name": "VPScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "SDTurboScheduler": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "steps": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "name": "SDTurboScheduler",
    "display_name": "SDTurboScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "KSamplerSelect": {
    "input": {
      "required": {
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "name": "KSamplerSelect",
    "display_name": "KSamplerSelect",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SamplerDPMPP_2M_SDE": {
    "input": {
      "required": {
        "solver_type": [
          [
            "midpoint",
            "heun"
          ]
        ],
        "eta": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ],
        "noise_device": [
          [
            "gpu",
            "cpu"
          ]
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "name": "SamplerDPMPP_2M_SDE",
    "display_name": "SamplerDPMPP_2M_SDE",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SamplerDPMPP_SDE": {
    "input": {
      "required": {
        "eta": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ],
        "r": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          }
        ],
        "noise_device": [
          [
            "gpu",
            "cpu"
          ]
        ]
      }
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "name": "SamplerDPMPP_SDE",
    "display_name": "SamplerDPMPP_SDE",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SplitSigmas": {
    "input": {
      "required": {
        "sigmas": [
          "SIGMAS"
        ],
        "step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "SIGMAS",
      "SIGMAS"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "SIGMAS",
      "SIGMAS"
    ],
    "name": "SplitSigmas",
    "display_name": "SplitSigmas",
    "description": "",
    "category": "sampling/custom_sampling/sigmas",
    "output_node": false
  },
  "FlipSigmas": {
    "input": {
      "required": {
        "sigmas": [
          "SIGMAS"
        ]
      }
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "name": "FlipSigmas",
    "display_name": "FlipSigmas",
    "description": "",
    "category": "sampling/custom_sampling/sigmas",
    "output_node": false
  },
  "HyperTile": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "tile_size": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "max": 2048
          }
        ],
        "swap_size": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 128
          }
        ],
        "max_depth": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10
          }
        ],
        "scale_depth": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "HyperTile",
    "display_name": "HyperTile",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "ModelSamplingDiscrete": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "sampling": [
          [
            "eps",
            "v_prediction",
            "lcm"
          ]
        ],
        "zsnr": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelSamplingDiscrete",
    "display_name": "ModelSamplingDiscrete",
    "description": "",
    "category": "advanced/model",
    "output_node": false
  },
  "ModelSamplingContinuousEDM": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "sampling": [
          [
            "v_prediction",
            "eps"
          ]
        ],
        "sigma_max": [
          "FLOAT",
          {
            "default": 120.0,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.001,
            "round": false
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "default": 0.002,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.001,
            "round": false
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "ModelSamplingContinuousEDM",
    "display_name": "ModelSamplingContinuousEDM",
    "description": "",
    "category": "advanced/model",
    "output_node": false
  },
  "RescaleCFG": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "multiplier": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "RescaleCFG",
    "display_name": "RescaleCFG",
    "description": "",
    "category": "advanced/model",
    "output_node": false
  },
  "PatchModelAddDownscale": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "block_number": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 32,
            "step": 1
          }
        ],
        "downscale_factor": [
          "FLOAT",
          {
            "default": 2.0,
            "min": 0.1,
            "max": 9.0,
            "step": 0.001
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 0.35,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "downscale_after_skip": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "downscale_method": [
          [
            "bicubic",
            "nearest-exact",
            "bilinear",
            "area",
            "bislerp"
          ]
        ],
        "upscale_method": [
          [
            "bicubic",
            "nearest-exact",
            "bilinear",
            "area",
            "bislerp"
          ]
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "PatchModelAddDownscale",
    "display_name": "PatchModelAddDownscale (Kohya Deep Shrink)",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "ImageCrop": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8192,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8192,
            "step": 1
          }
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageCrop",
    "display_name": "ImageCrop",
    "description": "",
    "category": "image/transform",
    "output_node": false
  },
  "RepeatImageBatch": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "amount": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "RepeatImageBatch",
    "display_name": "RepeatImageBatch",
    "description": "",
    "category": "image/batch",
    "output_node": false
  },
  "SaveAnimatedWEBP": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "fps": [
          "FLOAT",
          {
            "default": 6.0,
            "min": 0.01,
            "max": 1000.0,
            "step": 0.01
          }
        ],
        "lossless": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "quality": [
          "INT",
          {
            "default": 80,
            "min": 0,
            "max": 100
          }
        ],
        "method": [
          [
            "default",
            "fastest",
            "slowest"
          ]
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveAnimatedWEBP",
    "display_name": "SaveAnimatedWEBP",
    "description": "",
    "category": "image/animation",
    "output_node": true
  },
  "SaveAnimatedPNG": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "fps": [
          "FLOAT",
          {
            "default": 6.0,
            "min": 0.01,
            "max": 1000.0,
            "step": 0.01
          }
        ],
        "compress_level": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 9
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveAnimatedPNG",
    "display_name": "SaveAnimatedPNG",
    "description": "",
    "category": "image/animation",
    "output_node": true
  },
  "ImageOnlyCheckpointLoader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP_VISION",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP_VISION",
      "VAE"
    ],
    "name": "ImageOnlyCheckpointLoader",
    "display_name": "Image Only Checkpoint Loader (img2vid model)",
    "description": "",
    "category": "loaders/video_models",
    "output_node": false
  },
  "SVD_img2vid_Conditioning": {
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 16,
            "max": 8192,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 576,
            "min": 16,
            "max": 8192,
            "step": 8
          }
        ],
        "video_frames": [
          "INT",
          {
            "default": 14,
            "min": 1,
            "max": 4096
          }
        ],
        "motion_bucket_id": [
          "INT",
          {
            "default": 127,
            "min": 1,
            "max": 1023
          }
        ],
        "fps": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 1024
          }
        ],
        "augmentation_level": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "SVD_img2vid_Conditioning",
    "display_name": "SVD_img2vid_Conditioning",
    "description": "",
    "category": "conditioning/video_models",
    "output_node": false
  },
  "VideoLinearCFGGuidance": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "min_cfg": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.5,
            "round": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "VideoLinearCFGGuidance",
    "display_name": "VideoLinearCFGGuidance",
    "description": "",
    "category": "sampling/video_models",
    "output_node": false
  },
  "SelfAttentionGuidance": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "scale": [
          "FLOAT",
          {
            "default": 0.5,
            "min": -2.0,
            "max": 5.0,
            "step": 0.1
          }
        ],
        "blur_sigma": [
          "FLOAT",
          {
            "default": 2.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "SelfAttentionGuidance",
    "display_name": "Self-Attention Guidance",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "PerpNeg": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "empty_conditioning": [
          "CONDITIONING"
        ],
        "neg_scale": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "PerpNeg",
    "display_name": "Perp-Neg",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "StableZero123_Conditioning": {
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 8192,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 8192,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ],
        "elevation": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -180.0,
            "max": 180.0
          }
        ],
        "azimuth": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -180.0,
            "max": 180.0
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "name": "StableZero123_Conditioning",
    "display_name": "StableZero123_Conditioning",
    "description": "",
    "category": "conditioning/3d_models",
    "output_node": false
  },
  "ColorPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ColorPreprocessor",
    "display_name": "Color Pallete",
    "description": "",
    "category": "ControlNet Preprocessors/T2IAdapter-only",
    "output_node": false
  },
  "TilePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "pyrUp_iters": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "TilePreprocessor",
    "display_name": "Tile",
    "description": "",
    "category": "ControlNet Preprocessors/others",
    "output_node": false
  },
  "CannyEdgePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "low_threshold": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "high_threshold": [
          "INT",
          {
            "default": 200,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "CannyEdgePreprocessor",
    "display_name": "Canny Edge",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "ShufflePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ShufflePreprocessor",
    "display_name": "Content Shuffle",
    "description": "",
    "category": "ControlNet Preprocessors/T2IAdapter-only",
    "output_node": false
  },
  "InpaintPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "InpaintPreprocessor",
    "display_name": "Inpaint Preprocessor",
    "description": "",
    "category": "ControlNet Preprocessors/others",
    "output_node": false
  },
  "M-LSDPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "score_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.01,
            "max": 2.0,
            "step": 0.01
          }
        ],
        "dist_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.01,
            "max": 20.0,
            "step": 0.01
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "M-LSDPreprocessor",
    "display_name": "M-LSD Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "AnimeFace_SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "remove_background_using_abg": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 512,
            "max": 512,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "ABG_CHARACTER_MASK (MASK)"
    ],
    "name": "AnimeFace_SemSegPreprocessor",
    "display_name": "Anime Face Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "PiDiNetPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "PiDiNetPreprocessor",
    "display_name": "PiDiNet Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "BinaryPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "bin_threshold": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "BinaryPreprocessor",
    "display_name": "Binary Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "MediaPipe-FaceMeshPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "max_faces": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 50,
            "step": 1
          }
        ],
        "min_confidence": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.01,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "MediaPipe-FaceMeshPreprocessor",
    "display_name": "MediaPipe Face Mesh",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses",
    "output_node": false
  },
  "AnimeLineArtPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "AnimeLineArtPreprocessor",
    "display_name": "Anime Lineart",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "SAMPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "SAMPreprocessor",
    "display_name": "SAM Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/others",
    "output_node": false
  },
  "BAE-NormalMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "BAE-NormalMapPreprocessor",
    "display_name": "BAE - Normal Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Map",
    "output_node": false
  },
  "Manga2Anime_LineArt_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Manga2Anime_LineArt_Preprocessor",
    "display_name": "Manga Lineart (aka lineart_anime_denoise)",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Zoe-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Zoe-DepthMapPreprocessor",
    "display_name": "Zoe - Depth Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Map",
    "output_node": false
  },
  "OneFormer-COCO-SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "OneFormer-COCO-SemSegPreprocessor",
    "display_name": "OneFormer COCO Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "OneFormer-ADE20K-SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "OneFormer-ADE20K-SemSegPreprocessor",
    "display_name": "OneFormer ADE20K Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "LeReS-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "rm_nearest": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "rm_background": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "boost": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "disable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "LeReS-DepthMapPreprocessor",
    "display_name": "LeReS - Depth Map (enable boost for leres++)",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Map",
    "output_node": false
  },
  "LineArtPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "coarse": [
          [
            "disable",
            "enable"
          ],
          {
            "default": "disable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "LineArtPreprocessor",
    "display_name": "Realistic Lineart",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "HEDPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "HEDPreprocessor",
    "display_name": "HED Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "FakeScribblePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "safe": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "FakeScribblePreprocessor",
    "display_name": "Fake Scribble Lines (aka scribble_hed)",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "ScribblePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ScribblePreprocessor",
    "display_name": "Scribble Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Scribble_XDoG_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "threshold": [
          "INT",
          {
            "default": 32,
            "min": 1,
            "max": 64,
            "step": 64
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Scribble_XDoG_Preprocessor",
    "display_name": "Scribble XDoG Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "DensePosePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "model": [
          [
            "densepose_r50_fpn_dl.torchscript",
            "densepose_r101_fpn_dl.torchscript"
          ],
          {
            "default": "densepose_r50_fpn_dl.torchscript"
          }
        ],
        "cmap": [
          [
            "Viridis (MagicAnimate)",
            "Parula (CivitAI)"
          ],
          {
            "default": "Viridis (MagicAnimate)"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "DensePosePreprocessor",
    "display_name": "DensePose Estimation",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses",
    "output_node": false
  },
  "DWPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "detect_hand": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_body": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_face": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ],
        "bbox_detector": [
          [
            "yolox_l.torchscript.pt",
            "yolox_m.torchscript.pt",
            "yolox_s.torchscript.pt",
            "yolo_nas_l_fp16.onnx",
            "yolo_nas_m_fp16.onnx",
            "yolo_nas_s_fp16.onnx",
            "yolox_l.onnx",
            "yolox_m.onnx",
            "yolox_s.onnx"
          ],
          {
            "default": "yolox_l.onnx"
          }
        ],
        "pose_estimator": [
          [
            "dw-ll_ucoco_384_bs5.torchscript.pt",
            "dw-ll_ucoco_384.onnx",
            "dw-ll_ucoco.onnx",
            "dw-mm_ucoco.onnx",
            "dw-ss_ucoco.onnx"
          ],
          {
            "default": "dw-ll_ucoco_384.onnx"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "DWPreprocessor",
    "display_name": "DWPose Estimation",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses",
    "output_node": false
  },
  "AnimalPosePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "bbox_detector": [
          [
            "yolox_l.torchscript.pt",
            "yolox_m.torchscript.pt",
            "yolox_s.torchscript.pt",
            "yolo_nas_l_fp16.onnx",
            "yolo_nas_m_fp16.onnx",
            "yolo_nas_s_fp16.onnx",
            "yolox_l.onnx",
            "yolox_m.onnx",
            "yolox_s.onnx"
          ],
          {
            "default": "yolox_l.onnx"
          }
        ],
        "pose_estimator": [
          [
            "rtmpose-m_ap10k_256_bs5.torchscript.pt",
            "rtmpose-m_ap10k_256.onnx"
          ],
          {
            "default": "rtmpose-m_ap10k_256.onnx"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "AnimalPosePreprocessor",
    "display_name": "Animal Pose Estimation (AP10K)",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses",
    "output_node": false
  },
  "OpenposePreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "detect_hand": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_body": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "detect_face": [
          [
            "enable",
            "disable"
          ],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "OpenposePreprocessor",
    "display_name": "OpenPose Pose Recognition",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses",
    "output_node": false
  },
  "MiDaS-NormalMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "a": [
          "FLOAT",
          {
            "default": 6.283185307179586,
            "min": 0.0,
            "max": 15.707963267948966,
            "step": 0.05
          }
        ],
        "bg_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "MiDaS-NormalMapPreprocessor",
    "display_name": "MiDaS - Normal Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Map",
    "output_node": false
  },
  "MiDaS-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "a": [
          "FLOAT",
          {
            "default": 6.283185307179586,
            "min": 0.0,
            "max": 15.707963267948966,
            "step": 0.05
          }
        ],
        "bg_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "MiDaS-DepthMapPreprocessor",
    "display_name": "MiDaS - Depth Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Map",
    "output_node": false
  },
  "UniFormer-SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "UniFormer-SemSegPreprocessor",
    "display_name": "UniFormer Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "SemSegPreprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "SemSegPreprocessor",
    "display_name": "Semantic Segmentor (legacy, alias for UniFormer)",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "AIO_Preprocessor": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": {
        "preprocessor": [
          [
            "ColorPreprocessor",
            "TilePreprocessor",
            "CannyEdgePreprocessor",
            "ShufflePreprocessor",
            "M-LSDPreprocessor",
            "AnimeFace_SemSegPreprocessor",
            "PiDiNetPreprocessor",
            "BinaryPreprocessor",
            "MediaPipe-FaceMeshPreprocessor",
            "AnimeLineArtPreprocessor",
            "SAMPreprocessor",
            "BAE-NormalMapPreprocessor",
            "Manga2Anime_LineArt_Preprocessor",
            "Zoe-DepthMapPreprocessor",
            "OneFormer-COCO-SemSegPreprocessor",
            "OneFormer-ADE20K-SemSegPreprocessor",
            "LeReS-DepthMapPreprocessor",
            "LineArtPreprocessor",
            "HEDPreprocessor",
            "FakeScribblePreprocessor",
            "ScribblePreprocessor",
            "Scribble_XDoG_Preprocessor",
            "DensePosePreprocessor",
            "DWPreprocessor",
            "AnimalPosePreprocessor",
            "OpenposePreprocessor",
            "MiDaS-NormalMapPreprocessor",
            "MiDaS-DepthMapPreprocessor",
            "UniFormer-SemSegPreprocessor",
            "SemSegPreprocessor"
          ],
          {
            "default": "CannyEdgePreprocessor"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "AIO_Preprocessor",
    "display_name": "AIO Aux Preprocessor",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "PixelPerfectResolution": {
    "input": {
      "required": {
        "original_image": [
          "IMAGE"
        ],
        "image_gen_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "image_gen_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "resize_mode": [
          [
            "Just Resize",
            "Crop and Resize",
            "Resize and Fill"
          ],
          {
            "default": "Just Resize"
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "RESOLUTION (INT)"
    ],
    "name": "PixelPerfectResolution",
    "display_name": "Pixel Perfect Resolution",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "ImageGenResolutionFromImage": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE_GEN_WIDTH (INT)",
      "IMAGE_GEN_HEIGHT (INT)"
    ],
    "name": "ImageGenResolutionFromImage",
    "display_name": "Generation Resolution From Image",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "ImageGenResolutionFromLatent": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE_GEN_WIDTH (INT)",
      "IMAGE_GEN_HEIGHT (INT)"
    ],
    "name": "ImageGenResolutionFromLatent",
    "display_name": "Generation Resolution From Latent",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "HintImageEnchance": {
    "input": {
      "required": {
        "hint_image": [
          "IMAGE"
        ],
        "image_gen_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "image_gen_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "resize_mode": [
          [
            "Just Resize",
            "Crop and Resize",
            "Resize and Fill"
          ],
          {
            "default": "Just Resize"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "HintImageEnchance",
    "display_name": "Enchance And Resize Hint Images",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "ReroutePrimitive|pysssss": {
    "input": {
      "required": {
        "value": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "*"
    ],
    "name": "ReroutePrimitive|pysssss",
    "display_name": "Reroute Primitive \ud83d\udc0d",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "ShowText|pysssss": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "STRING"
    ],
    "name": "ShowText|pysssss",
    "display_name": "Show Text \ud83d\udc0d",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "Repeater|pysssss": {
    "input": {
      "required": {
        "source": [
          "*",
          {}
        ],
        "repeats": [
          "INT",
          {
            "min": 0,
            "max": 5000,
            "default": 2
          }
        ],
        "output": [
          [
            "single",
            "multi"
          ],
          {}
        ],
        "node_mode": [
          [
            "reuse",
            "create"
          ],
          {}
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "*"
    ],
    "name": "Repeater|pysssss",
    "display_name": "Repeater \ud83d\udc0d",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "MathExpression|pysssss": {
    "input": {
      "required": {
        "expression": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "pysssss.autocomplete": {
              "words": [
                {
                  "text": "round",
                  "value": "round()",
                  "showValue": false,
                  "hint": "number, dp? = 0",
                  "caretOffset": -1
                },
                {
                  "text": "ceil",
                  "value": "ceil()",
                  "showValue": false,
                  "hint": "number",
                  "caretOffset": -1
                },
                {
                  "text": "floor",
                  "value": "floor()",
                  "showValue": false,
                  "hint": "number",
                  "caretOffset": -1
                },
                {
                  "text": "min",
                  "value": "min()",
                  "showValue": false,
                  "hint": "...numbers",
                  "caretOffset": -1
                },
                {
                  "text": "max",
                  "value": "max()",
                  "showValue": false,
                  "hint": "...numbers",
                  "caretOffset": -1
                },
                {
                  "text": "randomint",
                  "value": "randomint()",
                  "showValue": false,
                  "hint": "min, max",
                  "caretOffset": -1
                },
                {
                  "text": "randomchoice",
                  "value": "randomchoice()",
                  "showValue": false,
                  "hint": "...numbers",
                  "caretOffset": -1
                }
              ],
              "separator": ""
            }
          }
        ]
      },
      "optional": {
        "a": [
          "INT,FLOAT,IMAGE,LATENT"
        ],
        "b": [
          "INT,FLOAT,IMAGE,LATENT"
        ],
        "c": [
          "INT,FLOAT,IMAGE,LATENT"
        ]
      },
      "hidden": {
        "extra_pnginfo": "EXTRA_PNGINFO",
        "prompt": "PROMPT"
      }
    },
    "output": [
      "INT",
      "FLOAT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "INT",
      "FLOAT"
    ],
    "name": "MathExpression|pysssss",
    "display_name": "Math Expression \ud83d\udc0d",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "LoraLoader|pysssss": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_name": [
          []
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -20.0,
            "max": 20.0,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -20.0,
            "max": 20.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP"
    ],
    "name": "LoraLoader|pysssss",
    "display_name": "Lora Loader \ud83d\udc0d",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "LoadText|pysssss": {
    "input": {
      "required": {
        "root_dir": [
          [
            "input",
            "output",
            "temp"
          ],
          {}
        ],
        "file": [
          [
            "[none]"
          ],
          {
            "pysssss.binding": [
              {
                "source": "root_dir",
                "callback": [
                  {
                    "type": "set",
                    "target": "$this.disabled",
                    "value": true
                  },
                  {
                    "type": "fetch",
                    "url": "/pysssss/text-file/{$source.value}",
                    "then": [
                      {
                        "type": "set",
                        "target": "$this.options.values",
                        "value": "$result"
                      },
                      {
                        "type": "validate-combo"
                      },
                      {
                        "type": "set",
                        "target": "$this.disabled",
                        "value": false
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "LoadText|pysssss",
    "display_name": "Load Text \ud83d\udc0d",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "SaveText|pysssss": {
    "input": {
      "required": {
        "root_dir": [
          [
            "input",
            "output",
            "temp"
          ],
          {}
        ],
        "file": [
          "STRING",
          {
            "default": "file.txt"
          }
        ],
        "append": [
          [
            "append",
            "overwrite",
            "new only"
          ],
          {}
        ],
        "insert": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "new line",
            "label_off": "none",
            "pysssss.binding": [
              {
                "source": "append",
                "callback": [
                  {
                    "type": "if",
                    "condition": [
                      {
                        "left": "$source.value",
                        "op": "eq",
                        "right": "\"append\""
                      }
                    ],
                    "true": [
                      {
                        "type": "set",
                        "target": "$this.disabled",
                        "value": false
                      }
                    ],
                    "false": [
                      {
                        "type": "set",
                        "target": "$this.disabled",
                        "value": true
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "text": [
          "STRING",
          {
            "forceInput": true,
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "SaveText|pysssss",
    "display_name": "Save Text \ud83d\udc0d",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "StringFunction|pysssss": {
    "input": {
      "required": {
        "action": [
          [
            "append",
            "replace"
          ],
          {}
        ],
        "tidy_tags": [
          [
            "yes",
            "no"
          ],
          {}
        ],
        "text_a": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "text_b": [
          "STRING",
          {
            "multiline": true
          }
        ]
      },
      "optional": {
        "text_c": [
          "STRING",
          {
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "StringFunction|pysssss",
    "display_name": "String Function \ud83d\udc0d",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "PlaySound|pysssss": {
    "input": {
      "required": {
        "any": [
          "*",
          {}
        ],
        "mode": [
          [
            "always",
            "on empty queue"
          ],
          {}
        ],
        "volume": [
          "FLOAT",
          {
            "min": 0,
            "max": 1,
            "step": 0.1,
            "default": 0.5
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "PlaySound|pysssss",
    "display_name": "PlaySound \ud83d\udc0d",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "ConstrainImage|pysssss": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "max_width": [
          "INT",
          {
            "default": 1024,
            "min": 0
          }
        ],
        "max_height": [
          "INT",
          {
            "default": 1024,
            "min": 0
          }
        ],
        "min_width": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "min_height": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "crop_if_required": [
          [
            "yes",
            "no"
          ],
          {
            "default": "no"
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ConstrainImage|pysssss",
    "display_name": "Constrain Image \ud83d\udc0d",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ReActorFaceSwap": {
    "input": {
      "required": {
        "enabled": [
          "BOOLEAN",
          {
            "default": true,
            "label_off": "OFF",
            "label_on": "ON"
          }
        ],
        "input_image": [
          "IMAGE"
        ],
        "swap_model": [
          [
            "inswapper_128.onnx"
          ]
        ],
        "facedetection": [
          [
            "retinaface_resnet50",
            "retinaface_mobile0.25",
            "YOLOv5l",
            "YOLOv5n"
          ]
        ],
        "face_restore_model": [
          [
            "none"
          ]
        ],
        "face_restore_visibility": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 1,
            "step": 0.05
          }
        ],
        "codeformer_weight": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1,
            "step": 0.05
          }
        ],
        "detect_gender_source": [
          [
            "no",
            "female",
            "male"
          ],
          {
            "default": "no"
          }
        ],
        "detect_gender_input": [
          [
            "no",
            "female",
            "male"
          ],
          {
            "default": "no"
          }
        ],
        "source_faces_index": [
          "STRING",
          {
            "default": "0"
          }
        ],
        "input_faces_index": [
          "STRING",
          {
            "default": "0"
          }
        ],
        "console_log_level": [
          [
            0,
            1,
            2
          ],
          {
            "default": 1
          }
        ]
      },
      "optional": {
        "source_image": [
          "IMAGE"
        ],
        "face_model": [
          "FACE_MODEL"
        ]
      }
    },
    "output": [
      "IMAGE",
      "FACE_MODEL"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "FACE_MODEL"
    ],
    "name": "ReActorFaceSwap",
    "display_name": "ReActor - Fast Face Swap",
    "description": "",
    "category": "ReActor",
    "output_node": false
  },
  "ReActorLoadFaceModel": {
    "input": {
      "required": {
        "face_model": [
          [
            "none"
          ]
        ]
      }
    },
    "output": [
      "FACE_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FACE_MODEL"
    ],
    "name": "ReActorLoadFaceModel",
    "display_name": "Load Face Model",
    "description": "",
    "category": "ReActor",
    "output_node": false
  },
  "ReActorSaveFaceModel": {
    "input": {
      "required": {
        "save_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_off": "OFF",
            "label_on": "ON"
          }
        ],
        "face_model_name": [
          "STRING",
          {
            "default": "default"
          }
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ],
        "face_model": [
          "FACE_MODEL"
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ReActorSaveFaceModel",
    "display_name": "Save Face Model",
    "description": "",
    "category": "ReActor",
    "output_node": true
  },
  "Float": {
    "input": {
      "required": {
        "Value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Float",
    "display_name": "Float",
    "description": "",
    "category": "Derfuu_Nodes/Variables",
    "output_node": false
  },
  "Integer": {
    "input": {
      "required": {
        "Value": [
          "FLOAT",
          {
            "default": 1,
            "min": -9223372036854775807,
            "max": 9223372036854775807,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INT"
    ],
    "name": "Integer",
    "display_name": "Integer",
    "description": "",
    "category": "Derfuu_Nodes/Variables",
    "output_node": false
  },
  "Text": {
    "input": {
      "required": {
        "Text": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text",
    "display_name": "Text",
    "description": "",
    "category": "Derfuu_Nodes/Variables",
    "output_node": false
  },
  "Text box": {
    "input": {
      "required": {
        "Text": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text box",
    "display_name": "Text box",
    "description": "",
    "category": "Derfuu_Nodes/Variables",
    "output_node": false
  },
  "Float debug print": {
    "input": {
      "required": {
        "Prefix": [
          "STRING",
          {
            "default": ""
          }
        ],
        "Value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Float debug print",
    "display_name": "Float debug print",
    "description": "",
    "category": "Derfuu_Nodes/Debug",
    "output_node": true
  },
  "Int debug print": {
    "input": {
      "required": {
        "Prefix": [
          "STRING",
          {
            "default": ""
          }
        ],
        "Value": [
          "INT",
          {
            "default": 1,
            "min": -9223372036854775807,
            "max": 9223372036854775807,
            "step": 1
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Int debug print",
    "display_name": "Int debug print",
    "description": "",
    "category": "Derfuu_Nodes/Debug",
    "output_node": true
  },
  "Tuple debug print": {
    "input": {
      "required": {
        "Prefix": [
          "STRING",
          {
            "default": ""
          }
        ],
        "Values": [
          "TUPLE"
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Tuple debug print",
    "display_name": "Tuple debug print",
    "description": "",
    "category": "Derfuu_Nodes/Debug",
    "output_node": true
  },
  "String debug print": {
    "input": {
      "required": {
        "Prefix": [
          "STRING",
          {
            "default": ""
          }
        ],
        "Text": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "String debug print",
    "display_name": "String debug print",
    "description": "",
    "category": "Derfuu_Nodes/Debug",
    "output_node": true
  },
  "Random": {
    "input": {
      "required": {
        "Value_A": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ],
        "Value_B": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Random",
    "display_name": "Random",
    "description": "",
    "category": "Derfuu_Nodes/Functions",
    "output_node": false
  },
  "Tuple": {
    "input": {
      "required": {
        "Value_A": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ],
        "Value_B": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ],
        "round_": [
          [
            "No",
            "Yes",
            "Ceil",
            "Floor"
          ]
        ]
      }
    },
    "output": [
      "TUPLE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "TUPLE"
    ],
    "name": "Tuple",
    "display_name": "Tuple",
    "description": "",
    "category": "Derfuu_Nodes/Tuples",
    "output_node": false
  },
  "Int to tuple": {
    "input": {
      "required": {
        "Value_A": [
          "INT",
          {
            "default": 1,
            "min": -9223372036854775807,
            "max": 9223372036854775807,
            "step": 1
          }
        ],
        "Value_B": [
          "INT",
          {
            "default": 1,
            "min": -9223372036854775807,
            "max": 9223372036854775807,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "TUPLE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "TUPLE"
    ],
    "name": "Int to tuple",
    "display_name": "Int to tuple",
    "description": "",
    "category": "Derfuu_Nodes/Tuples",
    "output_node": false
  },
  "Tuple to floats": {
    "input": {
      "required": {
        "Tuple": [
          "TUPLE"
        ]
      }
    },
    "output": [
      "FLOAT",
      "FLOAT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "FLOAT",
      "FLOAT"
    ],
    "name": "Tuple to floats",
    "display_name": "Tuple to floats",
    "description": "",
    "category": "Derfuu_Nodes/Tuples",
    "output_node": false
  },
  "Tuple to ints": {
    "input": {
      "required": {
        "Tuple": [
          "TUPLE"
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "INT",
      "INT"
    ],
    "name": "Tuple to ints",
    "display_name": "Tuple to ints",
    "description": "",
    "category": "Derfuu_Nodes/Tuples",
    "output_node": false
  },
  "Tuple swap": {
    "input": {
      "required": {
        "Tuple": [
          "TUPLE"
        ]
      }
    },
    "output": [
      "TUPLE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "TUPLE"
    ],
    "name": "Tuple swap",
    "display_name": "Tuple swap",
    "description": "",
    "category": "Derfuu_Nodes/Tuples",
    "output_node": false
  },
  "Tuple multiply": {
    "input": {
      "required": {
        "Tuple": [
          "TUPLE"
        ],
        "Value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "TUPLE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "TUPLE"
    ],
    "name": "Tuple multiply",
    "display_name": "Tuple multiply",
    "description": "",
    "category": "Derfuu_Nodes/Tuples",
    "output_node": false
  },
  "Int to float": {
    "input": {
      "required": {
        "Value": [
          "INT",
          {
            "default": 1,
            "min": -9223372036854775807,
            "max": 9223372036854775807,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Int to float",
    "display_name": "Int to float",
    "description": "",
    "category": "Derfuu_Nodes/Functions/Converters",
    "output_node": false
  },
  "Ceil": {
    "input": {
      "required": {
        "Value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INT"
    ],
    "name": "Ceil",
    "display_name": "Ceil",
    "description": "",
    "category": "Derfuu_Nodes/Functions/Converters",
    "output_node": false
  },
  "Floor": {
    "input": {
      "required": {
        "Value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INT"
    ],
    "name": "Floor",
    "display_name": "Floor",
    "description": "",
    "category": "Derfuu_Nodes/Functions/Converters",
    "output_node": false
  },
  "Absolute value": {
    "input": {
      "required": {
        "Value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ],
        "negative_out": [
          [
            false,
            true
          ]
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Absolute value",
    "display_name": "Absolute value",
    "description": "",
    "category": "Derfuu_Nodes/Functions/Converters",
    "output_node": false
  },
  "Get latent size": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ],
        "original": [
          [
            false,
            true
          ]
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "TUPLE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "INT",
      "INT",
      "TUPLE"
    ],
    "name": "Get latent size",
    "display_name": "Get latent size",
    "description": "",
    "category": "Derfuu_Nodes/Functions",
    "output_node": false
  },
  "Get image size": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "TUPLE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "INT",
      "INT",
      "TUPLE"
    ],
    "name": "Get image size",
    "display_name": "Get image size",
    "description": "",
    "category": "Derfuu_Nodes/Functions",
    "output_node": false
  },
  "Sum": {
    "input": {
      "required": {
        "Value_A": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ],
        "Value_B": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Sum",
    "display_name": "Sum",
    "description": "",
    "category": "Derfuu_Nodes/Math",
    "output_node": false
  },
  "Subtract": {
    "input": {
      "required": {
        "Value_A": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ],
        "Value_B": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Subtract",
    "display_name": "Subtract",
    "description": "",
    "category": "Derfuu_Nodes/Math",
    "output_node": false
  },
  "Multiply": {
    "input": {
      "required": {
        "Value_A": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ],
        "Value_B": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Multiply",
    "display_name": "Multiply",
    "description": "",
    "category": "Derfuu_Nodes/Math",
    "output_node": false
  },
  "Divide": {
    "input": {
      "required": {
        "Numerator": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ],
        "Denominator": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Divide",
    "display_name": "Divide",
    "description": "",
    "category": "Derfuu_Nodes/Math",
    "output_node": false
  },
  "Power": {
    "input": {
      "required": {
        "Value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ],
        "Exponent": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Power",
    "display_name": "Power",
    "description": "",
    "category": "Derfuu_Nodes/Math",
    "output_node": false
  },
  "Square root": {
    "input": {
      "required": {
        "Value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "FLOAT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "FLOAT",
      "FLOAT"
    ],
    "name": "Square root",
    "display_name": "Square root",
    "description": "",
    "category": "Derfuu_Nodes/Math",
    "output_node": false
  },
  "Sinus": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ],
        "type_": [
          [
            "RAD",
            "DEG"
          ]
        ],
        "arcSin": [
          [
            false,
            true
          ]
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Sinus",
    "display_name": "Sinus",
    "description": "",
    "category": "Derfuu_Nodes/Math/Trigonometry",
    "output_node": false
  },
  "Cosines": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ],
        "type_": [
          [
            "RAD",
            "DEG"
          ]
        ],
        "arcCos": [
          [
            false,
            true
          ]
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Cosines",
    "display_name": "Cosines",
    "description": "",
    "category": "Derfuu_Nodes/Math/Trigonometry",
    "output_node": false
  },
  "Tangent": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ],
        "type_": [
          [
            "RAD",
            "DEG"
          ]
        ],
        "arcTan": [
          [
            false,
            true
          ]
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Tangent",
    "display_name": "Tangent",
    "description": "",
    "category": "Derfuu_Nodes/Math/Trigonometry",
    "output_node": false
  },
  "Latent Scale by ratio": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ],
        "modifier": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ],
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "Latent Scale by ratio",
    "display_name": "Latent Scale by ratio",
    "description": "",
    "category": "Derfuu_Nodes/Modded nodes/Latent",
    "output_node": false
  },
  "Latent Scale to side": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ],
        "side_length": [
          "INT",
          {
            "default": 1,
            "min": -9223372036854775807,
            "max": 9223372036854775807,
            "step": 1
          }
        ],
        "side": [
          [
            "Longest",
            "Width",
            "Height"
          ]
        ],
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "Latent Scale to side",
    "display_name": "Latent Scale to side",
    "description": "",
    "category": "Derfuu_Nodes/Modded nodes/Latent",
    "output_node": false
  },
  "Image scale by ratio": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "upscale_by": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image scale by ratio",
    "display_name": "Image scale by ratio",
    "description": "",
    "category": "Derfuu_Nodes/Modded nodes/Image",
    "output_node": false
  },
  "Image scale to side": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "side_length": [
          "INT",
          {
            "default": 1,
            "min": -9223372036854775807,
            "max": 9223372036854775807,
            "step": 1
          }
        ],
        "side": [
          [
            "Longest",
            "Width",
            "Height"
          ]
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image scale to side",
    "display_name": "Image scale to side",
    "description": "",
    "category": "Derfuu_Nodes/Modded nodes/Image",
    "output_node": false
  },
  "Conditioning area scale by ratio": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "modifier": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ],
        "strength_modifier": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "Conditioning area scale by ratio",
    "display_name": "Conditioning area scale by ratio",
    "description": "",
    "category": "Derfuu_Nodes/Modded nodes/Conditions",
    "output_node": false
  },
  "ConditioningSetArea with tuples": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "size_tuple": [
          "TUPLE"
        ],
        "offset_tuple": [
          "TUPLE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -1.7976931348623157e+308,
            "max": 1.7976931348623157e+308,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConditioningSetArea with tuples",
    "display_name": "ConditioningSetArea with tuples",
    "description": "",
    "category": "Derfuu_Nodes/Tuples/Modded nodes/Conditioning",
    "output_node": false
  },
  "LatentComposite with tuples": {
    "input": {
      "required": {
        "samples_to": [
          "LATENT"
        ],
        "samples_from": [
          "LATENT"
        ],
        "position_tuple": [
          "TUPLE"
        ],
        "feather": [
          "INT",
          {
            "default": 1,
            "min": -9223372036854775807,
            "max": 9223372036854775807,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentComposite with tuples",
    "display_name": "LatentComposite with tuples",
    "description": "",
    "category": "Derfuu_Nodes/Tuples/Modded nodes/Latents",
    "output_node": false
  },
  "FaceRestoreCFWithModel": {
    "input": {
      "required": {
        "facerestore_model": [
          "FACERESTORE_MODEL"
        ],
        "image": [
          "IMAGE"
        ],
        "facedetection": [
          [
            "retinaface_resnet50",
            "retinaface_mobile0.25",
            "YOLOv5l",
            "YOLOv5n"
          ]
        ],
        "codeformer_fidelity": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "FaceRestoreCFWithModel",
    "display_name": "FaceRestoreCFWithModel",
    "description": "",
    "category": "facerestore_cf",
    "output_node": false
  },
  "CropFace": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "facedetection": [
          [
            "retinaface_resnet50",
            "retinaface_mobile0.25",
            "YOLOv5l",
            "YOLOv5n"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "CropFace",
    "display_name": "CropFace",
    "description": "",
    "category": "facerestore_cf",
    "output_node": false
  },
  "FaceRestoreModelLoader": {
    "input": {
      "required": {
        "model_name": [
          []
        ]
      }
    },
    "output": [
      "FACERESTORE_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FACERESTORE_MODEL"
    ],
    "name": "FaceRestoreModelLoader",
    "display_name": "FaceRestoreModelLoader",
    "description": "",
    "category": "facerestore_cf",
    "output_node": false
  },
  "SeargeTextInputV2": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "SRG_PROMPT_TEXT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "prompt_text"
    ],
    "name": "SeargeTextInputV2",
    "display_name": "Text Input v2",
    "description": "",
    "category": "Searge/UI/Prompting",
    "output_node": false
  },
  "SeargePromptAdapterV2": {
    "input": {
      "required": {},
      "optional": {
        "data": [
          "SRG_DATA_STREAM"
        ],
        "main_prompt": [
          "SRG_PROMPT_TEXT"
        ],
        "secondary_prompt": [
          "SRG_PROMPT_TEXT"
        ],
        "style_prompt": [
          "SRG_PROMPT_TEXT"
        ],
        "negative_main_prompt": [
          "SRG_PROMPT_TEXT"
        ],
        "negative_secondary_prompt": [
          "SRG_PROMPT_TEXT"
        ],
        "negative_style_prompt": [
          "SRG_PROMPT_TEXT"
        ]
      }
    },
    "output": [
      "SRG_DATA_STREAM",
      "SRG_DATA_STREAM"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "data",
      "prompts"
    ],
    "name": "SeargePromptAdapterV2",
    "display_name": "Prompt Adapter v2",
    "description": "",
    "category": "Searge/UI/Prompting",
    "output_node": false
  },
  "SeargeImageAdapterV2": {
    "input": {
      "required": {},
      "optional": {
        "data": [
          "SRG_DATA_STREAM"
        ],
        "source_image": [
          "IMAGE"
        ],
        "image_mask": [
          "MASK"
        ],
        "uploaded_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "SRG_DATA_STREAM",
      "SRG_DATA_STREAM"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "data",
      "image_inputs"
    ],
    "name": "SeargeImageAdapterV2",
    "display_name": "Image Adapter v2",
    "description": "",
    "category": "Searge/UI/Prompting",
    "output_node": false
  },
  "SeargeControlnetAdapterV2": {
    "input": {
      "required": {
        "controlnet_mode": [
          [
            "none",
            "revision",
            "canny",
            "depth",
            "recolor",
            "sketch",
            "custom"
          ],
          {
            "default": "none"
          }
        ],
        "controlnet_preprocessor": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 10.0,
            "step": 0.05
          }
        ],
        "low_threshold": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.0,
            "max": 1.0,
            "step": 0.05
          }
        ],
        "high_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.05
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.05
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.05
          }
        ],
        "noise_augmentation": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.05
          }
        ],
        "revision_enhancer": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "data": [
          "SRG_DATA_STREAM"
        ],
        "source_image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "SRG_DATA_STREAM",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "data",
      "preview"
    ],
    "name": "SeargeControlnetAdapterV2",
    "display_name": "Controlnet Adapter v2",
    "description": "",
    "category": "Searge/UI/Prompting",
    "output_node": false
  },
  "SeargeSeparator": {
    "input": {
      "required": {}
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SeargeSeparator",
    "display_name": "Separator",
    "description": "",
    "category": "Searge/UI",
    "output_node": false
  },
  "SeargePreviewImage": {
    "input": {
      "required": {
        "enabled": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      },
      "optional": {
        "images": [
          "IMAGE"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "images"
    ],
    "name": "SeargePreviewImage",
    "display_name": "SeargePreviewImage",
    "description": "",
    "category": "Searge/UI",
    "output_node": true
  },
  "SeargeAdvancedParameters": {
    "input": {
      "required": {
        "dynamic_cfg_method": [
          [
            "none",
            "interpolate",
            "rescale",
            "tonemap"
          ],
          {
            "default": "none"
          }
        ],
        "dynamic_cfg_factor": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -1.0,
            "max": 1.0,
            "step": 0.05
          }
        ],
        "refiner_detail_boost": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.05
          }
        ],
        "contrast_factor": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.05
          }
        ],
        "saturation_factor": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.05
          }
        ],
        "latent_detailer": [
          [
            "none",
            "normal",
            "soft",
            "blurry",
            "soft blurry"
          ],
          {
            "default": "none"
          }
        ]
      },
      "optional": {
        "data": [
          "SRG_DATA_STREAM"
        ]
      }
    },
    "output": [
      "SRG_DATA_STREAM"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "data"
    ],
    "name": "SeargeAdvancedParameters",
    "display_name": "Advanced Parameters v2",
    "description": "",
    "category": "Searge/UI/Inputs",
    "output_node": false
  },
  "SeargeConditioningParameters": {
    "input": {
      "required": {
        "base_conditioning_scale": [
          "FLOAT",
          {
            "default": 2.0,
            "min": 0.5,
            "max": 4.0,
            "step": 0.25
          }
        ],
        "refiner_conditioning_scale": [
          "FLOAT",
          {
            "default": 2.0,
            "min": 0.5,
            "max": 4.0,
            "step": 0.25
          }
        ],
        "target_conditioning_scale": [
          "FLOAT",
          {
            "default": 2.0,
            "min": 0.5,
            "max": 4.0,
            "step": 0.25
          }
        ],
        "positive_conditioning_scale": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 0.25,
            "max": 2.0,
            "step": 0.25
          }
        ],
        "negative_conditioning_scale": [
          "FLOAT",
          {
            "default": 0.75,
            "min": 0.25,
            "max": 2.0,
            "step": 0.25
          }
        ],
        "positive_aesthetic_score": [
          "FLOAT",
          {
            "default": 6.0,
            "min": 0.5,
            "max": 10.0,
            "step": 0.5
          }
        ],
        "negative_aesthetic_score": [
          "FLOAT",
          {
            "default": 2.5,
            "min": 0.5,
            "max": 10.0,
            "step": 0.5
          }
        ],
        "precondition_mode": [
          [
            "none",
            "gaussian"
          ]
        ],
        "precondition_strength": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.0,
            "max": 1.0,
            "step": 0.05
          }
        ]
      },
      "optional": {
        "data": [
          "SRG_DATA_STREAM"
        ]
      }
    },
    "output": [
      "SRG_DATA_STREAM"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "data"
    ],
    "name": "SeargeConditioningParameters",
    "display_name": "Conditioning Parameters v2",
    "description": "",
    "category": "Searge/UI/Inputs",
    "output_node": false
  },
  "SeargeConditionMixing": {
    "input": {
      "required": {},
      "optional": {
        "data": [
          "SRG_DATA_STREAM"
        ]
      }
    },
    "output": [
      "SRG_DATA_STREAM"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "data"
    ],
    "name": "SeargeConditionMixing",
    "display_name": "Condition Mixing v2",
    "description": "",
    "category": "Searge/UI/Inputs",
    "output_node": false
  },
  "SeargeControlnetModels": {
    "input": {
      "required": {
        "clip_vision": [
          [
            "none"
          ]
        ],
        "canny_checkpoint": [
          [
            "none",
            "SD1-5/control_v11e_sd15_ip2p_fp16.safetensors",
            "SD1-5/control_v11e_sd15_shuffle_fp16.safetensors",
            "SD1-5/control_v11f1e_sd15_tile.pth",
            "SD1-5/control_v11f1e_sd15_tile_fp16.safetensors",
            "SD1-5/control_v11f1p_sd15_depth_fp16.safetensors",
            "SD1-5/control_v11p_sd15_canny_fp16.safetensors",
            "SD1-5/control_v11p_sd15_inpaint_fp16.safetensors",
            "SD1-5/control_v11p_sd15_lineart_fp16.safetensors",
            "SD1-5/control_v11p_sd15_mlsd_fp16.safetensors",
            "SD1-5/control_v11p_sd15_normalbae_fp16.safetensors",
            "SD1-5/control_v11p_sd15_openpose_fp16.safetensors",
            "SD1-5/control_v11p_sd15_scribble_fp16.safetensors",
            "SD1-5/control_v11p_sd15_seg_fp16.safetensors",
            "SD1-5/control_v11p_sd15_softedge_fp16.safetensors",
            "SD1-5/control_v11p_sd15s2_lineart_anime_fp16.safetensors",
            "SDXL/control-lora-canny-rank256.safetensors",
            "SDXL/control-lora-depth-rank256.safetensors",
            "SDXL/control-lora-openposeXL2-rank256.safetensors",
            "SDXL/control-lora-recolor-rank256.safetensors",
            "SDXL/control-lora-sketch-rank256.safetensors"
          ]
        ],
        "depth_checkpoint": [
          [
            "none",
            "SD1-5/control_v11e_sd15_ip2p_fp16.safetensors",
            "SD1-5/control_v11e_sd15_shuffle_fp16.safetensors",
            "SD1-5/control_v11f1e_sd15_tile.pth",
            "SD1-5/control_v11f1e_sd15_tile_fp16.safetensors",
            "SD1-5/control_v11f1p_sd15_depth_fp16.safetensors",
            "SD1-5/control_v11p_sd15_canny_fp16.safetensors",
            "SD1-5/control_v11p_sd15_inpaint_fp16.safetensors",
            "SD1-5/control_v11p_sd15_lineart_fp16.safetensors",
            "SD1-5/control_v11p_sd15_mlsd_fp16.safetensors",
            "SD1-5/control_v11p_sd15_normalbae_fp16.safetensors",
            "SD1-5/control_v11p_sd15_openpose_fp16.safetensors",
            "SD1-5/control_v11p_sd15_scribble_fp16.safetensors",
            "SD1-5/control_v11p_sd15_seg_fp16.safetensors",
            "SD1-5/control_v11p_sd15_softedge_fp16.safetensors",
            "SD1-5/control_v11p_sd15s2_lineart_anime_fp16.safetensors",
            "SDXL/control-lora-canny-rank256.safetensors",
            "SDXL/control-lora-depth-rank256.safetensors",
            "SDXL/control-lora-openposeXL2-rank256.safetensors",
            "SDXL/control-lora-recolor-rank256.safetensors",
            "SDXL/control-lora-sketch-rank256.safetensors"
          ]
        ],
        "recolor_checkpoint": [
          [
            "none",
            "SD1-5/control_v11e_sd15_ip2p_fp16.safetensors",
            "SD1-5/control_v11e_sd15_shuffle_fp16.safetensors",
            "SD1-5/control_v11f1e_sd15_tile.pth",
            "SD1-5/control_v11f1e_sd15_tile_fp16.safetensors",
            "SD1-5/control_v11f1p_sd15_depth_fp16.safetensors",
            "SD1-5/control_v11p_sd15_canny_fp16.safetensors",
            "SD1-5/control_v11p_sd15_inpaint_fp16.safetensors",
            "SD1-5/control_v11p_sd15_lineart_fp16.safetensors",
            "SD1-5/control_v11p_sd15_mlsd_fp16.safetensors",
            "SD1-5/control_v11p_sd15_normalbae_fp16.safetensors",
            "SD1-5/control_v11p_sd15_openpose_fp16.safetensors",
            "SD1-5/control_v11p_sd15_scribble_fp16.safetensors",
            "SD1-5/control_v11p_sd15_seg_fp16.safetensors",
            "SD1-5/control_v11p_sd15_softedge_fp16.safetensors",
            "SD1-5/control_v11p_sd15s2_lineart_anime_fp16.safetensors",
            "SDXL/control-lora-canny-rank256.safetensors",
            "SDXL/control-lora-depth-rank256.safetensors",
            "SDXL/control-lora-openposeXL2-rank256.safetensors",
            "SDXL/control-lora-recolor-rank256.safetensors",
            "SDXL/control-lora-sketch-rank256.safetensors"
          ]
        ],
        "sketch_checkpoint": [
          [
            "none",
            "SD1-5/control_v11e_sd15_ip2p_fp16.safetensors",
            "SD1-5/control_v11e_sd15_shuffle_fp16.safetensors",
            "SD1-5/control_v11f1e_sd15_tile.pth",
            "SD1-5/control_v11f1e_sd15_tile_fp16.safetensors",
            "SD1-5/control_v11f1p_sd15_depth_fp16.safetensors",
            "SD1-5/control_v11p_sd15_canny_fp16.safetensors",
            "SD1-5/control_v11p_sd15_inpaint_fp16.safetensors",
            "SD1-5/control_v11p_sd15_lineart_fp16.safetensors",
            "SD1-5/control_v11p_sd15_mlsd_fp16.safetensors",
            "SD1-5/control_v11p_sd15_normalbae_fp16.safetensors",
            "SD1-5/control_v11p_sd15_openpose_fp16.safetensors",
            "SD1-5/control_v11p_sd15_scribble_fp16.safetensors",
            "SD1-5/control_v11p_sd15_seg_fp16.safetensors",
            "SD1-5/control_v11p_sd15_softedge_fp16.safetensors",
            "SD1-5/control_v11p_sd15s2_lineart_anime_fp16.safetensors",
            "SDXL/control-lora-canny-rank256.safetensors",
            "SDXL/control-lora-depth-rank256.safetensors",
            "SDXL/control-lora-openposeXL2-rank256.safetensors",
            "SDXL/control-lora-recolor-rank256.safetensors",
            "SDXL/control-lora-sketch-rank256.safetensors"
          ]
        ],
        "custom_checkpoint": [
          [
            "none",
            "SD1-5/control_v11e_sd15_ip2p_fp16.safetensors",
            "SD1-5/control_v11e_sd15_shuffle_fp16.safetensors",
            "SD1-5/control_v11f1e_sd15_tile.pth",
            "SD1-5/control_v11f1e_sd15_tile_fp16.safetensors",
            "SD1-5/control_v11f1p_sd15_depth_fp16.safetensors",
            "SD1-5/control_v11p_sd15_canny_fp16.safetensors",
            "SD1-5/control_v11p_sd15_inpaint_fp16.safetensors",
            "SD1-5/control_v11p_sd15_lineart_fp16.safetensors",
            "SD1-5/control_v11p_sd15_mlsd_fp16.safetensors",
            "SD1-5/control_v11p_sd15_normalbae_fp16.safetensors",
            "SD1-5/control_v11p_sd15_openpose_fp16.safetensors",
            "SD1-5/control_v11p_sd15_scribble_fp16.safetensors",
            "SD1-5/control_v11p_sd15_seg_fp16.safetensors",
            "SD1-5/control_v11p_sd15_softedge_fp16.safetensors",
            "SD1-5/control_v11p_sd15s2_lineart_anime_fp16.safetensors",
            "SDXL/control-lora-canny-rank256.safetensors",
            "SDXL/control-lora-depth-rank256.safetensors",
            "SDXL/control-lora-openposeXL2-rank256.safetensors",
            "SDXL/control-lora-recolor-rank256.safetensors",
            "SDXL/control-lora-sketch-rank256.safetensors"
          ]
        ]
      },
      "optional": {
        "data": [
          "SRG_DATA_STREAM"
        ]
      }
    },
    "output": [
      "SRG_DATA_STREAM"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "data"
    ],
    "name": "SeargeControlnetModels",
    "display_name": "Controlnet Models Selector v2",
    "description": "",
    "category": "Searge/UI/Inputs",
    "output_node": false
  },
  "SeargeCustomPromptMode": {
    "input": {
      "required": {},
      "optional": {
        "data": [
          "SRG_DATA_STREAM"
        ]
      }
    },
    "output": [
      "SRG_DATA_STREAM"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "data"
    ],
    "name": "SeargeCustomPromptMode",
    "display_name": "Custom Prompt Mode v2",
    "description": "",
    "category": "Searge/UI/Inputs",
    "output_node": false
  },
  "SeargeFreeU": {
    "input": {
      "required": {
        "freeu_mode": [
          [
            "none",
            "custom",
            "default",
            "subtle",
            "sdxl",
            "freeu_v2-sdxl",
            "detailed",
            "sd-2.1",
            "sd-1.5"
          ]
        ],
        "b1": [
          "FLOAT",
          {
            "default": 1.3,
            "min": 1.0,
            "max": 1.4,
            "step": 0.01
          }
        ],
        "b2": [
          "FLOAT",
          {
            "default": 1.4,
            "min": 1.2,
            "max": 1.6,
            "step": 0.01
          }
        ],
        "s1": [
          "FLOAT",
          {
            "default": 0.9,
            "min": 0.0,
            "max": 1.0,
            "step": 0.05
          }
        ],
        "s2": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 1.0,
            "step": 0.05
          }
        ],
        "freeu_version": [
          [
            "freeu_v1",
            "freeu_v2"
          ]
        ]
      },
      "optional": {
        "data": [
          "SRG_DATA_STREAM"
        ]
      }
    },
    "output": [
      "SRG_DATA_STREAM"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "data"
    ],
    "name": "SeargeFreeU",
    "display_name": "FreeU v2",
    "description": "",
    "category": "Searge/UI/Inputs",
    "output_node": false
  },
  "SeargeGenerationParameters": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551600
          }
        ],
        "image_size_preset": [
          [
            "none - use settings",
            "1024x1024 (1:1)",
            "1152x896 (4:3)",
            "1216x832 (3:2)",
            "1344x768 (16:9)",
            "1536x640 (21:9)",
            "896x1152 (3:4)",
            "832x1216 (2:3)",
            "768x1344 (9:16)",
            "640x1536 (9:21)",
            "from source image"
          ]
        ],
        "image_width": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "image_height": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 200
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7.0,
            "min": 0.5,
            "max": 30.0,
            "step": 0.5
          }
        ],
        "sampler_preset": [
          [
            "none - use settings",
            "1 - DPM++ 2M Karras",
            "2 - Euler a",
            "3 - DPM++ 2M SDE Karras",
            "4 - DPM++ 3M SDE Exp",
            "5 - DDIM Uniform"
          ]
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ],
          {
            "default": "dpmpp_2m"
          }
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ],
          {
            "default": "karras"
          }
        ],
        "base_vs_refiner_ratio": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0.0,
            "max": 1.0,
            "step": 0.05
          }
        ]
      },
      "optional": {
        "data": [
          "SRG_DATA_STREAM"
        ]
      }
    },
    "output": [
      "SRG_DATA_STREAM"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "data"
    ],
    "name": "SeargeGenerationParameters",
    "display_name": "Generation Parameters v2",
    "description": "",
    "category": "Searge/UI/Inputs",
    "output_node": false
  },
  "SeargeHighResolution": {
    "input": {
      "required": {
        "hires_mode": [
          [
            "none",
            "simple - fast",
            "normal"
          ],
          {
            "default": "none"
          }
        ],
        "hires_scale": [
          [
            "1.25x",
            "1.5x",
            "2x"
          ],
          {
            "default": "1.5x"
          }
        ],
        "hires_denoise": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "hires_softness": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.05
          }
        ],
        "hires_detail_boost": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.05
          }
        ],
        "hires_contrast_factor": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.05
          }
        ],
        "hires_saturation_factor": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.05
          }
        ],
        "hires_latent_detailer": [
          [
            "none",
            "normal",
            "soft",
            "blurry",
            "soft blurry"
          ],
          {
            "default": "none"
          }
        ],
        "final_upscale_size": [
          [
            "none",
            "1.2x",
            "1.25x",
            "1.333x",
            "1.5x",
            "2.0x",
            "3.0x",
            "4.0x"
          ],
          {
            "default": "none"
          }
        ]
      },
      "optional": {
        "data": [
          "SRG_DATA_STREAM"
        ]
      }
    },
    "output": [
      "SRG_DATA_STREAM"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "data"
    ],
    "name": "SeargeHighResolution",
    "display_name": "High Resolution v2",
    "description": "",
    "category": "Searge/UI/Inputs",
    "output_node": false
  },
  "SeargeImage2ImageAndInpainting": {
    "input": {
      "required": {
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "inpaint_mask_blur": [
          "INT",
          {
            "default": 16,
            "min": 0,
            "max": 24,
            "step": 4
          }
        ],
        "inpaint_mask_mode": [
          [
            "masked - full",
            "uploaded - full"
          ]
        ]
      },
      "optional": {
        "data": [
          "SRG_DATA_STREAM"
        ]
      }
    },
    "output": [
      "SRG_DATA_STREAM"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "data"
    ],
    "name": "SeargeImage2ImageAndInpainting",
    "display_name": "Image to Image and Inpainting v2",
    "description": "",
    "category": "Searge/UI/Inputs",
    "output_node": false
  },
  "SeargeImageSaving": {
    "input": {
      "required": {
        "save_parameters_file": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "save_folder": [
          [
            "none - don't save",
            "output",
            "output/%date%",
            "output/Searge-SDXL-%date%",
            "input"
          ],
          {
            "default": "output/%date%"
          }
        ],
        "save_generated_image": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "embed_workflow_in_generated": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "generated_image_name": [
          "STRING",
          {
            "multiline": false,
            "default": "generated"
          }
        ],
        "save_high_res_image": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "embed_workflow_in_high_res": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "high_res_image_name": [
          "STRING",
          {
            "multiline": false,
            "default": "high-res"
          }
        ],
        "save_upscaled_image": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "embed_workflow_in_upscaled": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "upscaled_image_name": [
          "STRING",
          {
            "multiline": false,
            "default": "upscaled"
          }
        ]
      },
      "optional": {
        "data": [
          "SRG_DATA_STREAM"
        ]
      }
    },
    "output": [
      "SRG_DATA_STREAM"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "data"
    ],
    "name": "SeargeImageSaving",
    "display_name": "Image Saving v2",
    "description": "",
    "category": "Searge/UI/Inputs",
    "output_node": false
  },
  "SeargeLoras": {
    "input": {
      "required": {
        "lora_1": [
          [
            "none"
          ]
        ],
        "lora_1_strength": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.05
          }
        ],
        "lora_2": [
          [
            "none"
          ]
        ],
        "lora_2_strength": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.05
          }
        ],
        "lora_3": [
          [
            "none"
          ]
        ],
        "lora_3_strength": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.05
          }
        ],
        "lora_4": [
          [
            "none"
          ]
        ],
        "lora_4_strength": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.05
          }
        ],
        "lora_5": [
          [
            "none"
          ]
        ],
        "lora_5_strength": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.05
          }
        ]
      },
      "optional": {
        "data": [
          "SRG_DATA_STREAM"
        ]
      }
    },
    "output": [
      "SRG_DATA_STREAM"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "data"
    ],
    "name": "SeargeLoras",
    "display_name": "Lora Selector v2",
    "description": "",
    "category": "Searge/UI/Inputs",
    "output_node": false
  },
  "SeargeModelSelector": {
    "input": {
      "required": {
        "base_checkpoint": [
          [
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "refiner_checkpoint": [
          [
            "none",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "vae_checkpoint": [
          [
            "from base model",
            "from refiner model",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ]
      },
      "optional": {
        "data": [
          "SRG_DATA_STREAM"
        ]
      }
    },
    "output": [
      "SRG_DATA_STREAM"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "data"
    ],
    "name": "SeargeModelSelector",
    "display_name": "Model Selector v2",
    "description": "",
    "category": "Searge/UI/Inputs",
    "output_node": false
  },
  "SeargeOperatingMode": {
    "input": {
      "required": {
        "workflow_mode": [
          [
            "none",
            "text-to-image",
            "image-to-image",
            "in-painting"
          ],
          {
            "default": "text-to-image"
          }
        ],
        "prompting_mode": [
          [
            "default - all prompts",
            "custom",
            "main and neg. only",
            "main, sec., and neg.",
            "all except sec.",
            "ignore empty",
            "ignore all"
          ],
          {
            "default": "default - all prompts"
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4,
            "step": 1
          }
        ]
      },
      "optional": {
        "data": [
          "SRG_DATA_STREAM"
        ]
      }
    },
    "output": [
      "SRG_DATA_STREAM"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "data"
    ],
    "name": "SeargeOperatingMode",
    "display_name": "Operating Mode v2",
    "description": "",
    "category": "Searge/UI/Inputs",
    "output_node": false
  },
  "SeargePromptStyles": {
    "input": {
      "required": {},
      "optional": {
        "data": [
          "SRG_DATA_STREAM"
        ]
      }
    },
    "output": [
      "SRG_DATA_STREAM"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "data"
    ],
    "name": "SeargePromptStyles",
    "display_name": "Prompt Styles v2",
    "description": "",
    "category": "Searge/UI/Inputs",
    "output_node": false
  },
  "SeargeUpscaleModels": {
    "input": {
      "required": {
        "detail_processor": [
          [
            "none"
          ]
        ],
        "high_res_upscaler": [
          [
            "none",
            "4x-UltraSharp.pth",
            "4x_foolhardy_Remacri.pth"
          ]
        ],
        "primary_upscaler": [
          [
            "none",
            "4x-UltraSharp.pth",
            "4x_foolhardy_Remacri.pth"
          ]
        ],
        "secondary_upscaler": [
          [
            "none",
            "4x-UltraSharp.pth",
            "4x_foolhardy_Remacri.pth"
          ]
        ]
      },
      "optional": {
        "data": [
          "SRG_DATA_STREAM"
        ]
      }
    },
    "output": [
      "SRG_DATA_STREAM"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "data"
    ],
    "name": "SeargeUpscaleModels",
    "display_name": "Upscale Models Selector v2",
    "description": "",
    "category": "Searge/UI/Inputs",
    "output_node": false
  },
  "SeargeMagicBox": {
    "input": {
      "required": {
        "stage": [
          [
            "none - skip",
            "pre-process data",
            "load checkpoints",
            "apply loras",
            "prompt styling",
            "clip conditioning",
            "clip mixing",
            "apply controlnet",
            "latent inputs",
            "sampling",
            "latent detailer",
            "vae decode sampled",
            "high resolution",
            "hires detailer",
            "vae decode hi-res",
            "upscaling",
            "image saving"
          ],
          {
            "default": "none - skip"
          }
        ],
        "input_from": [
          [
            "data stream",
            "custom stage & data stream"
          ]
        ],
        "output_to": [
          [
            "data stream",
            "custom stage & data stream"
          ]
        ]
      },
      "optional": {
        "data": [
          "SRG_DATA_STREAM"
        ],
        "custom_input": [
          "SRG_STAGE_INPUT"
        ]
      }
    },
    "output": [
      "SRG_DATA_STREAM",
      "SRG_STAGE_OUTPUT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "data",
      "custom_output"
    ],
    "name": "SeargeMagicBox",
    "display_name": "Searge's Magic Box for SDXL",
    "description": "",
    "category": "Searge/Magic",
    "output_node": false
  },
  "SeargePipelineStart": {
    "input": {
      "required": {
        "wf_version": [
          [
            "4.0",
            "4.1",
            "4.2",
            "4.3"
          ]
        ]
      },
      "optional": {
        "data": [
          "SRG_DATA_STREAM"
        ],
        "additional_data": [
          "SRG_DATA_STREAM"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "SRG_DATA_STREAM"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "data"
    ],
    "name": "SeargePipelineStart",
    "display_name": "Magic Box Pipeline Start",
    "description": "",
    "category": "Searge/Magic",
    "output_node": true
  },
  "SeargePipelineTerminator": {
    "input": {
      "required": {},
      "optional": {
        "data": [
          "SRG_DATA_STREAM"
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SeargePipelineTerminator",
    "display_name": "Magic Box Pipeline Terminator",
    "description": "",
    "category": "Searge/Magic",
    "output_node": true
  },
  "SeargeCustomAfterVaeDecode": {
    "input": {
      "required": {
        "custom_output": [
          "SRG_STAGE_OUTPUT"
        ]
      },
      "optional": {}
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "SeargeCustomAfterVaeDecode",
    "display_name": "After VAE Decode",
    "description": "",
    "category": "Searge/Magic/Custom Stages",
    "output_node": false
  },
  "SeargeCustomAfterUpscaling": {
    "input": {
      "required": {
        "custom_output": [
          "SRG_STAGE_OUTPUT"
        ]
      },
      "optional": {}
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "SeargeCustomAfterUpscaling",
    "display_name": "After Upscaling",
    "description": "",
    "category": "Searge/Magic/Custom Stages",
    "output_node": false
  },
  "SeargeDebugPrinter": {
    "input": {
      "required": {
        "enabled": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      },
      "optional": {
        "data": [
          "SRG_DATA_STREAM"
        ],
        "prefix": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ]
      }
    },
    "output": [
      "SRG_DATA_STREAM"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "data"
    ],
    "name": "SeargeDebugPrinter",
    "display_name": "Debug Printer",
    "description": "",
    "category": "Searge/Debug",
    "output_node": true
  },
  "SeargeSDXLSampler": {
    "input": {
      "required": {
        "base_model": [
          "MODEL"
        ],
        "base_positive": [
          "CONDITIONING"
        ],
        "base_negative": [
          "CONDITIONING"
        ],
        "refiner_model": [
          "MODEL"
        ],
        "refiner_positive": [
          "CONDITIONING"
        ],
        "refiner_negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 30,
            "min": 1,
            "max": 1000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.5
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ],
          {
            "default": "dpmpp_2m"
          }
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ],
          {
            "default": "karras"
          }
        ],
        "base_ratio": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      ""
    ],
    "name": "SeargeSDXLSampler",
    "display_name": "SDXL Sampler v1 (Searge)",
    "description": "",
    "category": "Searge/_deprecated_/Sampling",
    "output_node": false
  },
  "SeargeSDXLSampler2": {
    "input": {
      "required": {
        "base_model": [
          "MODEL"
        ],
        "base_positive": [
          "CONDITIONING"
        ],
        "base_negative": [
          "CONDITIONING"
        ],
        "refiner_model": [
          "MODEL"
        ],
        "refiner_positive": [
          "CONDITIONING"
        ],
        "refiner_negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551600
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 200
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7.0,
            "min": 0.0,
            "max": 30.0,
            "step": 0.5
          }
        ],
        "sampler_name": [
          "SAMPLER_NAME",
          {
            "default": "ddim"
          }
        ],
        "scheduler": [
          "SCHEDULER_NAME",
          {
            "default": "ddim_uniform"
          }
        ],
        "base_ratio": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "refiner_prep_steps": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10
          }
        ],
        "noise_offset": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 1
          }
        ],
        "refiner_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.01,
            "max": 1.0,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "SeargeSDXLSampler2",
    "display_name": "SDXL Sampler v2 (Searge)",
    "description": "",
    "category": "Searge/_deprecated_/Sampling",
    "output_node": false
  },
  "SeargeSDXLSamplerV3": {
    "input": {
      "required": {
        "base_model": [
          "MODEL"
        ],
        "base_positive": [
          "CONDITIONING"
        ],
        "base_negative": [
          "CONDITIONING"
        ],
        "refiner_model": [
          "MODEL"
        ],
        "refiner_positive": [
          "CONDITIONING"
        ],
        "refiner_negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551600
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 200
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7.0,
            "min": 0.0,
            "max": 30.0,
            "step": 0.5
          }
        ],
        "sampler_name": [
          "SAMPLER_NAME",
          {
            "default": "ddim"
          }
        ],
        "scheduler": [
          "SCHEDULER_NAME",
          {
            "default": "ddim_uniform"
          }
        ],
        "base_ratio": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "refiner_prep_steps": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "SeargeSDXLSamplerV3",
    "display_name": "SDXL Sampler v3 (Searge)",
    "description": "",
    "category": "Searge/_deprecated_/Sampling",
    "output_node": false
  },
  "SeargeSDXLImage2ImageSampler": {
    "input": {
      "required": {
        "base_model": [
          "MODEL"
        ],
        "base_positive": [
          "CONDITIONING"
        ],
        "base_negative": [
          "CONDITIONING"
        ],
        "refiner_model": [
          "MODEL"
        ],
        "refiner_positive": [
          "CONDITIONING"
        ],
        "refiner_negative": [
          "CONDITIONING"
        ],
        "image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551600
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 200
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7.0,
            "min": 0.0,
            "max": 30.0,
            "step": 0.5
          }
        ],
        "sampler_name": [
          "SAMPLER_NAME",
          {
            "default": "ddim"
          }
        ],
        "scheduler": [
          "SCHEDULER_NAME",
          {
            "default": "ddim_uniform"
          }
        ],
        "base_ratio": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "upscale_model": [
          "UPSCALE_MODEL"
        ],
        "scaled_width": [
          "INT",
          {
            "default": 1536,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "scaled_height": [
          "INT",
          {
            "default": 1536,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "noise_offset": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 1
          }
        ],
        "refiner_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.1,
            "max": 1.0,
            "step": 0.05
          }
        ],
        "softness": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "SeargeSDXLImage2ImageSampler",
    "display_name": "Image2Image Sampler v1 (Searge)",
    "description": "",
    "category": "Searge/_deprecated_/Sampling",
    "output_node": false
  },
  "SeargeSDXLImage2ImageSampler2": {
    "input": {
      "required": {
        "base_model": [
          "MODEL"
        ],
        "base_positive": [
          "CONDITIONING"
        ],
        "base_negative": [
          "CONDITIONING"
        ],
        "refiner_model": [
          "MODEL"
        ],
        "refiner_positive": [
          "CONDITIONING"
        ],
        "refiner_negative": [
          "CONDITIONING"
        ],
        "image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551600
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 200
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7.0,
            "min": 0.0,
            "max": 30.0,
            "step": 0.5
          }
        ],
        "sampler_name": [
          "SAMPLER_NAME",
          {
            "default": "ddim"
          }
        ],
        "scheduler": [
          "SCHEDULER_NAME",
          {
            "default": "ddim_uniform"
          }
        ],
        "base_ratio": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "upscale_model": [
          "UPSCALE_MODEL"
        ],
        "scaled_width": [
          "INT",
          {
            "default": 1536,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "scaled_height": [
          "INT",
          {
            "default": 1536,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "noise_offset": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 1
          }
        ],
        "refiner_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.1,
            "max": 1.0,
            "step": 0.05
          }
        ],
        "softness": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "SeargeSDXLImage2ImageSampler2",
    "display_name": "Image2Image Sampler v2 (Searge)",
    "description": "",
    "category": "Searge/_deprecated_/Sampling",
    "output_node": false
  },
  "SeargeSamplerInputs": {
    "input": {
      "required": {
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ],
          {
            "default": "ddim"
          }
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ],
          {
            "default": "ddim_uniform"
          }
        ]
      }
    },
    "output": [
      "SAMPLER_NAME",
      "SCHEDULER_NAME"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "sampler_name",
      "scheduler"
    ],
    "name": "SeargeSamplerInputs",
    "display_name": "Sampler Settings",
    "description": "",
    "category": "Searge/_deprecated_/Inputs",
    "output_node": false
  },
  "SeargeEnablerInputs": {
    "input": {
      "required": {
        "state": [
          [
            "disabled",
            "enabled"
          ],
          {
            "default": "enabled"
          }
        ]
      }
    },
    "output": [
      "ENABLE_STATE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "state"
    ],
    "name": "SeargeEnablerInputs",
    "display_name": "Enable / Disable",
    "description": "",
    "category": "Searge/_deprecated_/Inputs",
    "output_node": false
  },
  "SeargeSaveFolderInputs": {
    "input": {
      "required": {
        "save_to": [
          [
            "output folder",
            "input folder"
          ],
          {
            "default": "output folder"
          }
        ]
      }
    },
    "output": [
      "SAVE_FOLDER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "save_to"
    ],
    "name": "SeargeSaveFolderInputs",
    "display_name": "Save Folder",
    "description": "",
    "category": "Searge/_deprecated_/Inputs",
    "output_node": false
  },
  "SeargeSDXLPromptEncoder": {
    "input": {
      "required": {
        "base_clip": [
          "CLIP"
        ],
        "refiner_clip": [
          "CLIP"
        ],
        "pos_g": [
          "STRING",
          {
            "multiline": true,
            "default": "POS_G"
          }
        ],
        "pos_l": [
          "STRING",
          {
            "multiline": true,
            "default": "POS_L"
          }
        ],
        "pos_r": [
          "STRING",
          {
            "multiline": true,
            "default": "POS_R"
          }
        ],
        "neg_g": [
          "STRING",
          {
            "multiline": true,
            "default": "NEG_G"
          }
        ],
        "neg_l": [
          "STRING",
          {
            "multiline": true,
            "default": "NEG_L"
          }
        ],
        "neg_r": [
          "STRING",
          {
            "multiline": true,
            "default": "NEG_R"
          }
        ],
        "base_width": [
          "INT",
          {
            "default": 4096,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "base_height": [
          "INT",
          {
            "default": 4096,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "crop_w": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "crop_h": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "target_width": [
          "INT",
          {
            "default": 4096,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "target_height": [
          "INT",
          {
            "default": 4096,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "pos_ascore": [
          "FLOAT",
          {
            "default": 6.0,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01
          }
        ],
        "neg_ascore": [
          "FLOAT",
          {
            "default": 2.5,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01
          }
        ],
        "refiner_width": [
          "INT",
          {
            "default": 2048,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "refiner_height": [
          "INT",
          {
            "default": 2048,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "base_positive",
      "base_negative",
      "refiner_positive",
      "refiner_negative"
    ],
    "name": "SeargeSDXLPromptEncoder",
    "display_name": "SDXL Prompt Encoder (Searge)",
    "description": "",
    "category": "Searge/_deprecated_/ClipEncoding",
    "output_node": false
  },
  "SeargeSDXLBasePromptEncoder": {
    "input": {
      "required": {
        "base_clip": [
          "CLIP"
        ],
        "pos_g": [
          "STRING",
          {
            "multiline": true,
            "default": "POS_G"
          }
        ],
        "pos_l": [
          "STRING",
          {
            "multiline": true,
            "default": "POS_L"
          }
        ],
        "neg_g": [
          "STRING",
          {
            "multiline": true,
            "default": "NEG_G"
          }
        ],
        "neg_l": [
          "STRING",
          {
            "multiline": true,
            "default": "NEG_L"
          }
        ],
        "base_width": [
          "INT",
          {
            "default": 4096,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "base_height": [
          "INT",
          {
            "default": 4096,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "crop_w": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "crop_h": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "target_width": [
          "INT",
          {
            "default": 4096,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "target_height": [
          "INT",
          {
            "default": 4096,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "base_positive",
      "base_negative"
    ],
    "name": "SeargeSDXLBasePromptEncoder",
    "display_name": "SDXL Base Prompt Encoder (Searge)",
    "description": "",
    "category": "Searge/_deprecated_/ClipEncoding",
    "output_node": false
  },
  "SeargeSDXLRefinerPromptEncoder": {
    "input": {
      "required": {
        "refiner_clip": [
          "CLIP"
        ],
        "pos_r": [
          "STRING",
          {
            "multiline": true,
            "default": "POS_R"
          }
        ],
        "neg_r": [
          "STRING",
          {
            "multiline": true,
            "default": "NEG_R"
          }
        ],
        "pos_ascore": [
          "FLOAT",
          {
            "default": 6.0,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01
          }
        ],
        "neg_ascore": [
          "FLOAT",
          {
            "default": 2.5,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01
          }
        ],
        "refiner_width": [
          "INT",
          {
            "default": 2048,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "refiner_height": [
          "INT",
          {
            "default": 2048,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "refiner_positive",
      "refiner_negative"
    ],
    "name": "SeargeSDXLRefinerPromptEncoder",
    "display_name": "SDXL Refiner Prompt Encoder (Searge)",
    "description": "",
    "category": "Searge/_deprecated_/ClipEncoding",
    "output_node": false
  },
  "SeargePromptText": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "prompt"
    ],
    "name": "SeargePromptText",
    "display_name": "Prompt text input",
    "description": "",
    "category": "Searge/_deprecated_/Prompting",
    "output_node": false
  },
  "SeargePromptCombiner": {
    "input": {
      "required": {
        "prompt1": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ],
        "separator": [
          "STRING",
          {
            "default": ", ",
            "multiline": false
          }
        ],
        "prompt2": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "combined prompt"
    ],
    "name": "SeargePromptCombiner",
    "display_name": "Prompt combiner",
    "description": "",
    "category": "Searge/_deprecated_/Prompting",
    "output_node": false
  },
  "SeargeIntegerConstant": {
    "input": {
      "required": {
        "value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "value"
    ],
    "name": "SeargeIntegerConstant",
    "display_name": "Integer Constant",
    "description": "",
    "category": "Searge/_deprecated_/Integers",
    "output_node": false
  },
  "SeargeIntegerPair": {
    "input": {
      "required": {
        "value1": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "value2": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "value 1",
      "value 2"
    ],
    "name": "SeargeIntegerPair",
    "display_name": "Integer Pair",
    "description": "",
    "category": "Searge/_deprecated_/Integers",
    "output_node": false
  },
  "SeargeIntegerMath": {
    "input": {
      "required": {
        "op": [
          [
            "a * b + c",
            "a + c",
            "a - c",
            "a * b",
            "a / b"
          ],
          {
            "default": "a * b + c"
          }
        ],
        "a": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "b": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "c": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "result"
    ],
    "name": "SeargeIntegerMath",
    "display_name": "Integer Math",
    "description": "",
    "category": "Searge/_deprecated_/Integers",
    "output_node": false
  },
  "SeargeIntegerScaler": {
    "input": {
      "required": {
        "value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "factor": [
          "FLOAT",
          {
            "default": 1.0,
            "step": 0.01
          }
        ],
        "multiple_of": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 65536
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "value"
    ],
    "name": "SeargeIntegerScaler",
    "display_name": "Integer Scaler",
    "description": "",
    "category": "Searge/_deprecated_/Integers",
    "output_node": false
  },
  "SeargeFloatConstant": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 0.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "value"
    ],
    "name": "SeargeFloatConstant",
    "display_name": "Float Constant",
    "description": "",
    "category": "Searge/_deprecated_/Floats",
    "output_node": false
  },
  "SeargeFloatPair": {
    "input": {
      "required": {
        "value1": [
          "FLOAT",
          {
            "default": 0.0,
            "step": 0.01
          }
        ],
        "value2": [
          "FLOAT",
          {
            "default": 0.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "FLOAT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "value 1",
      "value 2"
    ],
    "name": "SeargeFloatPair",
    "display_name": "Float Pair",
    "description": "",
    "category": "Searge/_deprecated_/Floats",
    "output_node": false
  },
  "SeargeFloatMath": {
    "input": {
      "required": {
        "op": [
          [
            "a * b + c",
            "a + c",
            "a - c",
            "a * b",
            "a / b"
          ],
          {
            "default": "a * b + c"
          }
        ],
        "a": [
          "FLOAT",
          {
            "default": 0.0,
            "step": 0.01
          }
        ],
        "b": [
          "FLOAT",
          {
            "default": 1.0,
            "step": 0.01
          }
        ],
        "c": [
          "FLOAT",
          {
            "default": 0.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "result"
    ],
    "name": "SeargeFloatMath",
    "display_name": "Float Math",
    "description": "",
    "category": "Searge/_deprecated_/Floats",
    "output_node": false
  },
  "SeargeImageSave": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "SeargeSDXL-%date%/Image"
          }
        ],
        "state": [
          "ENABLE_STATE",
          {
            "default": "enabled"
          }
        ],
        "save_to": [
          "SAVE_FOLDER",
          {
            "default": "output folder"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SeargeImageSave",
    "display_name": "Save Image (Searge)",
    "description": "",
    "category": "Searge/_deprecated_/Files",
    "output_node": true
  },
  "SeargeCheckpointLoader": {
    "input": {
      "required": {
        "ckpt_name": [
          "CHECKPOINT_NAME"
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "name": "SeargeCheckpointLoader",
    "display_name": "Checkpoint Loader (Searge)",
    "description": "",
    "category": "Searge/_deprecated_/Files",
    "output_node": false
  },
  "SeargeVAELoader": {
    "input": {
      "required": {
        "vae_name": [
          "VAE_NAME"
        ]
      }
    },
    "output": [
      "VAE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "VAE"
    ],
    "name": "SeargeVAELoader",
    "display_name": "VAE Loader (Searge)",
    "description": "",
    "category": "Searge/_deprecated_/Files",
    "output_node": false
  },
  "SeargeUpscaleModelLoader": {
    "input": {
      "required": {
        "upscaler_name": [
          "UPSCALER_NAME"
        ]
      }
    },
    "output": [
      "UPSCALE_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "UPSCALE_MODEL"
    ],
    "name": "SeargeUpscaleModelLoader",
    "display_name": "Upscale Model Loader (Searge)",
    "description": "",
    "category": "Searge/_deprecated_/Files",
    "output_node": false
  },
  "SeargeLoraLoader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_name": [
          "LORA_NAME"
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP"
    ],
    "name": "SeargeLoraLoader",
    "display_name": "Lora Loader (Searge)",
    "description": "",
    "category": "Searge/_deprecated_/Files",
    "output_node": false
  },
  "SeargeLatentMuxer3": {
    "input": {
      "required": {
        "input0": [
          "LATENT"
        ],
        "input1": [
          "LATENT"
        ],
        "input2": [
          "LATENT"
        ],
        "input_selector": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 2
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "output"
    ],
    "name": "SeargeLatentMuxer3",
    "display_name": "3-Way Muxer for Latents",
    "description": "",
    "category": "Searge/_deprecated_/FlowControl",
    "output_node": false
  },
  "SeargeConditioningMuxer2": {
    "input": {
      "required": {
        "input0": [
          "CONDITIONING"
        ],
        "input1": [
          "CONDITIONING"
        ],
        "input_selector": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "output"
    ],
    "name": "SeargeConditioningMuxer2",
    "display_name": "2-Way Muxer for Conditioning",
    "description": "",
    "category": "Searge/_deprecated_/FlowControl",
    "output_node": false
  },
  "SeargeConditioningMuxer5": {
    "input": {
      "required": {
        "input0": [
          "CONDITIONING"
        ],
        "input1": [
          "CONDITIONING"
        ],
        "input2": [
          "CONDITIONING"
        ],
        "input3": [
          "CONDITIONING"
        ],
        "input4": [
          "CONDITIONING"
        ],
        "input_selector": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "output"
    ],
    "name": "SeargeConditioningMuxer5",
    "display_name": "5-Way Muxer for Conditioning",
    "description": "",
    "category": "Searge/_deprecated_/FlowControl",
    "output_node": false
  },
  "SeargeParameterProcessor": {
    "input": {
      "required": {
        "inputs": [
          "PARAMETER_INPUTS"
        ]
      }
    },
    "output": [
      "PARAMETERS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "parameters"
    ],
    "name": "SeargeParameterProcessor",
    "display_name": "Parameter Processor",
    "description": "",
    "category": "Searge/_deprecated_/UI",
    "output_node": false
  },
  "SeargeStylePreprocessor": {
    "input": {
      "required": {
        "inputs": [
          "PARAMETER_INPUTS"
        ],
        "active_style_name": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "style_definitions": [
          "STRING",
          {
            "multiline": true,
            "default": "[unfinished work in progress]"
          }
        ]
      }
    },
    "output": [
      "PARAMETER_INPUTS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "inputs"
    ],
    "name": "SeargeStylePreprocessor",
    "display_name": "Style Preprocessor (wip)",
    "description": "",
    "category": "Searge/_deprecated_/UI",
    "output_node": false
  },
  "SeargeInput1": {
    "input": {
      "required": {
        "main_prompt": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "secondary_prompt": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "style_prompt": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "negative_prompt": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "negative_style": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ]
      },
      "optional": {
        "inputs": [
          "PARAMETER_INPUTS"
        ],
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "PARAMETER_INPUTS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "inputs"
    ],
    "name": "SeargeInput1",
    "display_name": "Prompts",
    "description": "",
    "category": "Searge/_deprecated_/UI/Inputs",
    "output_node": false
  },
  "SeargeInput2": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "image_width": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "image_height": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 200
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7.0,
            "min": 0.0,
            "max": 30.0,
            "step": 0.5
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ],
          {
            "default": "ddim"
          }
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ],
          {
            "default": "ddim_uniform"
          }
        ],
        "save_image": [
          [
            "disabled",
            "enabled"
          ],
          {
            "default": "enabled"
          }
        ],
        "save_directory": [
          [
            "output folder",
            "input folder"
          ],
          {
            "default": "output folder"
          }
        ]
      },
      "optional": {
        "inputs": [
          "PARAMETER_INPUTS"
        ]
      }
    },
    "output": [
      "PARAMETER_INPUTS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "inputs"
    ],
    "name": "SeargeInput2",
    "display_name": "Generation Parameters",
    "description": "",
    "category": "Searge/_deprecated_/UI/Inputs",
    "output_node": false
  },
  "SeargeInput3": {
    "input": {
      "required": {
        "base_ratio": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "refiner_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.1,
            "max": 1.0,
            "step": 0.05
          }
        ],
        "refiner_intensity": [
          [
            "hard",
            "soft"
          ],
          {
            "default": "soft"
          }
        ],
        "precondition_steps": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4
          }
        ],
        "upscale_resolution_factor": [
          "FLOAT",
          {
            "default": 2.0,
            "min": 0.25,
            "max": 4.0,
            "step": 0.25
          }
        ],
        "save_upscaled_image": [
          [
            "disabled",
            "enabled"
          ],
          {
            "default": "enabled"
          }
        ]
      },
      "optional": {
        "inputs": [
          "PARAMETER_INPUTS"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "PARAMETER_INPUTS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "inputs"
    ],
    "name": "SeargeInput3",
    "display_name": "Advanced Parameters",
    "description": "",
    "category": "Searge/_deprecated_/UI/Inputs",
    "output_node": false
  },
  "SeargeInput4": {
    "input": {
      "required": {
        "base_model": [
          [
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "refiner_model": [
          [
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "vae_model": [
          [
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "main_upscale_model": [
          [
            "4x-UltraSharp.pth",
            "4x_foolhardy_Remacri.pth",
            "ESRGAN_4x.pth",
            "RealESRGAN_x4plus.pth"
          ]
        ],
        "support_upscale_model": [
          [
            "4x-UltraSharp.pth",
            "4x_foolhardy_Remacri.pth",
            "ESRGAN_4x.pth",
            "RealESRGAN_x4plus.pth"
          ]
        ],
        "lora_model": [
          []
        ]
      },
      "optional": {
        "model_settings": [
          "MODEL_SETTINGS"
        ]
      }
    },
    "output": [
      "MODEL_NAMES"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "model_names"
    ],
    "name": "SeargeInput4",
    "display_name": "Model Names",
    "description": "",
    "category": "Searge/_deprecated_/UI/Inputs",
    "output_node": false
  },
  "SeargeInput5": {
    "input": {
      "required": {
        "base_conditioning_scale": [
          "FLOAT",
          {
            "default": 2.0,
            "min": 0.25,
            "max": 4.0,
            "step": 0.25
          }
        ],
        "refiner_conditioning_scale": [
          "FLOAT",
          {
            "default": 2.0,
            "min": 0.25,
            "max": 4.0,
            "step": 0.25
          }
        ],
        "style_prompt_power": [
          "FLOAT",
          {
            "default": 0.33,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "negative_style_power": [
          "FLOAT",
          {
            "default": 0.67,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "style_template": [
          [
            "none",
            "from preprocessor",
            "test"
          ],
          {
            "default": "none"
          }
        ]
      },
      "optional": {
        "inputs": [
          "PARAMETER_INPUTS"
        ]
      }
    },
    "output": [
      "PARAMETER_INPUTS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "inputs"
    ],
    "name": "SeargeInput5",
    "display_name": "Prompt Processing",
    "description": "",
    "category": "Searge/_deprecated_/UI/Inputs",
    "output_node": false
  },
  "SeargeInput6": {
    "input": {
      "required": {
        "hires_fix": [
          [
            "disabled",
            "enabled"
          ],
          {
            "default": "enabled"
          }
        ],
        "hrf_steps": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100
          }
        ],
        "hrf_denoise": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "hrf_upscale_factor": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 0.25,
            "max": 4.0,
            "step": 0.25
          }
        ],
        "hrf_intensity": [
          [
            "hard",
            "soft"
          ],
          {
            "default": "soft"
          }
        ],
        "hrf_seed_offset": [
          [
            "same",
            "distinct"
          ],
          {
            "default": "distinct"
          }
        ],
        "hrf_smoothness": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.05
          }
        ]
      },
      "optional": {
        "inputs": [
          "PARAMETER_INPUTS"
        ]
      }
    },
    "output": [
      "PARAMETER_INPUTS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "inputs"
    ],
    "name": "SeargeInput6",
    "display_name": "HiResFix Parameters",
    "description": "",
    "category": "Searge/_deprecated_/UI/Inputs",
    "output_node": false
  },
  "SeargeInput7": {
    "input": {
      "required": {
        "lora_strength": [
          "FLOAT",
          {
            "default": 0.2,
            "min": -10.0,
            "max": 10.0,
            "step": 0.05
          }
        ],
        "operation_mode": [
          [
            "text to image",
            "image to image",
            "inpainting"
          ],
          {
            "default": "text to image"
          }
        ],
        "prompt_style": [
          [
            "simple",
            "3 prompts G+L-N",
            "subject focus",
            "style focus",
            "weighted",
            "overlay",
            "subject - style",
            "style - subject",
            "style only",
            "weighted - overlay",
            "overlay - weighted"
          ],
          {
            "default": "simple"
          }
        ]
      },
      "optional": {
        "inputs": [
          "PARAMETER_INPUTS"
        ]
      }
    },
    "output": [
      "PARAMETER_INPUTS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "inputs"
    ],
    "name": "SeargeInput7",
    "display_name": "Misc Parameters",
    "description": "",
    "category": "Searge/_deprecated_/UI/Inputs",
    "output_node": false
  },
  "SeargeOutput1": {
    "input": {
      "required": {
        "parameters": [
          "PARAMETERS"
        ]
      }
    },
    "output": [
      "PARAMETERS",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "parameters",
      "main_prompt",
      "secondary_prompt",
      "style_prompt",
      "negative_prompt",
      "negative_style",
      "image",
      "mask"
    ],
    "name": "SeargeOutput1",
    "display_name": "Prompts",
    "description": "",
    "category": "Searge/_deprecated_/UI/Outputs",
    "output_node": false
  },
  "SeargeOutput2": {
    "input": {
      "required": {
        "parameters": [
          "PARAMETERS"
        ]
      }
    },
    "output": [
      "PARAMETERS",
      "INT",
      "INT",
      "INT",
      "INT",
      "FLOAT",
      "SAMPLER_NAME",
      "SCHEDULER_NAME",
      "ENABLE_STATE",
      "SAVE_FOLDER"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "parameters",
      "seed",
      "image_width",
      "image_height",
      "steps",
      "cfg",
      "sampler_name",
      "scheduler",
      "save_image",
      "save_directory"
    ],
    "name": "SeargeOutput2",
    "display_name": "Generation Parameters",
    "description": "",
    "category": "Searge/_deprecated_/UI/Outputs",
    "output_node": false
  },
  "SeargeOutput3": {
    "input": {
      "required": {
        "parameters": [
          "PARAMETERS"
        ]
      }
    },
    "output": [
      "PARAMETERS",
      "FLOAT",
      "FLOAT",
      "FLOAT",
      "INT",
      "INT",
      "INT",
      "FLOAT",
      "ENABLE_STATE"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "parameters",
      "denoise",
      "base_ratio",
      "refiner_strength",
      "noise_offset",
      "precondition_steps",
      "batch_size",
      "upscale_resolution_factor",
      "save_upscaled_image"
    ],
    "name": "SeargeOutput3",
    "display_name": "Advanced Parameters",
    "description": "",
    "category": "Searge/_deprecated_/UI/Outputs",
    "output_node": false
  },
  "SeargeOutput4": {
    "input": {
      "required": {
        "model_names": [
          "MODEL_NAMES"
        ]
      }
    },
    "output": [
      "MODEL_NAMES",
      "CHECKPOINT_NAME",
      "CHECKPOINT_NAME",
      "VAE_NAME",
      "UPSCALER_NAME",
      "UPSCALER_NAME",
      "LORA_NAME"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "model_names",
      "base_model",
      "refiner_model",
      "vae_model",
      "main_upscale_model",
      "support_upscale_model",
      "lora_model"
    ],
    "name": "SeargeOutput4",
    "display_name": "Model Names",
    "description": "",
    "category": "Searge/_deprecated_/UI/Outputs",
    "output_node": false
  },
  "SeargeOutput5": {
    "input": {
      "required": {
        "parameters": [
          "PARAMETERS"
        ]
      }
    },
    "output": [
      "PARAMETERS",
      "FLOAT",
      "FLOAT",
      "FLOAT",
      "FLOAT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "parameters",
      "base_conditioning_scale",
      "refiner_conditioning_scale",
      "style_prompt_power",
      "negative_style_power"
    ],
    "name": "SeargeOutput5",
    "display_name": "Prompt Processing",
    "description": "",
    "category": "Searge/_deprecated_/UI/Outputs",
    "output_node": false
  },
  "SeargeOutput6": {
    "input": {
      "required": {
        "parameters": [
          "PARAMETERS"
        ]
      }
    },
    "output": [
      "PARAMETERS",
      "INT",
      "FLOAT",
      "FLOAT",
      "INT",
      "INT",
      "ENABLE_STATE",
      "FLOAT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "parameters",
      "hrf_steps",
      "hrf_denoise",
      "hrf_upscale_factor",
      "hrf_noise_offset",
      "hrf_seed",
      "hires_fix",
      "hrf_smoothness"
    ],
    "name": "SeargeOutput6",
    "display_name": "HiResFix Parameters",
    "description": "",
    "category": "Searge/_deprecated_/UI/Outputs",
    "output_node": false
  },
  "SeargeOutput7": {
    "input": {
      "required": {
        "parameters": [
          "PARAMETERS"
        ]
      }
    },
    "output": [
      "PARAMETERS",
      "FLOAT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "parameters",
      "lora_strength"
    ],
    "name": "SeargeOutput7",
    "display_name": "Misc Parameters",
    "description": "",
    "category": "Searge/_deprecated_/UI/Outputs",
    "output_node": false
  },
  "SeargeGenerated1": {
    "input": {
      "required": {
        "parameters": [
          "PARAMETERS"
        ]
      }
    },
    "output": [
      "PARAMETERS",
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "parameters",
      "operation_selector",
      "prompt_style_selector",
      "prompt_style_group"
    ],
    "name": "SeargeGenerated1",
    "display_name": "Flow Control Parameters",
    "description": "",
    "category": "Searge/_deprecated_/UI/Generated",
    "output_node": false
  },
  "UltimateSDUpscale": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "model": [
          "MODEL"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "vae": [
          "VAE"
        ],
        "upscale_by": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.05,
            "max": 4,
            "step": 0.05
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000,
            "step": 1
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "upscale_model": [
          "UPSCALE_MODEL"
        ],
        "mode_type": [
          [
            "Linear",
            "Chess",
            "None"
          ]
        ],
        "tile_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "tile_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "mask_blur": [
          "INT",
          {
            "default": 8,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ],
        "tile_padding": [
          "INT",
          {
            "default": 32,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "seam_fix_mode": [
          [
            "None",
            "Band Pass",
            "Half Tile",
            "Half Tile + Intersections"
          ]
        ],
        "seam_fix_denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "seam_fix_width": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "seam_fix_mask_blur": [
          "INT",
          {
            "default": 8,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ],
        "seam_fix_padding": [
          "INT",
          {
            "default": 16,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "force_uniform_tiles": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "tiled_decode": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "UltimateSDUpscale",
    "display_name": "Ultimate SD Upscale",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "UltimateSDUpscaleNoUpscale": {
    "input": {
      "required": {
        "upscaled_image": [
          "IMAGE"
        ],
        "model": [
          "MODEL"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "vae": [
          "VAE"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000,
            "step": 1
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "mode_type": [
          [
            "Linear",
            "Chess",
            "None"
          ]
        ],
        "tile_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "tile_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "mask_blur": [
          "INT",
          {
            "default": 8,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ],
        "tile_padding": [
          "INT",
          {
            "default": 32,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "seam_fix_mode": [
          [
            "None",
            "Band Pass",
            "Half Tile",
            "Half Tile + Intersections"
          ]
        ],
        "seam_fix_denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "seam_fix_width": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "seam_fix_mask_blur": [
          "INT",
          {
            "default": 8,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ],
        "seam_fix_padding": [
          "INT",
          {
            "default": 16,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "force_uniform_tiles": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "tiled_decode": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "UltimateSDUpscaleNoUpscale",
    "display_name": "Ultimate SD Upscale (No Upscale)",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "CR Image Output": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "output_type": [
          [
            "Preview",
            "Save"
          ]
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "CR"
          }
        ],
        "prefix_presets": [
          [
            "None",
            "yyyyMMdd"
          ]
        ],
        "file_format": [
          [
            "png",
            "jpg",
            "webp",
            "tif"
          ]
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      },
      "optional": {
        "trigger": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "trigger"
    ],
    "name": "CR Image Output",
    "display_name": "\ud83d\udcbe CR Image Output",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udce6 Other",
    "output_node": true
  },
  "CR Integer Multiple": {
    "input": {
      "required": {
        "integer": [
          "INT",
          {
            "default": 1,
            "min": -18446744073709551615,
            "max": 18446744073709551615
          }
        ],
        "multiple": [
          "FLOAT",
          {
            "default": 8,
            "min": 1,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "INT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "INT",
      "show_help"
    ],
    "name": "CR Integer Multiple",
    "display_name": "\u2699\ufe0f CR Integer Multiple",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udce6 Other",
    "output_node": false
  },
  "CR Latent Batch Size": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ],
        "batch_size": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "CR Latent Batch Size",
    "display_name": "\u2699\ufe0f CR Latent Batch Size",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udce6 Other",
    "output_node": false
  },
  "CR Seed": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "INT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "seed",
      "show_help"
    ],
    "name": "CR Seed",
    "display_name": "\ud83c\udf31 CR Seed",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udce6 Other",
    "output_node": true
  },
  "CR Prompt Text": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "default": "prompt",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "prompt",
      "show_help"
    ],
    "name": "CR Prompt Text",
    "display_name": "\ud83d\udcdd CR Prompt Text",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udce6 Other",
    "output_node": false
  },
  "CR Split String": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false,
            "default": "text"
          }
        ],
        "delimiter": [
          "STRING",
          {
            "multiline": false,
            "default": ","
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "string_1",
      "string_2",
      "string_3",
      "string_4",
      "show_help"
    ],
    "name": "CR Split String",
    "display_name": "\u2699\ufe0f CR Split String",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udce6 Other",
    "output_node": false
  },
  "CR Value": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 1.0
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "FLOAT",
      "INT",
      "show_help"
    ],
    "name": "CR Value",
    "display_name": "\u2699\ufe0f CR Value",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udce6 Other",
    "output_node": false
  },
  "CR Conditioning Mixer": {
    "input": {
      "required": {
        "conditioning_1": [
          "CONDITIONING"
        ],
        "conditioning_2": [
          "CONDITIONING"
        ],
        "mix_method": [
          [
            "Combine",
            "Average",
            "Concatenate"
          ]
        ],
        "average_strength": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "CONDITIONING",
      "show_help"
    ],
    "name": "CR Conditioning Mixer",
    "display_name": "\u2699\ufe0f CR Conditioning Mixer",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udce6 Other",
    "output_node": false
  },
  "CR Select Model": {
    "input": {
      "required": {
        "ckpt_name1": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "ckpt_name2": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "ckpt_name3": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "ckpt_name4": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "ckpt_name5": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "select_model": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 5
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "ckpt_name",
      "show_help"
    ],
    "name": "CR Select Model",
    "display_name": "\ud83d\udd2e CR Select Model",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udce6 Other",
    "output_node": false
  },
  "CR Font File List": {
    "input": {
      "required": {
        "source_folder": [
          [
            "System",
            "Comfyroll"
          ]
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999
          }
        ],
        "max_rows": [
          "INT",
          {
            "default": 1000,
            "min": 1,
            "max": 9999
          }
        ]
      }
    },
    "output": [
      "*",
      "STRING"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "LIST",
      "show_help"
    ],
    "name": "CR Font File List",
    "display_name": "\ud83d\udd24\ufe0f CR Font File List",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udcdc List",
    "output_node": false
  },
  "CR Text List": {
    "input": {
      "required": {
        "multiline_text": [
          "STRING",
          {
            "multiline": false,
            "default": "text"
          }
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999
          }
        ],
        "max_rows": [
          "INT",
          {
            "default": 1000,
            "min": 1,
            "max": 9999
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Text List",
    "display_name": "\ud83d\udcdc CR Text List",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udcdc List",
    "output_node": false
  },
  "CR SD1.5 Aspect Ratio": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192
          }
        ],
        "aspect_ratio": [
          [
            "custom",
            "1:1 square 512x512",
            "1:1 square 1024x1024",
            "2:3 portrait 512x768",
            "3:4 portrait 512x682",
            "3:2 landscape 768x512",
            "4:3 landscape 682x512",
            "16:9 cinema 910x512",
            "1.85:1 cinema 952x512",
            "2:1 cinema 1024x512",
            "2.39:1 anamorphic 1224x512"
          ]
        ],
        "swap_dimensions": [
          [
            "Off",
            "On"
          ]
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.1,
            "max": 100.0,
            "step": 0.1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "FLOAT",
      "INT",
      "LATENT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "width",
      "height",
      "upscale_factor",
      "batch_size",
      "empty_latent",
      "show_help"
    ],
    "name": "CR SD1.5 Aspect Ratio",
    "display_name": "\ud83d\udd33 CR SD1.5 Aspect Ratio",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udd33 Aspect Ratio",
    "output_node": false
  },
  "CR SDXL Aspect Ratio": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192
          }
        ],
        "aspect_ratio": [
          [
            "custom",
            "1:1 square 1024x1024",
            "3:4 portrait 896x1152",
            "5:8 portrait 832x1216",
            "9:16 portrait 768x1344",
            "9:21 portrait 640x1536",
            "4:3 landscape 1152x896",
            "3:2 landscape 1216x832",
            "16:9 landscape 1344x768",
            "21:9 landscape 1536x640"
          ]
        ],
        "swap_dimensions": [
          [
            "Off",
            "On"
          ]
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.1,
            "max": 100.0,
            "step": 0.1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "FLOAT",
      "INT",
      "LATENT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "width",
      "height",
      "upscale_factor",
      "batch_size",
      "empty_latent",
      "show_help"
    ],
    "name": "CR SDXL Aspect Ratio",
    "display_name": "\ud83d\udd33 CR SDXL Aspect Ratio",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udd33 Aspect Ratio",
    "output_node": false
  },
  "CR Aspect Ratio": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192
          }
        ],
        "aspect_ratio": [
          [
            "custom",
            "SD1.5 - 1:1 square 512x512",
            "SD1.5 - 2:3 portrait 512x768",
            "SD1.5 - 3:4 portrait 512x682",
            "SD1.5 - 3:2 landscape 768x512",
            "SD1.5 - 4:3 landscape 682x512",
            "SD1.5 - 16:9 cinema 910x512",
            "SD1.5 - 1.85:1 cinema 952x512",
            "SD1.5 - 2:1 cinema 1024x512",
            "SDXL - 1:1 square 1024x1024",
            "SDXL - 3:4 portrait 896x1152",
            "SDXL - 5:8 portrait 832x1216",
            "SDXL - 9:16 portrait 768x1344",
            "SDXL - 9:21 portrait 640x1536",
            "SDXL - 4:3 landscape 1152x896",
            "SDXL - 3:2 landscape 1216x832",
            "SDXL - 16:9 landscape 1344x768",
            "SDXL - 21:9 landscape 1536x640"
          ]
        ],
        "swap_dimensions": [
          [
            "Off",
            "On"
          ]
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.1,
            "max": 100.0,
            "step": 0.1
          }
        ],
        "prescale_factor": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.1,
            "max": 100.0,
            "step": 0.1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "FLOAT",
      "FLOAT",
      "INT",
      "LATENT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "width",
      "height",
      "upscale_factor",
      "prescale_factor",
      "batch_size",
      "empty_latent",
      "show_help"
    ],
    "name": "CR Aspect Ratio",
    "display_name": "\ud83d\udd33 CR Aspect Ratio",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udd33 Aspect Ratio",
    "output_node": false
  },
  "CR Aspect Ratio Banners": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192
          }
        ],
        "aspect_ratio": [
          [
            "custom",
            "Large Rectangle - 336x280",
            "Medium Rectangle - 300x250",
            "Small Rectangle - 180x150",
            "Square - 250x250",
            "Small Square - 200x200",
            "Button - 125x125",
            "Half Page - 300x600",
            "Vertical Banner - 120x240",
            "Wide Skyscraper - 160x600",
            "Skyscraper - 120x600",
            "Billboard - 970x250",
            "Portrait - 300x1050",
            "Banner - 468x60",
            "Leaderboard - 728x90"
          ]
        ],
        "swap_dimensions": [
          [
            "Off",
            "On"
          ]
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.1,
            "max": 100.0,
            "step": 0.1
          }
        ],
        "prescale_factor": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.1,
            "max": 100.0,
            "step": 0.1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "FLOAT",
      "FLOAT",
      "INT",
      "LATENT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "width",
      "height",
      "upscale_factor",
      "prescale_factor",
      "batch_size",
      "empty_latent",
      "show_help"
    ],
    "name": "CR Aspect Ratio Banners",
    "display_name": "\ud83d\udd33 CR Aspect Ratio Banners",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udd33 Aspect Ratio",
    "output_node": false
  },
  "CR Image Size": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048
          }
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 1,
            "max": 2000
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "Width",
      "Height",
      "upscale_factor",
      "show_help"
    ],
    "name": "CR Image Size",
    "display_name": "CR Image Size (Legacy)",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udce6 Other/\ud83d\udc80 Legacy",
    "output_node": false
  },
  "CR Aspect Ratio SDXL": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 2048
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 2048
          }
        ],
        "aspect_ratio": [
          [
            "custom",
            "1:1 square 1024x1024",
            "3:4 portrait 896x1152",
            "5:8 portrait 832x1216",
            "9:16 portrait 768x1344",
            "9:21 portrait 640x1536",
            "4:3 landscape 1152x896",
            "3:2 landscape 1216x832",
            "16:9 landscape 1344x768",
            "21:9 landscape 1536x640"
          ]
        ],
        "swap_dimensions": [
          [
            "Off",
            "On"
          ]
        ],
        "upscale_factor1": [
          "FLOAT",
          {
            "default": 1,
            "min": 1,
            "max": 2000
          }
        ],
        "upscale_factor2": [
          "FLOAT",
          {
            "default": 1,
            "min": 1,
            "max": 2000
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "FLOAT",
      "FLOAT",
      "INT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "INT",
      "INT",
      "FLOAT",
      "FLOAT",
      "INT",
      "show_help"
    ],
    "name": "CR Aspect Ratio SDXL",
    "display_name": "CR Aspect Ratio SDXL (Legacy)",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udce6 Other/\ud83d\udc80 Legacy",
    "output_node": false
  },
  "CR Apply ControlNet": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "switch": [
          [
            "On",
            "Off"
          ]
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "CONDITIONING",
      "show_help"
    ],
    "name": "CR Apply ControlNet",
    "display_name": "\ud83d\udd79\ufe0f CR Apply ControlNet",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udd79\ufe0f ControlNet",
    "output_node": false
  },
  "CR Multi-ControlNet Stack": {
    "input": {
      "required": {},
      "optional": {
        "switch_1": [
          [
            "Off",
            "On"
          ]
        ],
        "controlnet_1": [
          [
            "None",
            "SD1-5/control_v11e_sd15_ip2p_fp16.safetensors",
            "SD1-5/control_v11e_sd15_shuffle_fp16.safetensors",
            "SD1-5/control_v11f1e_sd15_tile.pth",
            "SD1-5/control_v11f1e_sd15_tile_fp16.safetensors",
            "SD1-5/control_v11f1p_sd15_depth_fp16.safetensors",
            "SD1-5/control_v11p_sd15_canny_fp16.safetensors",
            "SD1-5/control_v11p_sd15_inpaint_fp16.safetensors",
            "SD1-5/control_v11p_sd15_lineart_fp16.safetensors",
            "SD1-5/control_v11p_sd15_mlsd_fp16.safetensors",
            "SD1-5/control_v11p_sd15_normalbae_fp16.safetensors",
            "SD1-5/control_v11p_sd15_openpose_fp16.safetensors",
            "SD1-5/control_v11p_sd15_scribble_fp16.safetensors",
            "SD1-5/control_v11p_sd15_seg_fp16.safetensors",
            "SD1-5/control_v11p_sd15_softedge_fp16.safetensors",
            "SD1-5/control_v11p_sd15s2_lineart_anime_fp16.safetensors",
            "SDXL/control-lora-canny-rank256.safetensors",
            "SDXL/control-lora-depth-rank256.safetensors",
            "SDXL/control-lora-openposeXL2-rank256.safetensors",
            "SDXL/control-lora-recolor-rank256.safetensors",
            "SDXL/control-lora-sketch-rank256.safetensors"
          ]
        ],
        "controlnet_strength_1": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "start_percent_1": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_percent_1": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "switch_2": [
          [
            "Off",
            "On"
          ]
        ],
        "controlnet_2": [
          [
            "None",
            "SD1-5/control_v11e_sd15_ip2p_fp16.safetensors",
            "SD1-5/control_v11e_sd15_shuffle_fp16.safetensors",
            "SD1-5/control_v11f1e_sd15_tile.pth",
            "SD1-5/control_v11f1e_sd15_tile_fp16.safetensors",
            "SD1-5/control_v11f1p_sd15_depth_fp16.safetensors",
            "SD1-5/control_v11p_sd15_canny_fp16.safetensors",
            "SD1-5/control_v11p_sd15_inpaint_fp16.safetensors",
            "SD1-5/control_v11p_sd15_lineart_fp16.safetensors",
            "SD1-5/control_v11p_sd15_mlsd_fp16.safetensors",
            "SD1-5/control_v11p_sd15_normalbae_fp16.safetensors",
            "SD1-5/control_v11p_sd15_openpose_fp16.safetensors",
            "SD1-5/control_v11p_sd15_scribble_fp16.safetensors",
            "SD1-5/control_v11p_sd15_seg_fp16.safetensors",
            "SD1-5/control_v11p_sd15_softedge_fp16.safetensors",
            "SD1-5/control_v11p_sd15s2_lineart_anime_fp16.safetensors",
            "SDXL/control-lora-canny-rank256.safetensors",
            "SDXL/control-lora-depth-rank256.safetensors",
            "SDXL/control-lora-openposeXL2-rank256.safetensors",
            "SDXL/control-lora-recolor-rank256.safetensors",
            "SDXL/control-lora-sketch-rank256.safetensors"
          ]
        ],
        "controlnet_strength_2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "start_percent_2": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_percent_2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "switch_3": [
          [
            "Off",
            "On"
          ]
        ],
        "controlnet_3": [
          [
            "None",
            "SD1-5/control_v11e_sd15_ip2p_fp16.safetensors",
            "SD1-5/control_v11e_sd15_shuffle_fp16.safetensors",
            "SD1-5/control_v11f1e_sd15_tile.pth",
            "SD1-5/control_v11f1e_sd15_tile_fp16.safetensors",
            "SD1-5/control_v11f1p_sd15_depth_fp16.safetensors",
            "SD1-5/control_v11p_sd15_canny_fp16.safetensors",
            "SD1-5/control_v11p_sd15_inpaint_fp16.safetensors",
            "SD1-5/control_v11p_sd15_lineart_fp16.safetensors",
            "SD1-5/control_v11p_sd15_mlsd_fp16.safetensors",
            "SD1-5/control_v11p_sd15_normalbae_fp16.safetensors",
            "SD1-5/control_v11p_sd15_openpose_fp16.safetensors",
            "SD1-5/control_v11p_sd15_scribble_fp16.safetensors",
            "SD1-5/control_v11p_sd15_seg_fp16.safetensors",
            "SD1-5/control_v11p_sd15_softedge_fp16.safetensors",
            "SD1-5/control_v11p_sd15s2_lineart_anime_fp16.safetensors",
            "SDXL/control-lora-canny-rank256.safetensors",
            "SDXL/control-lora-depth-rank256.safetensors",
            "SDXL/control-lora-openposeXL2-rank256.safetensors",
            "SDXL/control-lora-recolor-rank256.safetensors",
            "SDXL/control-lora-sketch-rank256.safetensors"
          ]
        ],
        "controlnet_strength_3": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "start_percent_3": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_percent_3": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "image_1": [
          "IMAGE"
        ],
        "image_2": [
          "IMAGE"
        ],
        "image_3": [
          "IMAGE"
        ],
        "controlnet_stack": [
          "CONTROL_NET_STACK"
        ]
      }
    },
    "output": [
      "CONTROL_NET_STACK",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "CONTROLNET_STACK",
      "show_help"
    ],
    "name": "CR Multi-ControlNet Stack",
    "display_name": "\ud83d\udd79\ufe0f CR Multi-ControlNet Stack",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udd79\ufe0f ControlNet",
    "output_node": false
  },
  "CR Apply Multi-ControlNet": {
    "input": {
      "required": {
        "base_positive": [
          "CONDITIONING"
        ],
        "base_negative": [
          "CONDITIONING"
        ],
        "switch": [
          [
            "Off",
            "On"
          ]
        ],
        "controlnet_stack": [
          "CONTROL_NET_STACK"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "base_pos",
      "base_neg",
      "show_help"
    ],
    "name": "CR Apply Multi-ControlNet",
    "display_name": "\ud83d\udd79\ufe0f CR Apply Multi-ControlNet",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udd79\ufe0f ControlNet",
    "output_node": false
  },
  "CR Load LoRA": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "switch": [
          [
            "On",
            "Off"
          ]
        ],
        "lora_name": [
          [
            "None"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "show_help"
    ],
    "name": "CR Load LoRA",
    "display_name": "\ud83d\udc8a CR Load LoRA",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc8a LoRA",
    "output_node": false
  },
  "CR LoRA Stack": {
    "input": {
      "required": {
        "switch_1": [
          [
            "Off",
            "On"
          ]
        ],
        "lora_name_1": [
          [
            "None"
          ]
        ],
        "model_weight_1": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_weight_1": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "switch_2": [
          [
            "Off",
            "On"
          ]
        ],
        "lora_name_2": [
          [
            "None"
          ]
        ],
        "model_weight_2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_weight_2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "switch_3": [
          [
            "Off",
            "On"
          ]
        ],
        "lora_name_3": [
          [
            "None"
          ]
        ],
        "model_weight_3": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_weight_3": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "LORA_STACK",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "LORA_STACK",
      "show_help"
    ],
    "name": "CR LoRA Stack",
    "display_name": "\ud83d\udc8a CR LoRA Stack",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc8a LoRA",
    "output_node": false
  },
  "CR Random LoRA Stack": {
    "input": {
      "required": {
        "exclusive_mode": [
          [
            "Off",
            "On"
          ]
        ],
        "stride": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1000
          }
        ],
        "force_randomize_after_stride": [
          [
            "Off",
            "On"
          ]
        ],
        "lora_name_1": [
          [
            "None"
          ]
        ],
        "switch_1": [
          [
            "Off",
            "On"
          ]
        ],
        "chance_1": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "model_weight_1": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_weight_1": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_2": [
          [
            "None"
          ]
        ],
        "switch_2": [
          [
            "Off",
            "On"
          ]
        ],
        "chance_2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "model_weight_2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_weight_2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_3": [
          [
            "None"
          ]
        ],
        "switch_3": [
          [
            "Off",
            "On"
          ]
        ],
        "chance_3": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "model_weight_3": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_weight_3": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "LORA_STACK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LORA_STACK"
    ],
    "name": "CR Random LoRA Stack",
    "display_name": "\ud83d\udc8a CR Random LoRA Stack",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc8a LoRA",
    "output_node": false
  },
  "CR Random Weight LoRA": {
    "input": {
      "required": {
        "stride": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1000
          }
        ],
        "force_randomize_after_stride": [
          [
            "Off",
            "On"
          ]
        ],
        "lora_name": [
          [
            "None"
          ]
        ],
        "switch": [
          [
            "Off",
            "On"
          ]
        ],
        "weight_min": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "weight_max": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_weight": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "LORA_STACK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LORA_STACK"
    ],
    "name": "CR Random Weight LoRA",
    "display_name": "\ud83d\udc8a CR Random Weight LoRA",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc8a LoRA",
    "output_node": false
  },
  "CR Apply LoRA Stack": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "show_help"
    ],
    "name": "CR Apply LoRA Stack",
    "display_name": "\ud83d\udc8a CR Apply LoRA Stack",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc8a LoRA",
    "output_node": false
  },
  "CR Apply Model Merge": {
    "input": {
      "required": {
        "model_stack": [
          "MODEL_STACK"
        ],
        "merge_method": [
          [
            "Recursive",
            "Weighted"
          ]
        ],
        "normalise_ratios": [
          [
            "Yes",
            "No"
          ]
        ],
        "weight_factor": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "model_mix_info",
      "show_help"
    ],
    "name": "CR Apply Model Merge",
    "display_name": "\u26cf\ufe0f CR Apply Model Merge",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\u26cf\ufe0f Model Merge",
    "output_node": false
  },
  "CR Model Merge Stack": {
    "input": {
      "required": {
        "switch_1": [
          [
            "Off",
            "On"
          ]
        ],
        "ckpt_name1": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "model_ratio1": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -100.0,
            "max": 100.0,
            "step": 0.01
          }
        ],
        "clip_ratio1": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -100.0,
            "max": 100.0,
            "step": 0.01
          }
        ],
        "switch_2": [
          [
            "Off",
            "On"
          ]
        ],
        "ckpt_name2": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "model_ratio2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -100.0,
            "max": 100.0,
            "step": 0.01
          }
        ],
        "clip_ratio2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -100.0,
            "max": 100.0,
            "step": 0.01
          }
        ],
        "switch_3": [
          [
            "Off",
            "On"
          ]
        ],
        "ckpt_name3": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "model_ratio3": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -100.0,
            "max": 100.0,
            "step": 0.01
          }
        ],
        "clip_ratio3": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -100.0,
            "max": 100.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "model_stack": [
          "MODEL_STACK"
        ]
      }
    },
    "output": [
      "MODEL_STACK",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MODEL_STACK",
      "show_help"
    ],
    "name": "CR Model Merge Stack",
    "display_name": "\u26cf\ufe0f CR Model Merge Stack",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\u26cf\ufe0f Model Merge",
    "output_node": false
  },
  "CR Module Pipe Loader": {
    "input": {
      "required": {},
      "optional": {
        "model": [
          "MODEL"
        ],
        "pos": [
          "CONDITIONING"
        ],
        "neg": [
          "CONDITIONING"
        ],
        "latent": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ],
        "clip": [
          "CLIP"
        ],
        "controlnet": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "pipe",
      "show_help"
    ],
    "name": "CR Module Pipe Loader",
    "display_name": "\u2708\ufe0f CR Module Pipe Loader",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfb7 Pipe/\u2708\ufe0f Module",
    "output_node": false
  },
  "CR Module Input": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "CLIP",
      "CONTROL_NET",
      "IMAGE",
      "INT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "pipe",
      "model",
      "pos",
      "neg",
      "latent",
      "vae",
      "clip",
      "controlnet",
      "image",
      "seed",
      "show_help"
    ],
    "name": "CR Module Input",
    "display_name": "\u2708\ufe0f CR Module Input",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfb7 Pipe/\u2708\ufe0f Module",
    "output_node": false
  },
  "CR Module Output": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ]
      },
      "optional": {
        "model": [
          "MODEL"
        ],
        "pos": [
          "CONDITIONING"
        ],
        "neg": [
          "CONDITIONING"
        ],
        "latent": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ],
        "clip": [
          "CLIP"
        ],
        "controlnet": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "pipe",
      "show_help"
    ],
    "name": "CR Module Output",
    "display_name": "\u2708\ufe0f CR Module Output",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfb7 Pipe/\u2708\ufe0f Module",
    "output_node": false
  },
  "CR Image Pipe In": {
    "input": {
      "required": {},
      "optional": {
        "image": [
          "IMAGE"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048
          }
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 1,
            "max": 2000
          }
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "pipe",
      "show_help"
    ],
    "name": "CR Image Pipe In",
    "display_name": "\ud83d\udee9 CR Image Pipe In",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfb7 Pipe/\ud83d\udee9\ufe0f Image",
    "output_node": false
  },
  "CR Image Pipe Edit": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048
          }
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 1,
            "max": 2000
          }
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "pipe",
      "show_help"
    ],
    "name": "CR Image Pipe Edit",
    "display_name": "\ud83d\udee9\ufe0f CR Image Pipe Edit",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfb7 Pipe/\ud83d\udee9\ufe0f Image",
    "output_node": false
  },
  "CR Image Pipe Out": {
    "input": {
      "required": {
        "pipe": [
          "PIPE_LINE"
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "IMAGE",
      "INT",
      "INT",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "pipe",
      "image",
      "width",
      "height",
      "upscale_factor",
      "show_help"
    ],
    "name": "CR Image Pipe Out",
    "display_name": "\ud83d\udee9\ufe0f CR Image Pipe Out",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfb7 Pipe/\ud83d\udee9\ufe0f Image",
    "output_node": false
  },
  "CR Pipe Switch": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 2
          }
        ],
        "pipe1": [
          "PIPE_LINE"
        ],
        "pipe2": [
          "PIPE_LINE"
        ]
      }
    },
    "output": [
      "PIPE_LINE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "PIPE_LINE",
      "show_help"
    ],
    "name": "CR Pipe Switch",
    "display_name": "\ud83d\udd00\ufe0f CR Pipe Switch",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfb7 Pipe",
    "output_node": true
  },
  "CR SDXL Prompt Mix Presets": {
    "input": {
      "required": {},
      "optional": {
        "prompt_positive": [
          "STRING",
          {
            "multiline": true,
            "default": "prompt_pos"
          }
        ],
        "prompt_negative": [
          "STRING",
          {
            "multiline": true,
            "default": "prompt_neg"
          }
        ],
        "style_positive": [
          "STRING",
          {
            "multiline": true,
            "default": "style_pos"
          }
        ],
        "style_negative": [
          "STRING",
          {
            "multiline": true,
            "default": "style_neg"
          }
        ],
        "preset": [
          [
            "default with no style text",
            "default with style text",
            "style boost 1",
            "style boost 2",
            "style text to refiner"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "pos_g",
      "pos_l",
      "pos_r",
      "neg_g",
      "neg_l",
      "neg_r",
      "show_help"
    ],
    "name": "CR SDXL Prompt Mix Presets",
    "display_name": "\ud83c\udf1f CR SDXL Prompt Mix Presets",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udf1f SDXL",
    "output_node": false
  },
  "CR SDXL Style Text": {
    "input": {
      "required": {
        "positive_style": [
          "STRING",
          {
            "default": "POS_STYLE",
            "multiline": true
          }
        ],
        "negative_style": [
          "STRING",
          {
            "default": "NEG_STYLE",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive_prompt_text_l",
      "negative_prompt_text_l",
      "show_help"
    ],
    "name": "CR SDXL Style Text",
    "display_name": "\ud83c\udf1f CR SDXL Style Text",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udf1f SDXL",
    "output_node": false
  },
  "CR SDXL Base Prompt Encoder": {
    "input": {
      "required": {
        "base_clip": [
          "CLIP"
        ],
        "pos_g": [
          "STRING",
          {
            "multiline": true,
            "default": "POS_G"
          }
        ],
        "pos_l": [
          "STRING",
          {
            "multiline": true,
            "default": "POS_L"
          }
        ],
        "neg_g": [
          "STRING",
          {
            "multiline": true,
            "default": "NEG_G"
          }
        ],
        "neg_l": [
          "STRING",
          {
            "multiline": true,
            "default": "NEG_L"
          }
        ],
        "preset": [
          [
            "preset A",
            "preset B",
            "preset C"
          ]
        ],
        "base_width": [
          "INT",
          {
            "default": 4096.0,
            "min": 0,
            "max": 8192,
            "step": 64
          }
        ],
        "base_height": [
          "INT",
          {
            "default": 4096.0,
            "min": 0,
            "max": 8192,
            "step": 64
          }
        ],
        "crop_w": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 64
          }
        ],
        "crop_h": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 64
          }
        ],
        "target_width": [
          "INT",
          {
            "default": 4096.0,
            "min": 0,
            "max": 8192,
            "step": 64
          }
        ],
        "target_height": [
          "INT",
          {
            "default": 4096.0,
            "min": 0,
            "max": 8192,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "base_positive",
      "base_negative",
      "show_help"
    ],
    "name": "CR SDXL Base Prompt Encoder",
    "display_name": "\ud83c\udf1f CR SDXL Base Prompt Encoder",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udf1f SDXL",
    "output_node": false
  },
  "CR Multi Upscale Stack": {
    "input": {
      "required": {
        "switch_1": [
          [
            "On",
            "Off"
          ]
        ],
        "upscale_model_1": [
          [
            "None",
            "4x-UltraSharp.pth",
            "4x_foolhardy_Remacri.pth",
            "ESRGAN_4x.pth",
            "RealESRGAN_x4plus.pth"
          ]
        ],
        "rescale_factor_1": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.01,
            "max": 16.0,
            "step": 0.01
          }
        ],
        "switch_2": [
          [
            "On",
            "Off"
          ]
        ],
        "upscale_model_2": [
          [
            "None",
            "4x-UltraSharp.pth",
            "4x_foolhardy_Remacri.pth",
            "ESRGAN_4x.pth",
            "RealESRGAN_x4plus.pth"
          ]
        ],
        "rescale_factor_2": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.01,
            "max": 16.0,
            "step": 0.01
          }
        ],
        "switch_3": [
          [
            "On",
            "Off"
          ]
        ],
        "upscale_model_3": [
          [
            "None",
            "4x-UltraSharp.pth",
            "4x_foolhardy_Remacri.pth",
            "ESRGAN_4x.pth",
            "RealESRGAN_x4plus.pth"
          ]
        ],
        "rescale_factor_3": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.01,
            "max": 16.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "upscale_stack": [
          "UPSCALE_STACK"
        ]
      }
    },
    "output": [
      "UPSCALE_STACK",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "UPSCALE_STACK",
      "show_help"
    ],
    "name": "CR Multi Upscale Stack",
    "display_name": "\ud83d\udd0d CR Multi Upscale Stack",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udd0d Upscale",
    "output_node": false
  },
  "CR Upscale Image": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "upscale_model": [
          [
            "4x-UltraSharp.pth",
            "4x_foolhardy_Remacri.pth",
            "ESRGAN_4x.pth",
            "RealESRGAN_x4plus.pth"
          ]
        ],
        "mode": [
          [
            "rescale",
            "resize"
          ]
        ],
        "rescale_factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.01,
            "max": 16.0,
            "step": 0.01
          }
        ],
        "resize_width": [
          "INT",
          {
            "default": 1024,
            "min": 1,
            "max": 48000,
            "step": 1
          }
        ],
        "resampling_method": [
          [
            "lanczos",
            "nearest",
            "bilinear",
            "bicubic"
          ]
        ],
        "supersample": [
          [
            "true",
            "false"
          ]
        ],
        "rounding_modulus": [
          "INT",
          {
            "default": 8,
            "min": 8,
            "max": 1024,
            "step": 8
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Upscale Image",
    "display_name": "\ud83d\udd0d CR Upscale Image",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udd0d Upscale",
    "output_node": false
  },
  "CR Apply Multi Upscale": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "resampling_method": [
          [
            "lanczos",
            "nearest",
            "bilinear",
            "bicubic"
          ]
        ],
        "supersample": [
          [
            "true",
            "false"
          ]
        ],
        "rounding_modulus": [
          "INT",
          {
            "default": 8,
            "min": 8,
            "max": 1024,
            "step": 8
          }
        ],
        "upscale_stack": [
          "UPSCALE_STACK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Apply Multi Upscale",
    "display_name": "\ud83d\udd0d CR Apply Multi Upscale",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udd0d Upscale",
    "output_node": false
  },
  "CR XY List": {
    "input": {
      "required": {
        "index": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "list1": [
          "STRING",
          {
            "multiline": true,
            "default": "x"
          }
        ],
        "x_prepend": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "x_append": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "x_annotation_prepend": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "list2": [
          "STRING",
          {
            "multiline": true,
            "default": "y"
          }
        ],
        "y_prepend": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "y_append": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "y_annotation_prepend": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "BOOLEAN",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "X",
      "Y",
      "x_annotation",
      "y_annotation",
      "trigger",
      "show_help"
    ],
    "name": "CR XY List",
    "display_name": "\ud83d\udcc9 CR XY List",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udcc9 XY Grid",
    "output_node": false
  },
  "CR XY Interpolate": {
    "input": {
      "required": {
        "x_columns": [
          "INT",
          {
            "default": 5.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "x_start_value": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.01
          }
        ],
        "x_step": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.01
          }
        ],
        "x_annotation_prepend": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "y_rows": [
          "INT",
          {
            "default": 5.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "y_start_value": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.01
          }
        ],
        "y_step": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.01
          }
        ],
        "y_annotation_prepend": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "index": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "gradient_profile": [
          [
            "Lerp"
          ]
        ]
      }
    },
    "output": [
      "FLOAT",
      "FLOAT",
      "STRING",
      "STRING",
      "BOOLEAN",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "X",
      "Y",
      "x_annotation",
      "y_annotation",
      "trigger",
      "show_help"
    ],
    "name": "CR XY Interpolate",
    "display_name": "\ud83d\udcc9 CR XY Interpolate",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udcc9 XY Grid",
    "output_node": false
  },
  "CR XY From Folder": {
    "input": {
      "required": {
        "image_folder": [
          []
        ],
        "start_index": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 10000
          }
        ],
        "end_index": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10000
          }
        ],
        "max_columns": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10000
          }
        ],
        "x_annotation": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "y_annotation": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "font_size": [
          "INT",
          {
            "default": 50,
            "min": 1
          }
        ],
        "gap": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ]
      },
      "optional": {
        "trigger": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "BOOLEAN",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "trigger",
      "show_help"
    ],
    "name": "CR XY From Folder",
    "display_name": "\ud83d\udcc9 CR XY From Folder",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udcc9 XY Grid",
    "output_node": false
  },
  "CR XY Save Grid Image": {
    "input": {
      "required": {
        "mode": [
          [
            "Save",
            "Preview"
          ]
        ],
        "output_folder": [
          []
        ],
        "image": [
          "IMAGE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "CR"
          }
        ],
        "file_format": [
          [
            "webp",
            "jpg",
            "png",
            "tif"
          ]
        ]
      },
      "optional": {
        "output_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "trigger": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "CR XY Save Grid Image",
    "display_name": "\ud83d\udcc9 CR XY Save Grid Image",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udcc9 XY Grid",
    "output_node": true
  },
  "CR XY Index": {
    "input": {
      "required": {
        "x_columns": [
          "INT",
          {
            "default": 5.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "y_rows": [
          "INT",
          {
            "default": 5.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "index": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "x",
      "y",
      "show_help"
    ],
    "name": "CR XY Index",
    "display_name": "\ud83d\udcc9 CR XY Index",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udcc9 XY Grid",
    "output_node": false
  },
  "CR Halftone Grid": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "dot_style": [
          [
            "Accent",
            "afmhot",
            "autumn",
            "binary",
            "Blues",
            "bone",
            "BrBG",
            "brg",
            "BuGn",
            "BuPu",
            "bwr",
            "cividis",
            "CMRmap",
            "cool",
            "coolwarm",
            "copper",
            "cubehelix",
            "Dark2",
            "flag",
            "gist_earth",
            "gist_gray",
            "gist_heat",
            "gist_rainbow",
            "gist_stern",
            "gist_yarg",
            "GnBu",
            "gnuplot",
            "gnuplot2",
            "gray",
            "Greens",
            "Greys",
            "hot",
            "hsv",
            "inferno",
            "jet",
            "magma",
            "nipy_spectral",
            "ocean",
            "Oranges",
            "OrRd",
            "Paired",
            "Pastel1",
            "Pastel2",
            "pink",
            "PiYG",
            "plasma",
            "PRGn",
            "prism",
            "PuBu",
            "PuBuGn",
            "PuOr",
            "PuRd",
            "Purples",
            "rainbow",
            "RdBu",
            "RdGy",
            "RdPu",
            "RdYlBu",
            "RdYlGn",
            "Reds",
            "seismic",
            "Set1",
            "Set2",
            "Set3",
            "Spectral",
            "spring",
            "summer",
            "tab10",
            "tab20",
            "tab20b",
            "tab20c",
            "terrain",
            "turbo",
            "twilight",
            "twilight_shifted",
            "viridis",
            "winter",
            "Wistia",
            "YlGn",
            "YlGnBu",
            "YlOrBr",
            "YlOrRd"
          ]
        ],
        "reverse_dot_style": [
          [
            "No",
            "Yes"
          ]
        ],
        "dot_frequency": [
          "INT",
          {
            "default": 50,
            "min": 1,
            "max": 200,
            "step": 1
          }
        ],
        "background_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "x_pos": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "y_pos": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "bg_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Halftone Grid",
    "display_name": "\ud83d\udfeb CR Halftone Grid",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
    "output_node": false
  },
  "CR Color Bars": {
    "input": {
      "required": {
        "mode": [
          [
            "2-color"
          ]
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "color_1": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "color_2": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "orientation": [
          [
            "vertical",
            "horizontal",
            "diagonal",
            "alt_diagonal"
          ]
        ],
        "bar_frequency": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 200,
            "step": 1
          }
        ],
        "offset": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 20,
            "step": 0.05
          }
        ]
      },
      "optional": {
        "color1_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "color2_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Color Bars",
    "display_name": "\ud83d\udfeb CR Color Bars",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
    "output_node": false
  },
  "CR Style Bars": {
    "input": {
      "required": {
        "mode": [
          [
            "color bars",
            "sin wave",
            "gradient bars"
          ]
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "bar_style": [
          [
            "Accent",
            "afmhot",
            "autumn",
            "binary",
            "Blues",
            "bone",
            "BrBG",
            "brg",
            "BuGn",
            "BuPu",
            "bwr",
            "cividis",
            "CMRmap",
            "cool",
            "coolwarm",
            "copper",
            "cubehelix",
            "Dark2",
            "flag",
            "gist_earth",
            "gist_gray",
            "gist_heat",
            "gist_rainbow",
            "gist_stern",
            "gist_yarg",
            "GnBu",
            "gnuplot",
            "gnuplot2",
            "gray",
            "Greens",
            "Greys",
            "hot",
            "hsv",
            "inferno",
            "jet",
            "magma",
            "nipy_spectral",
            "ocean",
            "Oranges",
            "OrRd",
            "Paired",
            "Pastel1",
            "Pastel2",
            "pink",
            "PiYG",
            "plasma",
            "PRGn",
            "prism",
            "PuBu",
            "PuBuGn",
            "PuOr",
            "PuRd",
            "Purples",
            "rainbow",
            "RdBu",
            "RdGy",
            "RdPu",
            "RdYlBu",
            "RdYlGn",
            "Reds",
            "seismic",
            "Set1",
            "Set2",
            "Set3",
            "Spectral",
            "spring",
            "summer",
            "tab10",
            "tab20",
            "tab20b",
            "tab20c",
            "terrain",
            "turbo",
            "twilight",
            "twilight_shifted",
            "viridis",
            "winter",
            "Wistia",
            "YlGn",
            "YlGnBu",
            "YlOrBr",
            "YlOrRd"
          ]
        ],
        "orientation": [
          [
            "vertical",
            "horizontal"
          ]
        ],
        "bar_frequency": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 200,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Style Bars",
    "display_name": "\ud83d\udfea CR Style Bars",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
    "output_node": false
  },
  "CR Checker Pattern": {
    "input": {
      "required": {
        "mode": [
          [
            "regular",
            "stepped"
          ]
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "color_1": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "color_2": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "grid_frequency": [
          "INT",
          {
            "default": 8,
            "min": 1,
            "max": 200,
            "step": 1
          }
        ],
        "step": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 200,
            "step": 1
          }
        ]
      },
      "optional": {
        "color1_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "color2_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Checker Pattern",
    "display_name": "\ud83d\udfe6 CR Checker Pattern",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
    "output_node": false
  },
  "CR Polygons": {
    "input": {
      "required": {
        "mode": [
          [
            "hexagons",
            "triangles"
          ]
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "rows": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 512
          }
        ],
        "columns": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 512
          }
        ],
        "face_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "background_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "line_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "line_width": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 512
          }
        ]
      },
      "optional": {
        "face_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "bg_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "line_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Polygons",
    "display_name": "\ud83d\udfe9 CR Polygons",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
    "output_node": false
  },
  "CR Color Gradient": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "start_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "end_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "gradient_distance": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 2,
            "step": 0.05
          }
        ],
        "linear_transition": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "orientation": [
          [
            "vertical",
            "horizontal"
          ]
        ]
      },
      "optional": {
        "start_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "end_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Color Gradient",
    "display_name": "\ud83d\udfe8 CR Color Gradient",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
    "output_node": false
  },
  "CR Radial Gradient": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "start_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "end_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "gradient_distance": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 2,
            "step": 0.05
          }
        ],
        "radial_center_x": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "radial_center_y": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ]
      },
      "optional": {
        "start_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "end_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_Help"
    ],
    "name": "CR Radial Gradient",
    "display_name": "\ud83d\udfe8 CR Radial Gradient",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
    "output_node": false
  },
  "CR Starburst Lines": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "num_lines": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 500
          }
        ],
        "line_length": [
          "FLOAT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 0.1
          }
        ],
        "line_width": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 512
          }
        ],
        "line_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "background_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "center_x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ],
        "center_y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ],
        "rotation": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 720
          }
        ]
      },
      "optional": {
        "line_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "bg_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Starburst Lines",
    "display_name": "\ud83d\udfe7 CR Starburst Lines",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
    "output_node": false
  },
  "CR Starburst Colors": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "num_triangles": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 512
          }
        ],
        "color_1": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "color_2": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "center_x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 512
          }
        ],
        "center_y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 512
          }
        ],
        "rotation": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 720
          }
        ],
        "bbox_factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0,
            "max": 2,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "color1_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "color2_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Starburst Colors",
    "display_name": "\ud83d\udfe5 CR Starburst Colors",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
    "output_node": false
  },
  "CR Simple Binary Pattern": {
    "input": {
      "required": {
        "binary_pattern": [
          "STRING",
          {
            "multiline": true,
            "default": "10101"
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Simple Binary Pattern",
    "display_name": "\ud83d\udfe5 CR Simple Binary Pattern",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
    "output_node": false
  },
  "CR Binary Pattern": {
    "input": {
      "required": {
        "binary_pattern": [
          "STRING",
          {
            "multiline": true,
            "default": "10101"
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096
          }
        ],
        "background_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "color_0": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "color_1": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "outline_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ],
        "outline_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "jitter_distance": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ]
      },
      "optional": {
        "bg_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "color0_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "color1_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "outline_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Binary Pattern",
    "display_name": "\ud83d\udfe5 CR Binary Pattern",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
    "output_node": false
  },
  "CR Overlay Text": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "text"
          }
        ],
        "font_name": [
          [
            "comic.ttf",
            "YoungSerif-Regular.ttf",
            "Roboto-Regular.ttf",
            "Quicksand-Bold.ttf",
            "impact.ttf",
            "AlumniSansCollegiateOne-Regular.ttf",
            "PixelifySans-Bold.ttf",
            "Oswald-Bold.ttf",
            "NotoSansArabic-Regular.ttf"
          ]
        ],
        "font_size": [
          "INT",
          {
            "default": 50,
            "min": 1,
            "max": 1024
          }
        ],
        "font_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "align": [
          [
            "center",
            "top",
            "bottom"
          ]
        ],
        "justify": [
          [
            "center",
            "left",
            "right"
          ]
        ],
        "margins": [
          "INT",
          {
            "default": 0,
            "min": -1024,
            "max": 1024
          }
        ],
        "line_spacing": [
          "INT",
          {
            "default": 0,
            "min": -1024,
            "max": 1024
          }
        ],
        "position_x": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096
          }
        ],
        "position_y": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096
          }
        ],
        "rotation_angle": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -360.0,
            "max": 360.0,
            "step": 0.1
          }
        ],
        "rotation_options": [
          [
            "text center",
            "image center"
          ]
        ]
      },
      "optional": {
        "font_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Overlay Text",
    "display_name": "\ud83d\udd24 CR Overlay Text",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83d\udd24 Text",
    "output_node": false
  },
  "CR Draw Text": {
    "input": {
      "required": {
        "image_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048
          }
        ],
        "image_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "text"
          }
        ],
        "font_name": [
          [
            "comic.ttf",
            "YoungSerif-Regular.ttf",
            "Roboto-Regular.ttf",
            "Quicksand-Bold.ttf",
            "impact.ttf",
            "AlumniSansCollegiateOne-Regular.ttf",
            "PixelifySans-Bold.ttf",
            "Oswald-Bold.ttf",
            "NotoSansArabic-Regular.ttf"
          ]
        ],
        "font_size": [
          "INT",
          {
            "default": 50,
            "min": 1,
            "max": 1024
          }
        ],
        "font_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "background_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "align": [
          [
            "center",
            "top",
            "bottom"
          ]
        ],
        "justify": [
          [
            "center",
            "left",
            "right"
          ]
        ],
        "margins": [
          "INT",
          {
            "default": 0,
            "min": -1024,
            "max": 1024
          }
        ],
        "line_spacing": [
          "INT",
          {
            "default": 0,
            "min": -1024,
            "max": 1024
          }
        ],
        "position_x": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096
          }
        ],
        "position_y": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096
          }
        ],
        "rotation_angle": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -360.0,
            "max": 360.0,
            "step": 0.1
          }
        ],
        "rotation_options": [
          [
            "text center",
            "image center"
          ]
        ]
      },
      "optional": {
        "font_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "bg_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Draw Text",
    "display_name": "\ud83d\udd24\ufe0f CR Draw Text",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83d\udd24 Text",
    "output_node": false
  },
  "CR Mask Text": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "text"
          }
        ],
        "font_name": [
          [
            "comic.ttf",
            "YoungSerif-Regular.ttf",
            "Roboto-Regular.ttf",
            "Quicksand-Bold.ttf",
            "impact.ttf",
            "AlumniSansCollegiateOne-Regular.ttf",
            "PixelifySans-Bold.ttf",
            "Oswald-Bold.ttf",
            "NotoSansArabic-Regular.ttf"
          ]
        ],
        "font_size": [
          "INT",
          {
            "default": 50,
            "min": 1,
            "max": 1024
          }
        ],
        "background_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "align": [
          [
            "center",
            "top",
            "bottom"
          ]
        ],
        "justify": [
          [
            "center",
            "left",
            "right"
          ]
        ],
        "margins": [
          "INT",
          {
            "default": 0,
            "min": -1024,
            "max": 1024
          }
        ],
        "line_spacing": [
          "INT",
          {
            "default": 0,
            "min": -1024,
            "max": 1024
          }
        ],
        "position_x": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096
          }
        ],
        "position_y": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096
          }
        ],
        "rotation_angle": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -360.0,
            "max": 360.0,
            "step": 0.1
          }
        ],
        "rotation_options": [
          [
            "text center",
            "image center"
          ]
        ]
      },
      "optional": {
        "bg_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Mask Text",
    "display_name": "\ud83d\udd24\ufe0f CR Mask Text",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83d\udd24 Text",
    "output_node": false
  },
  "CR Composite Text": {
    "input": {
      "required": {
        "image_text": [
          "IMAGE"
        ],
        "image_background": [
          "IMAGE"
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "text"
          }
        ],
        "font_name": [
          [
            "comic.ttf",
            "YoungSerif-Regular.ttf",
            "Roboto-Regular.ttf",
            "Quicksand-Bold.ttf",
            "impact.ttf",
            "AlumniSansCollegiateOne-Regular.ttf",
            "PixelifySans-Bold.ttf",
            "Oswald-Bold.ttf",
            "NotoSansArabic-Regular.ttf"
          ]
        ],
        "font_size": [
          "INT",
          {
            "default": 50,
            "min": 1,
            "max": 1024
          }
        ],
        "align": [
          [
            "center",
            "top",
            "bottom"
          ]
        ],
        "justify": [
          [
            "center",
            "left",
            "right"
          ]
        ],
        "margins": [
          "INT",
          {
            "default": 0,
            "min": -1024,
            "max": 1024
          }
        ],
        "line_spacing": [
          "INT",
          {
            "default": 0,
            "min": -1024,
            "max": 1024
          }
        ],
        "position_x": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096
          }
        ],
        "position_y": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096
          }
        ],
        "rotation_angle": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -360.0,
            "max": 360.0,
            "step": 0.1
          }
        ],
        "rotation_options": [
          [
            "text center",
            "image center"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Composite Text",
    "display_name": "\ud83d\udd24\ufe0f CR Composite Text",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83d\udd24 Text",
    "output_node": false
  },
  "CR Simple Text Watermark": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "text": [
          "STRING",
          {
            "multiline": false,
            "default": "@ your name"
          }
        ],
        "align": [
          [
            "center",
            "top left",
            "top center",
            "top right",
            "bottom left",
            "bottom center",
            "bottom right"
          ]
        ],
        "opacity": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "font_name": [
          [
            "comic.ttf",
            "YoungSerif-Regular.ttf",
            "Roboto-Regular.ttf",
            "Quicksand-Bold.ttf",
            "impact.ttf",
            "AlumniSansCollegiateOne-Regular.ttf",
            "PixelifySans-Bold.ttf",
            "Oswald-Bold.ttf",
            "NotoSansArabic-Regular.ttf"
          ]
        ],
        "font_size": [
          "INT",
          {
            "default": 50,
            "min": 1,
            "max": 1024
          }
        ],
        "font_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "x_margin": [
          "INT",
          {
            "default": 20,
            "min": -1024,
            "max": 1024
          }
        ],
        "y_margin": [
          "INT",
          {
            "default": 20,
            "min": -1024,
            "max": 1024
          }
        ]
      },
      "optional": {
        "font_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Simple Text Watermark",
    "display_name": "\ud83d\udd24\ufe0f CR Simple Text Watermark",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83d\udd24 Text",
    "output_node": false
  },
  "CR Halftone Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "dot_size": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 30,
            "step": 1
          }
        ],
        "dot_shape": [
          [
            "ellipse",
            "rectangle"
          ],
          {
            "default": "ellipse"
          }
        ],
        "resolution": [
          [
            "normal",
            "hi-res (2x output size)"
          ],
          {
            "default": "normal"
          }
        ],
        "angle_c": [
          "INT",
          {
            "default": 75,
            "min": 0,
            "max": 360,
            "step": 1
          }
        ],
        "angle_m": [
          "INT",
          {
            "default": 45,
            "min": 0,
            "max": 360,
            "step": 1
          }
        ],
        "angle_y": [
          "INT",
          {
            "default": 15,
            "min": 0,
            "max": 360,
            "step": 1
          }
        ],
        "angle_k": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 360,
            "step": 1
          }
        ],
        "greyscale": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "antialias": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "antialias_scale": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 4,
            "step": 1
          }
        ],
        "border_blending": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Halftone Filter",
    "display_name": "\ud83c\udfa8 Halftone Filter",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83c\udfa8 Filter",
    "output_node": false
  },
  "CR Color Tint": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.1,
            "max": 1.0,
            "step": 0.1
          }
        ],
        "mode": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ]
      },
      "optional": {
        "tint_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Color Tint",
    "display_name": "\ud83c\udfa8 CR Color Tint",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83c\udfa8 Filter",
    "output_node": false
  },
  "CR Page Layout": {
    "input": {
      "required": {
        "layout_options": [
          [
            "header",
            "footer",
            "header and footer",
            "no header or footer"
          ]
        ],
        "image_panel": [
          "IMAGE"
        ],
        "header_height": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ],
        "header_text": [
          "STRING",
          {
            "multiline": true,
            "default": "text"
          }
        ],
        "header_align": [
          [
            "left",
            "center",
            "right"
          ]
        ],
        "footer_height": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ],
        "footer_text": [
          "STRING",
          {
            "multiline": true,
            "default": "text"
          }
        ],
        "footer_align": [
          [
            "left",
            "center",
            "right"
          ]
        ],
        "font_name": [
          [
            "comic.ttf",
            "YoungSerif-Regular.ttf",
            "Roboto-Regular.ttf",
            "Quicksand-Bold.ttf",
            "impact.ttf",
            "AlumniSansCollegiateOne-Regular.ttf",
            "PixelifySans-Bold.ttf",
            "Oswald-Bold.ttf",
            "NotoSansArabic-Regular.ttf"
          ]
        ],
        "font_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "header_font_size": [
          "INT",
          {
            "default": 150,
            "min": 0,
            "max": 1024
          }
        ],
        "footer_font_size": [
          "INT",
          {
            "default": 50,
            "min": 0,
            "max": 1024
          }
        ],
        "border_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ],
        "border_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "background_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ]
      },
      "optional": {
        "font_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "border_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "bg_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "image",
      "show_help"
    ],
    "name": "CR Page Layout",
    "display_name": "\ud83c\udf01 CR Page Layout",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
    "output_node": false
  },
  "CR Image Panel": {
    "input": {
      "required": {
        "image_1": [
          "IMAGE"
        ],
        "border_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ],
        "border_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "outline_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ],
        "outline_color": [
          [
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "layout_direction": [
          [
            "horizontal",
            "vertical"
          ]
        ]
      },
      "optional": {
        "image_2": [
          "IMAGE"
        ],
        "image_3": [
          "IMAGE"
        ],
        "image_4": [
          "IMAGE"
        ],
        "border_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "image",
      "show_help"
    ],
    "name": "CR Image Panel",
    "display_name": "\ud83c\udf01 CR Image Panel",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
    "output_node": false
  },
  "CR Image Grid Panel": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "border_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ],
        "border_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "outline_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ],
        "outline_color": [
          [
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "max_columns": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 256
          }
        ]
      },
      "optional": {
        "border_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "image",
      "show_help"
    ],
    "name": "CR Image Grid Panel",
    "display_name": "\ud83c\udf01 CR Image Grid Panel",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
    "output_node": false
  },
  "CR Image Border": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "top_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096
          }
        ],
        "bottom_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096
          }
        ],
        "left_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096
          }
        ],
        "right_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096
          }
        ],
        "border_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "outline_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1024
          }
        ],
        "outline_color": [
          [
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ]
      },
      "optional": {
        "border_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "image",
      "show_help"
    ],
    "name": "CR Image Border",
    "display_name": "\ud83c\udf01 CR Image Border",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
    "output_node": false
  },
  "CR Simple Text Panel": {
    "input": {
      "required": {
        "panel_width": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096
          }
        ],
        "panel_height": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "text"
          }
        ],
        "font_name": [
          [
            "comic.ttf",
            "YoungSerif-Regular.ttf",
            "Roboto-Regular.ttf",
            "Quicksand-Bold.ttf",
            "impact.ttf",
            "AlumniSansCollegiateOne-Regular.ttf",
            "PixelifySans-Bold.ttf",
            "Oswald-Bold.ttf",
            "NotoSansArabic-Regular.ttf"
          ]
        ],
        "font_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "font_size": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 1024
          }
        ],
        "font_outline_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 50
          }
        ],
        "font_outline_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "background_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "align": [
          [
            "top",
            "center",
            "bottom"
          ]
        ],
        "justify": [
          [
            "left",
            "center",
            "right"
          ]
        ]
      },
      "optional": {
        "font_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "bg_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "image",
      "show_help"
    ],
    "name": "CR Simple Text Panel",
    "display_name": "\ud83c\udf01 CR Simple Text Panel",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
    "output_node": false
  },
  "CR Color Panel": {
    "input": {
      "required": {
        "panel_width": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096
          }
        ],
        "panel_height": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096
          }
        ],
        "fill_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ]
      },
      "optional": {
        "fill_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "image",
      "show_help"
    ],
    "name": "CR Color Panel",
    "display_name": "\ud83c\udf01 CR Color Panel",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
    "output_node": false
  },
  "CR Overlay Transparent Image": {
    "input": {
      "required": {
        "back_image": [
          "IMAGE"
        ],
        "overlay_image": [
          "IMAGE"
        ],
        "transparency": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.1
          }
        ],
        "offset_x": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096
          }
        ],
        "offset_y": [
          "INT",
          {
            "default": 0,
            "min": -4096,
            "max": 4096
          }
        ],
        "rotation_angle": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -360.0,
            "max": 360.0,
            "step": 0.1
          }
        ],
        "overlay_scale_factor": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -0.1,
            "max": 100.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "CR Overlay Transparent Image",
    "display_name": "\ud83c\udf01 CR Overlay Transparent Image",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
    "output_node": false
  },
  "CR Simple Meme Template": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "preset": [
          [
            "custom",
            "One Does Not Simply ... MEME IN COMFY",
            "This is fine.",
            "Good Morning ... No Such Thing!"
          ]
        ],
        "text_top": [
          "STRING",
          {
            "multiline": true,
            "default": "text_top"
          }
        ],
        "text_bottom": [
          "STRING",
          {
            "multiline": true,
            "default": "text_bottom"
          }
        ],
        "font_name": [
          [
            "comic.ttf",
            "YoungSerif-Regular.ttf",
            "Roboto-Regular.ttf",
            "Quicksand-Bold.ttf",
            "impact.ttf",
            "AlumniSansCollegiateOne-Regular.ttf",
            "PixelifySans-Bold.ttf",
            "Oswald-Bold.ttf",
            "NotoSansArabic-Regular.ttf"
          ]
        ],
        "max_font_size": [
          "INT",
          {
            "default": 150,
            "min": 20,
            "max": 2048
          }
        ],
        "font_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "font_outline": [
          [
            "none",
            "thin",
            "thick",
            "extra thick"
          ]
        ],
        "bar_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "bar_options": [
          [
            "no bars",
            "top",
            "bottom",
            "top and bottom"
          ]
        ]
      },
      "optional": {
        "font_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "bar_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "image",
      "show_help"
    ],
    "name": "CR Simple Meme Template",
    "display_name": "\ud83d\udc7d CR Simple Meme Template",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83d\udc7d Template",
    "output_node": false
  },
  "CR Simple Banner": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "banner_text": [
          "STRING",
          {
            "multiline": true,
            "default": "text"
          }
        ],
        "font_name": [
          [
            "comic.ttf",
            "YoungSerif-Regular.ttf",
            "Roboto-Regular.ttf",
            "Quicksand-Bold.ttf",
            "impact.ttf",
            "AlumniSansCollegiateOne-Regular.ttf",
            "PixelifySans-Bold.ttf",
            "Oswald-Bold.ttf",
            "NotoSansArabic-Regular.ttf"
          ]
        ],
        "max_font_size": [
          "INT",
          {
            "default": 150,
            "min": 20,
            "max": 2048
          }
        ],
        "font_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "outline_thickness": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 500
          }
        ],
        "outline_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "margin_size": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 500
          }
        ]
      },
      "optional": {
        "font_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "outline_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "image",
      "show_help"
    ],
    "name": "CR Simple Banner",
    "display_name": "\ud83d\udc7d CR Simple Banner",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83d\udc7d Template",
    "output_node": false
  },
  "CR Comic Panel Templates": {
    "input": {
      "required": {
        "page_width": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096
          }
        ],
        "page_height": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096
          }
        ],
        "template": [
          [
            "custom",
            "G22",
            "G33",
            "H2",
            "H3",
            "H12",
            "H13",
            "H21",
            "H23",
            "H31",
            "H32",
            "V2",
            "V3",
            "V12",
            "V13",
            "V21",
            "V23",
            "V31",
            "V32"
          ]
        ],
        "reading_direction": [
          [
            "left to right",
            "right to left"
          ]
        ],
        "border_thickness": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 1024
          }
        ],
        "outline_thickness": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 1024
          }
        ],
        "outline_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "panel_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ],
        "background_color": [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo"
          ]
        ]
      },
      "optional": {
        "images": [
          "IMAGE"
        ],
        "custom_panel_layout": [
          "STRING",
          {
            "multiline": false,
            "default": "H123"
          }
        ],
        "outline_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "panel_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ],
        "bg_color_hex": [
          "STRING",
          {
            "multiline": false,
            "default": "#000000"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "image",
      "show_help"
    ],
    "name": "CR Comic Panel Templates",
    "display_name": "\ud83d\udc7d CR Comic Panel Templates",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83d\udc7d Template",
    "output_node": false
  },
  "CR Simple Image Compare": {
    "input": {
      "required": {
        "text1": [
          "STRING",
          {
            "multiline": true,
            "default": "text"
          }
        ],
        "text2": [
          "STRING",
          {
            "multiline": true,
            "default": "text"
          }
        ],
        "footer_height": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 1024
          }
        ],
        "font_name": [
          [
            "comic.ttf",
            "YoungSerif-Regular.ttf",
            "Roboto-Regular.ttf",
            "Quicksand-Bold.ttf",
            "impact.ttf",
            "AlumniSansCollegiateOne-Regular.ttf",
            "PixelifySans-Bold.ttf",
            "Oswald-Bold.ttf",
            "NotoSansArabic-Regular.ttf"
          ]
        ],
        "font_size": [
          "INT",
          {
            "default": 50,
            "min": 0,
            "max": 1024
          }
        ],
        "mode": [
          [
            "normal",
            "dark"
          ]
        ],
        "border_thickness": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 1024
          }
        ]
      },
      "optional": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "image",
      "show_help"
    ],
    "name": "CR Simple Image Compare",
    "display_name": "\ud83d\udc7d CR Simple Image Compare",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udc7e Graphics/\ud83d\udc7d Template",
    "output_node": false
  },
  "CR Image Input Switch": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 2
          }
        ]
      },
      "optional": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Image Input Switch",
    "display_name": "\ud83d\udd00 CR Image Input Switch",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
    "output_node": false
  },
  "CR Image Input Switch (4 way)": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4
          }
        ]
      },
      "optional": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ],
        "image3": [
          "IMAGE"
        ],
        "image4": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Image Input Switch (4 way)",
    "display_name": "\ud83d\udd00 CR Image Input Switch (4 way)",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
    "output_node": false
  },
  "CR Latent Input Switch": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 2
          }
        ]
      },
      "optional": {
        "latent1": [
          "LATENT"
        ],
        "latent2": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "LATENT",
      "show_help"
    ],
    "name": "CR Latent Input Switch",
    "display_name": "\ud83d\udd00 CR Latent Input Switch",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
    "output_node": false
  },
  "CR Conditioning Input Switch": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 2
          }
        ]
      },
      "optional": {
        "conditioning1": [
          "CONDITIONING"
        ],
        "conditioning2": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "CONDITIONING",
      "show_help"
    ],
    "name": "CR Conditioning Input Switch",
    "display_name": "\ud83d\udd00 CR Conditioning Input Switch",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
    "output_node": false
  },
  "CR Clip Input Switch": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 2
          }
        ]
      },
      "optional": {
        "clip1": [
          "CLIP"
        ],
        "clip2": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CLIP",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "CLIP",
      "show_help"
    ],
    "name": "CR Clip Input Switch",
    "display_name": "\ud83d\udd00 CR Clip Input Switch",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
    "output_node": false
  },
  "CR Model Input Switch": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 2
          }
        ]
      },
      "optional": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ]
      }
    },
    "output": [
      "MODEL",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "show_help"
    ],
    "name": "CR Model Input Switch",
    "display_name": "\ud83d\udd00 CR Model Input Switch",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
    "output_node": false
  },
  "CR ControlNet Input Switch": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 2
          }
        ],
        "control_net1": [
          "CONTROL_NET"
        ],
        "control_net2": [
          "CONTROL_NET"
        ]
      },
      "optional": {
        "control_net1": [
          "CONTROL_NET"
        ],
        "control_net2": [
          "CONTROL_NET"
        ]
      }
    },
    "output": [
      "CONTROL_NET",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "CONTROL_NET",
      "show_help"
    ],
    "name": "CR ControlNet Input Switch",
    "display_name": "\ud83d\udd00 CR ControlNet Input Switch",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
    "output_node": false
  },
  "CR VAE Input Switch": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 2
          }
        ]
      },
      "optional": {
        "VAE1": [
          "VAE",
          {
            "forceInput": true
          }
        ],
        "VAE2": [
          "VAE",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "VAE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "VAE",
      "show_help"
    ],
    "name": "CR VAE Input Switch",
    "display_name": "\ud83d\udd00 CR VAE Input Switch",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
    "output_node": false
  },
  "CR Text Input Switch": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 2
          }
        ]
      },
      "optional": {
        "text1": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text2": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Text Input Switch",
    "display_name": "\ud83d\udd00 CR Text Input Switch",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
    "output_node": false
  },
  "CR Text Input Switch (4 way)": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4
          }
        ]
      },
      "optional": {
        "text1": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text2": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text3": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text4": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Text Input Switch (4 way)",
    "display_name": "\ud83d\udd00 CR Text Input Switch (4 way)",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
    "output_node": false
  },
  "CR Switch Model and CLIP": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 2
          }
        ],
        "model1": [
          "MODEL"
        ],
        "clip1": [
          "CLIP"
        ],
        "model2": [
          "MODEL"
        ],
        "clip2": [
          "CLIP"
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "show_help"
    ],
    "name": "CR Switch Model and CLIP",
    "display_name": "\ud83d\udd00 CR Switch Model and CLIP",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
    "output_node": false
  },
  "CR Batch Process Switch": {
    "input": {
      "required": {
        "Input": [
          [
            "image",
            "image batch"
          ]
        ]
      },
      "optional": {
        "image": [
          "IMAGE"
        ],
        "image_batch": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Batch Process Switch",
    "display_name": "\ud83d\udd02 CR Batch Process Switch",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd02 Process",
    "output_node": false
  },
  "CR Img2Img Process Switch": {
    "input": {
      "required": {
        "Input": [
          [
            "txt2img",
            "img2img"
          ]
        ]
      },
      "optional": {
        "txt2img": [
          "LATENT"
        ],
        "img2img": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "LATENT",
      "show_help"
    ],
    "name": "CR Img2Img Process Switch",
    "display_name": "\ud83d\udd02 CR Img2Img Process Switch",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd02 Process",
    "output_node": false
  },
  "CR Hires Fix Process Switch": {
    "input": {
      "required": {
        "Input": [
          [
            "latent_upscale",
            "image_upscale"
          ]
        ]
      },
      "optional": {
        "latent_upscale": [
          "LATENT"
        ],
        "image_upscale": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "LATENT",
      "STRING"
    ],
    "name": "CR Hires Fix Process Switch",
    "display_name": "\ud83d\udd02 CR Hires Fix Process Switch",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd02 Process",
    "output_node": false
  },
  "CR Index": {
    "input": {
      "required": {
        "index": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 10000
          }
        ],
        "print_to_console": [
          [
            "Yes",
            "No"
          ]
        ]
      }
    },
    "output": [
      "INT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "INT",
      "show_help"
    ],
    "name": "CR Index",
    "display_name": "\ud83d\udd22 CR Index",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index",
    "output_node": false
  },
  "CR Index Increment": {
    "input": {
      "required": {
        "index": [
          "INT",
          {
            "default": 1,
            "min": -10000,
            "max": 10000
          }
        ],
        "interval": [
          "INT",
          {
            "default": 1,
            "min": -10000,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "index",
      "interval",
      "show_help"
    ],
    "name": "CR Index Increment",
    "display_name": "\ud83d\udd22 CR Index Increment",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index",
    "output_node": false
  },
  "CR Index Multiply": {
    "input": {
      "required": {
        "index": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 10000
          }
        ],
        "factor": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "index",
      "factor",
      "show_help"
    ],
    "name": "CR Index Multiply",
    "display_name": "\ud83d\udd22 CR Index Multiply",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index",
    "output_node": false
  },
  "CR Index Reset": {
    "input": {
      "required": {
        "index": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 10000
          }
        ],
        "reset_to": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "index",
      "reset_to",
      "show_help"
    ],
    "name": "CR Index Reset",
    "display_name": "\ud83d\udd22 CR Index Reset",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index",
    "output_node": false
  },
  "CR Trigger": {
    "input": {
      "required": {
        "index": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "trigger_value": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "INT",
      "BOOLEAN",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "index",
      "trigger",
      "show_help"
    ],
    "name": "CR Trigger",
    "display_name": "\ud83d\udd22 CR Trigger",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index",
    "output_node": false
  },
  "CR String To Number": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false,
            "default": "text"
          }
        ],
        "round_integer": [
          [
            "round",
            "round down",
            "round up"
          ]
        ]
      }
    },
    "output": [
      "INT",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "INT",
      "FLOAT",
      "show_help"
    ],
    "name": "CR String To Number",
    "display_name": "\ud83d\udd27 CR String To Number",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion",
    "output_node": false
  },
  "CR String To Combo": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false,
            "default": "",
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "*",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "any",
      "show_help"
    ],
    "name": "CR String To Combo",
    "display_name": "\ud83d\udd27 CR String To Combo",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion",
    "output_node": false
  },
  "CR Float To String": {
    "input": {
      "required": {
        "float_": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1000000.0
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Float To String",
    "display_name": "\ud83d\udd27 CR Float To String",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion",
    "output_node": false
  },
  "CR Float To Integer": {
    "input": {
      "required": {
        "_float": [
          "FLOAT",
          {
            "default": 0.0
          }
        ]
      }
    },
    "output": [
      "INT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "INT",
      "show_help"
    ],
    "name": "CR Float To Integer",
    "display_name": "\ud83d\udd27 CR Float To Integer",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion",
    "output_node": false
  },
  "CR Integer To String": {
    "input": {
      "required": {
        "int_": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Integer To String",
    "display_name": "\ud83d\udd27 CR Integer To String",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion",
    "output_node": false
  },
  "CR Text List To String": {
    "input": {
      "required": {
        "text_list": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Text List To String",
    "display_name": "\ud83d\udd27 CR Text List To String",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion",
    "output_node": false
  },
  "CR Seed to Int": {
    "input": {
      "required": {
        "seed": [
          "SEED"
        ]
      }
    },
    "output": [
      "INT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "INT",
      "show_help"
    ],
    "name": "CR Seed to Int",
    "display_name": "\ud83d\udd27 CR Seed to Int",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion",
    "output_node": false
  },
  "CR Random Hex Color": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "hex_color1",
      "hex_color2",
      "hex_color3",
      "hex_color4",
      "show_help"
    ],
    "name": "CR Random Hex Color",
    "display_name": "\ud83c\udfb2 CR Random Hex Color",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random",
    "output_node": false
  },
  "CR Random RGB": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "rgb_1",
      "rgb_2",
      "rgb_3",
      "rgb_4",
      "show_help"
    ],
    "name": "CR Random RGB",
    "display_name": "\ud83c\udfb2 CR Random RGB",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random",
    "output_node": false
  },
  "CR Random Multiline Values": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "value_type": [
          [
            "binary",
            "decimal",
            "hexadecimal",
            "alphabetic",
            "alphanumeric"
          ]
        ],
        "rows": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 2048
          }
        ],
        "string_length": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 2048
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "multiline_text",
      "show_help"
    ],
    "name": "CR Random Multiline Values",
    "display_name": "\ud83c\udfb2 CR Random Multiline Values",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random",
    "output_node": false
  },
  "CR Random RGB Gradient": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "rows": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 2048
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "multiline_text",
      "show_help"
    ],
    "name": "CR Random RGB Gradient",
    "display_name": "\ud83c\udfb2 CR Random RGB Gradient",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random",
    "output_node": false
  },
  "CR Simple Schedule": {
    "input": {
      "required": {
        "schedule": [
          "STRING",
          {
            "multiline": true,
            "default": "frame_number, item_alias, [attr_value1, attr_value2]"
          }
        ],
        "schedule_type": [
          [
            "Value",
            "Text",
            "Prompt",
            "Prompt Weight",
            "Model",
            "LoRA",
            "ControlNet",
            "Style",
            "Upscale",
            "Camera",
            "Job"
          ]
        ],
        "schedule_alias": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "schedule_format": [
          [
            "CR",
            "Deforum"
          ]
        ]
      }
    },
    "output": [
      "SCHEDULE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "SCHEDULE",
      "show_help"
    ],
    "name": "CR Simple Schedule",
    "display_name": "\ud83d\udccb CR Simple Schedule",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udccb Schedule",
    "output_node": false
  },
  "CR Central Schedule": {
    "input": {
      "required": {
        "schedule_1": [
          "STRING",
          {
            "multiline": true,
            "default": "schedule"
          }
        ],
        "schedule_type1": [
          [
            "Value",
            "Text",
            "Prompt",
            "Prompt Weight",
            "Model",
            "LoRA",
            "ControlNet",
            "Style",
            "Upscale",
            "Camera",
            "Job"
          ]
        ],
        "schedule_alias1": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "schedule_2": [
          "STRING",
          {
            "multiline": true,
            "default": "schedule"
          }
        ],
        "schedule_type2": [
          [
            "Value",
            "Text",
            "Prompt",
            "Prompt Weight",
            "Model",
            "LoRA",
            "ControlNet",
            "Style",
            "Upscale",
            "Camera",
            "Job"
          ]
        ],
        "schedule_alias2": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "schedule_3": [
          "STRING",
          {
            "multiline": true,
            "default": "schedule"
          }
        ],
        "schedule_type3": [
          [
            "Value",
            "Text",
            "Prompt",
            "Prompt Weight",
            "Model",
            "LoRA",
            "ControlNet",
            "Style",
            "Upscale",
            "Camera",
            "Job"
          ]
        ],
        "schedule_alias3": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "schedule_format": [
          [
            "CR",
            "Deforum"
          ]
        ]
      },
      "optional": {
        "schedule": [
          "SCHEDULE"
        ]
      }
    },
    "output": [
      "SCHEDULE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "SCHEDULE",
      "show_text"
    ],
    "name": "CR Central Schedule",
    "display_name": "\ud83d\udccb CR Central Schedule",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udccb Schedule",
    "output_node": false
  },
  "CR Combine Schedules": {
    "input": {
      "required": {},
      "optional": {
        "schedule_1": [
          "SCHEDULE"
        ],
        "schedule_2": [
          "SCHEDULE"
        ],
        "schedule_3": [
          "SCHEDULE"
        ],
        "schedule_4": [
          "SCHEDULE"
        ]
      }
    },
    "output": [
      "SCHEDULE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "SCHEDULE",
      "show_text"
    ],
    "name": "CR Combine Schedules",
    "display_name": "\ud83d\udccb CR Combine Schedules",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udccb Schedule",
    "output_node": false
  },
  "CR Output Schedule To File": {
    "input": {
      "required": {
        "output_file_path": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "file_name": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "file_extension": [
          [
            "txt",
            "csv"
          ]
        ],
        "schedule": [
          "SCHEDULE"
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "CR Output Schedule To File",
    "display_name": "\ud83d\udccb CR Output Schedule To File",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udccb Schedule",
    "output_node": true
  },
  "CR Load Schedule From File": {
    "input": {
      "required": {
        "input_file_path": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "file_name": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "file_extension": [
          [
            "txt",
            "csv"
          ]
        ]
      }
    },
    "output": [
      "SCHEDULE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "SCHEDULE",
      "show_text"
    ],
    "name": "CR Load Schedule From File",
    "display_name": "\ud83d\udccb CR Load Schedule From File",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udccb Schedule",
    "output_node": false
  },
  "CR Schedule Input Switch": {
    "input": {
      "required": {
        "Input": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 2
          }
        ],
        "schedule1": [
          "SCHEDULE"
        ],
        "schedule2": [
          "SCHEDULE"
        ]
      }
    },
    "output": [
      "SCHEDULE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "SCHEDULE",
      "show_help"
    ],
    "name": "CR Schedule Input Switch",
    "display_name": "\ud83d\udccb CR Schedule Input Switch",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udccb Schedule",
    "output_node": true
  },
  "CR Simple Value Scheduler": {
    "input": {
      "required": {
        "schedule": [
          "STRING",
          {
            "multiline": true,
            "default": "frame_number, value"
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ]
      }
    },
    "output": [
      "INT",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "INT",
      "FLOAT",
      "show_help"
    ],
    "name": "CR Simple Value Scheduler",
    "display_name": "\ud83d\udcd1 CR Simple Value Scheduler",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
    "output_node": false
  },
  "CR Simple Text Scheduler": {
    "input": {
      "required": {
        "schedule": [
          "STRING",
          {
            "multiline": true,
            "default": "frame_number, text"
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Simple Text Scheduler",
    "display_name": "\ud83d\udcd1 CR Simple Text Scheduler",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
    "output_node": false
  },
  "CR Value Scheduler": {
    "input": {
      "required": {
        "mode": [
          [
            "Default Value",
            "Schedule"
          ]
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "schedule_alias": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "default_value": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.01
          }
        ],
        "schedule_format": [
          [
            "CR",
            "Deforum"
          ]
        ]
      },
      "optional": {
        "schedule": [
          "SCHEDULE"
        ]
      }
    },
    "output": [
      "INT",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "INT",
      "FLOAT",
      "show_help"
    ],
    "name": "CR Value Scheduler",
    "display_name": "\ud83d\udcd1 CR Value Scheduler",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
    "output_node": false
  },
  "CR Text Scheduler": {
    "input": {
      "required": {
        "mode": [
          [
            "Default Text",
            "Schedule"
          ]
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "schedule_alias": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "default_text": [
          "STRING",
          {
            "multiline": false,
            "default": "default text"
          }
        ],
        "schedule_format": [
          [
            "CR",
            "Deforum"
          ]
        ]
      },
      "optional": {
        "schedule": [
          "SCHEDULE"
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Text Scheduler",
    "display_name": "\ud83d\udcd1 CR Text Scheduler",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
    "output_node": false
  },
  "CR Load Scheduled Models": {
    "input": {
      "required": {
        "mode": [
          [
            "Load default Model",
            "Schedule"
          ]
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "schedule_alias": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "default_model": [
          [
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "schedule_format": [
          [
            "CR",
            "Deforum"
          ]
        ]
      },
      "optional": {
        "model_list": [
          "MODEL_LIST"
        ],
        "schedule": [
          "SCHEDULE"
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "show_help"
    ],
    "name": "CR Load Scheduled Models",
    "display_name": "\ud83d\udcd1 CR Load Scheduled Models",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
    "output_node": false
  },
  "CR Load Scheduled LoRAs": {
    "input": {
      "required": {
        "mode": [
          [
            "Off",
            "Load default LoRA",
            "Schedule"
          ]
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "schedule_alias": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "default_lora": [
          []
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "schedule_format": [
          [
            "CR",
            "Deforum"
          ]
        ]
      },
      "optional": {
        "lora_list": [
          "LORA_LIST"
        ],
        "schedule": [
          "SCHEDULE"
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "show_help"
    ],
    "name": "CR Load Scheduled LoRAs",
    "display_name": "\ud83d\udcd1 CR Load Scheduled LoRAs",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
    "output_node": false
  },
  "CR Prompt Scheduler": {
    "input": {
      "required": {
        "mode": [
          [
            "Default Prompt",
            "Keyframe List",
            "Schedule"
          ]
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "default_prompt": [
          "STRING",
          {
            "multiline": false,
            "default": "default prompt"
          }
        ],
        "schedule_format": [
          [
            "CR",
            "Deforum"
          ]
        ],
        "interpolate_prompt": [
          [
            "Yes",
            "No"
          ]
        ]
      },
      "optional": {
        "schedule": [
          "SCHEDULE"
        ],
        "schedule_alias": [
          "STRING",
          {
            "default prompt": "",
            "multiline": false
          }
        ],
        "keyframe_list": [
          "STRING",
          {
            "multiline": true,
            "default": "keyframe list"
          }
        ],
        "prepend_text": [
          "STRING",
          {
            "multiline": true,
            "default": "prepend text"
          }
        ],
        "append_text": [
          "STRING",
          {
            "multiline": true,
            "default": "append text"
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "current_prompt",
      "next_prompt",
      "weight",
      "show_help"
    ],
    "name": "CR Prompt Scheduler",
    "display_name": "\ud83d\udcd1 CR Prompt Scheduler",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
    "output_node": false
  },
  "CR Simple Prompt Scheduler": {
    "input": {
      "required": {
        "keyframe_list": [
          "STRING",
          {
            "multiline": true,
            "default": "frame_number, text"
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "keyframe_format": [
          [
            "CR",
            "Deforum"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "current_prompt",
      "next_prompt",
      "weight",
      "show_help"
    ],
    "name": "CR Simple Prompt Scheduler",
    "display_name": "\ud83d\udcd1 CR Simple Prompt Scheduler",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
    "output_node": false
  },
  "CR Prompt List": {
    "input": {
      "required": {
        "keyframe_interval": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 999,
            "step": 1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 100
          }
        ],
        "prompt_1": [
          "STRING",
          {
            "multiline": true,
            "default": "prompt"
          }
        ],
        "transition_type1": [
          [
            "Default"
          ]
        ],
        "transition_speed1": [
          [
            "Default"
          ]
        ],
        "transition_profile1": [
          [
            "Default"
          ]
        ],
        "prompt_2": [
          "STRING",
          {
            "multiline": true,
            "default": "prompt"
          }
        ],
        "transition_type2": [
          [
            "Default"
          ]
        ],
        "transition_speed2": [
          [
            "Default"
          ]
        ],
        "transition_profile2": [
          [
            "Default"
          ]
        ],
        "prompt_3": [
          "STRING",
          {
            "multiline": true,
            "default": "prompt"
          }
        ],
        "transition_type3": [
          [
            "Default"
          ]
        ],
        "transition_speed3": [
          [
            "Default"
          ]
        ],
        "transition_profile3": [
          [
            "Default"
          ]
        ],
        "prompt_4": [
          "STRING",
          {
            "multiline": true,
            "default": "prompt"
          }
        ],
        "transition_type4": [
          [
            "Default"
          ]
        ],
        "transition_speed4": [
          [
            "Default"
          ]
        ],
        "transition_profile4": [
          [
            "Default"
          ]
        ],
        "prompt_5": [
          "STRING",
          {
            "multiline": true,
            "default": "prompt"
          }
        ],
        "transition_type5": [
          [
            "Default"
          ]
        ],
        "transition_speed5": [
          [
            "Default"
          ]
        ],
        "transition_profile5": [
          [
            "Default"
          ]
        ]
      },
      "optional": {
        "prompt_list": [
          "PROMPT_LIST"
        ]
      }
    },
    "output": [
      "PROMPT_LIST",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "PROMPT_LIST",
      "show_help"
    ],
    "name": "CR Prompt List",
    "display_name": "\ud83d\udcdd CR Prompt List",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udcdd Prompt",
    "output_node": false
  },
  "CR Prompt List Keyframes": {
    "input": {
      "required": {
        "prompt_list": [
          "PROMPT_LIST"
        ],
        "keyframe_format": [
          [
            "Deforum"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "keyframe_list",
      "show_help"
    ],
    "name": "CR Prompt List Keyframes",
    "display_name": "\ud83d\udcdd CR Prompt List Keyframes",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udcdd Prompt",
    "output_node": false
  },
  "CR Simple Prompt List": {
    "input": {
      "required": {
        "prompt_1": [
          "STRING",
          {
            "multiline": true,
            "default": "prompt"
          }
        ],
        "prompt_2": [
          "STRING",
          {
            "multiline": true,
            "default": "prompt"
          }
        ],
        "prompt_3": [
          "STRING",
          {
            "multiline": true,
            "default": "prompt"
          }
        ],
        "prompt_4": [
          "STRING",
          {
            "multiline": true,
            "default": "prompt"
          }
        ],
        "prompt_5": [
          "STRING",
          {
            "multiline": true,
            "default": "prompt"
          }
        ]
      },
      "optional": {
        "simple_prompt_list": [
          "SIMPLE_PROMPT_LIST"
        ]
      }
    },
    "output": [
      "SIMPLE_PROMPT_LIST",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "SIMPLE_PROMPT_LIST",
      "show_help"
    ],
    "name": "CR Simple Prompt List",
    "display_name": "\ud83d\udcdd CR Simple Prompt List",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udcdd Prompt",
    "output_node": false
  },
  "CR Simple Prompt List Keyframes": {
    "input": {
      "required": {
        "simple_prompt_list": [
          "SIMPLE_PROMPT_LIST"
        ],
        "keyframe_interval": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 999,
            "step": 1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1000
          }
        ],
        "transition_type": [
          [
            "Default"
          ]
        ],
        "transition_speed": [
          [
            "Default"
          ]
        ],
        "transition_profile": [
          [
            "Default"
          ]
        ],
        "keyframe_format": [
          [
            "Deforum"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "keyframe_list",
      "show_help"
    ],
    "name": "CR Simple Prompt List Keyframes",
    "display_name": "\ud83d\udcdd CR Simple Prompt List Keyframes",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udcdd Prompt",
    "output_node": false
  },
  "CR Keyframe List": {
    "input": {
      "required": {
        "keyframe_list": [
          "STRING",
          {
            "multiline": true,
            "default": "keyframes"
          }
        ],
        "keyframe_format": [
          [
            "Deforum",
            "CR"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "keyframe_list",
      "show_help"
    ],
    "name": "CR Keyframe List",
    "display_name": "\ud83d\udcdd CR Keyframe List",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udcdd Prompt",
    "output_node": false
  },
  "CR Encode Scheduled Prompts": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "current_prompt": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "next_prompt": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "CONDITIONING",
      "show_help"
    ],
    "name": "CR Encode Scheduled Prompts",
    "display_name": "\ud83d\udcdd CR Encode Scheduled Prompts",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udcdd Prompt",
    "output_node": false
  },
  "CR Gradient Float": {
    "input": {
      "required": {
        "start_value": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.01
          }
        ],
        "end_value": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.01
          }
        ],
        "start_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "frame_duration": [
          "INT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "gradient_profile": [
          [
            "Lerp"
          ]
        ]
      }
    },
    "output": [
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "FLOAT",
      "show_help"
    ],
    "name": "CR Gradient Float",
    "display_name": "\ud83d\udd22 CR Gradient Float",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate",
    "output_node": false
  },
  "CR Gradient Integer": {
    "input": {
      "required": {
        "start_value": [
          "INT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "end_value": [
          "INT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "start_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "frame_duration": [
          "INT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "gradient_profile": [
          [
            "Lerp"
          ]
        ]
      }
    },
    "output": [
      "INT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "INT",
      "show_help"
    ],
    "name": "CR Gradient Integer",
    "display_name": "\ud83d\udd22 CR Gradient Integer",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate",
    "output_node": false
  },
  "CR Increment Float": {
    "input": {
      "required": {
        "start_value": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 0.001
          }
        ],
        "step": [
          "FLOAT",
          {
            "default": 0.1,
            "min": -9999.0,
            "max": 9999.0,
            "step": 0.001
          }
        ],
        "start_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "frame_duration": [
          "INT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "FLOAT",
      "show_help"
    ],
    "name": "CR Increment Float",
    "display_name": "\ud83d\udd22 CR Increment Float",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate",
    "output_node": true
  },
  "CR Increment Integer": {
    "input": {
      "required": {
        "start_value": [
          "INT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "step": [
          "INT",
          {
            "default": 1.0,
            "min": -9999.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "start_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "frame_duration": [
          "INT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ]
      }
    },
    "output": [
      "INT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "INT",
      "show_help"
    ],
    "name": "CR Increment Integer",
    "display_name": "\ud83d\udd22 CR Increment Integer",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate",
    "output_node": true
  },
  "CR Interpolate Latents": {
    "input": {
      "required": {
        "latent1": [
          "LATENT"
        ],
        "latent2": [
          "LATENT"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "method": [
          [
            "lerp"
          ]
        ]
      }
    },
    "output": [
      "LATENT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "LATENT",
      "show_help"
    ],
    "name": "CR Interpolate Latents",
    "display_name": "\ud83d\udd22 CR Interpolate Latents",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate",
    "output_node": false
  },
  "CR Model List": {
    "input": {
      "required": {
        "ckpt_name1": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "alias1": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "ckpt_name2": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "alias2": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "ckpt_name3": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "alias3": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "ckpt_name4": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "alias4": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "ckpt_name5": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "alias5": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ]
      },
      "optional": {
        "model_list": [
          "MODEL_LIST"
        ]
      }
    },
    "output": [
      "MODEL_LIST",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MODEL_LIST",
      "show_text"
    ],
    "name": "CR Model List",
    "display_name": "\ud83d\udcc3 CR Model List",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udcc3 List",
    "output_node": false
  },
  "CR LoRA List": {
    "input": {
      "required": {
        "lora_name1": [
          [
            "None"
          ]
        ],
        "alias1": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "model_strength_1": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_strength_1": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name2": [
          [
            "None"
          ]
        ],
        "alias2": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "model_strength_2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_strength_2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name3": [
          [
            "None"
          ]
        ],
        "alias3": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "model_strength_3": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_strength_3": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "lora_list": [
          "lora_LIST"
        ]
      }
    },
    "output": [
      "LORA_LIST",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "LORA_LIST",
      "show_text"
    ],
    "name": "CR LoRA List",
    "display_name": "\ud83d\udcc3 CR LoRA List",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udcc3 List",
    "output_node": false
  },
  "CR Text List Simple": {
    "input": {
      "required": {},
      "optional": {
        "text_1": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "text_2": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "text_3": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "text_4": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "text_5": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "text_list_simple": [
          "TEXT_LIST_SIMPLE"
        ]
      }
    },
    "output": [
      "TEXT_LIST_SIMPLE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "TEXT_LIST_SIMPLE",
      "show_help"
    ],
    "name": "CR Text List Simple",
    "display_name": "\ud83d\udcc3 CR Text List Simple",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udcc3 List",
    "output_node": false
  },
  "CR Image List": {
    "input": {
      "required": {},
      "optional": {
        "image_1": [
          "IMAGE"
        ],
        "alias1": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "image_2": [
          "IMAGE"
        ],
        "alias2": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "image_3": [
          "IMAGE"
        ],
        "alias3": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "image_4": [
          "IMAGE"
        ],
        "alias4": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "image_5": [
          "IMAGE"
        ],
        "alias5": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "image_list": [
          "image_LIST"
        ]
      }
    },
    "output": [
      "IMAGE_LIST",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE_LIST",
      "show_help"
    ],
    "name": "CR Image List",
    "display_name": "\ud83d\udcc3 CR Image List",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udcc3 List",
    "output_node": false
  },
  "CR Image List Simple": {
    "input": {
      "required": {},
      "optional": {
        "image_1": [
          "IMAGE"
        ],
        "image_2": [
          "IMAGE"
        ],
        "image_3": [
          "IMAGE"
        ],
        "image_4": [
          "IMAGE"
        ],
        "image_5": [
          "IMAGE"
        ],
        "image_list_simple": [
          "IMAGE_LIST_SIMPLE"
        ]
      }
    },
    "output": [
      "IMAGE_LIST_SIMPLE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE_LIST_SIMPLE",
      "show_help"
    ],
    "name": "CR Image List Simple",
    "display_name": "\ud83d\udcc3 CR Image List Simple",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udcc3 List",
    "output_node": false
  },
  "CR Cycle Models": {
    "input": {
      "required": {
        "mode": [
          [
            "Off",
            "Sequential"
          ]
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "model_list": [
          "MODEL_LIST"
        ],
        "frame_interval": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 999,
            "step": 1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1000
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "show_help"
    ],
    "name": "CR Cycle Models",
    "display_name": "\u267b\ufe0f CR Cycle Models",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\u267b\ufe0f Cyclers",
    "output_node": false
  },
  "CR Cycle LoRAs": {
    "input": {
      "required": {
        "mode": [
          [
            "Off",
            "Sequential"
          ]
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_list": [
          "LORA_LIST"
        ],
        "frame_interval": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 999,
            "step": 1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1000
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "show_help"
    ],
    "name": "CR Cycle LoRAs",
    "display_name": "\u267b\ufe0f CR Cycle LoRAs",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\u267b\ufe0f Cyclers",
    "output_node": false
  },
  "CR Cycle Text": {
    "input": {
      "required": {
        "mode": [
          [
            "Sequential"
          ]
        ],
        "text_list": [
          "TEXT_LIST"
        ],
        "frame_interval": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 999,
            "step": 1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1000
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Cycle Text",
    "display_name": "\u267b\ufe0f CR Cycle Text",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\u267b\ufe0f Cyclers",
    "output_node": false
  },
  "CR Cycle Text Simple": {
    "input": {
      "required": {
        "mode": [
          [
            "Sequential"
          ]
        ],
        "frame_interval": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 999,
            "step": 1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1000
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ]
      },
      "optional": {
        "text_1": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "text_2": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "text_3": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "text_4": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "text_5": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ],
        "text_list_simple": [
          "TEXT_LIST_SIMPLE"
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "STRING",
      "show_help"
    ],
    "name": "CR Cycle Text Simple",
    "display_name": "\u267b\ufe0f CR Cycle Text Simple",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\u267b\ufe0f Cyclers",
    "output_node": false
  },
  "CR Cycle Images": {
    "input": {
      "required": {
        "mode": [
          [
            "Sequential"
          ]
        ],
        "image_list": [
          "IMAGE_LIST"
        ],
        "frame_interval": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 999,
            "step": 1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1000
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Cycle Images",
    "display_name": "\u267b\ufe0f CR Cycle Images",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\u267b\ufe0f Cyclers",
    "output_node": false
  },
  "CR Cycle Images Simple": {
    "input": {
      "required": {
        "mode": [
          [
            "Sequential"
          ]
        ],
        "frame_interval": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 999,
            "step": 1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 1000
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 9999.0,
            "step": 1.0
          }
        ]
      },
      "optional": {
        "image_1": [
          "IMAGE"
        ],
        "image_2": [
          "IMAGE"
        ],
        "image_3": [
          "IMAGE"
        ],
        "image_4": [
          "IMAGE"
        ],
        "image_5": [
          "IMAGE"
        ],
        "image_list_simple": [
          "IMAGE_LIST_SIMPLE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Cycle Images Simple",
    "display_name": "\u267b\ufe0f CR Cycle Images Simple",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\u267b\ufe0f Cyclers",
    "output_node": false
  },
  "CR Debatch Frames": {
    "input": {
      "required": {
        "frames": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "debatched_frames"
    ],
    "name": "CR Debatch Frames",
    "display_name": "\ud83d\udee0\ufe0f CR Debatch Frames",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udee0\ufe0f Utils",
    "output_node": false
  },
  "CR Current Frame": {
    "input": {
      "required": {
        "index": [
          "INT",
          {
            "default": 1,
            "min": -10000,
            "max": 10000
          }
        ],
        "print_to_console": [
          [
            "Yes",
            "No"
          ]
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "index"
    ],
    "name": "CR Current Frame",
    "display_name": "\ud83d\udee0\ufe0f CR Current Frame",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\ud83d\udee0\ufe0f Utils",
    "output_node": false
  },
  "CR Load Animation Frames": {
    "input": {
      "required": {
        "image_sequence_folder": [
          []
        ],
        "start_index": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10000
          }
        ],
        "max_frames": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "show_help"
    ],
    "name": "CR Load Animation Frames",
    "display_name": "\u2328\ufe0f CR Load Animation Frames",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\u2328\ufe0f IO",
    "output_node": false
  },
  "CR Load Flow Frames": {
    "input": {
      "required": {
        "input_folder": [
          []
        ],
        "sort_by": [
          [
            "Index",
            "Alphabetic"
          ]
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "skip_start_frames": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ]
      },
      "optional": {
        "input_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "file_pattern": [
          "STRING",
          {
            "default": "*.png",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "INT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "current_image",
      "previous_image",
      "current_frame",
      "show_help"
    ],
    "name": "CR Load Flow Frames",
    "display_name": "\u2328\ufe0f CR Load Flow Frames",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\u2328\ufe0f IO",
    "output_node": false
  },
  "CR Output Flow Frames": {
    "input": {
      "required": {
        "output_folder": [
          []
        ],
        "current_image": [
          "IMAGE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "CR"
          }
        ],
        "current_frame": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9999999
          }
        ]
      },
      "optional": {
        "interpolated_img": [
          "IMAGE"
        ],
        "output_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "CR Output Flow Frames",
    "display_name": "\u2328\ufe0f CR Output Flow Frames",
    "description": "",
    "category": "\ud83e\udde9 Comfyroll/\ud83c\udfa5 Animation/\u2328\ufe0f IO",
    "output_node": true
  },
  "KSampler (Efficient)": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "preview_method": [
          [
            "auto",
            "latent2rgb",
            "taesd",
            "vae_decoded_only",
            "none"
          ]
        ],
        "vae_decode": [
          [
            "true",
            "true (tiled)",
            "false"
          ]
        ]
      },
      "optional": {
        "optional_vae": [
          "VAE"
        ],
        "script": [
          "SCRIPT"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CONDITIONING+",
      "CONDITIONING-",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "name": "KSampler (Efficient)",
    "display_name": "KSampler (Efficient)",
    "description": "",
    "category": "Efficiency Nodes/Sampling",
    "output_node": true
  },
  "KSampler Adv. (Efficient)": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "add_noise": [
          [
            "enable",
            "disable"
          ]
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "return_with_leftover_noise": [
          [
            "disable",
            "enable"
          ]
        ],
        "preview_method": [
          [
            "auto",
            "latent2rgb",
            "taesd",
            "none"
          ]
        ],
        "vae_decode": [
          [
            "true",
            "true (tiled)",
            "false",
            "output only",
            "output only (tiled)"
          ]
        ]
      },
      "optional": {
        "optional_vae": [
          "VAE"
        ],
        "script": [
          "SCRIPT"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CONDITIONING+",
      "CONDITIONING-",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "name": "KSampler Adv. (Efficient)",
    "display_name": "KSampler Adv. (Efficient)",
    "description": "",
    "category": "Efficiency Nodes/Sampling",
    "output_node": true
  },
  "KSampler SDXL (Eff.)": {
    "input": {
      "required": {
        "sdxl_tuple": [
          "SDXL_TUPLE"
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 7.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "refine_at_step": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 10000
          }
        ],
        "preview_method": [
          [
            "auto",
            "latent2rgb",
            "taesd",
            "none"
          ]
        ],
        "vae_decode": [
          [
            "true",
            "true (tiled)",
            "false",
            "output only",
            "output only (tiled)"
          ]
        ]
      },
      "optional": {
        "optional_vae": [
          "VAE"
        ],
        "script": [
          "SCRIPT"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "SDXL_TUPLE",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "SDXL_TUPLE",
      "LATENT",
      "VAE",
      "IMAGE"
    ],
    "name": "KSampler SDXL (Eff.)",
    "display_name": "KSampler SDXL (Eff.)",
    "description": "",
    "category": "Efficiency Nodes/Sampling",
    "output_node": true
  },
  "Efficient Loader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "vae_name": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "clip_skip": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "lora_name": [
          [
            "None"
          ]
        ],
        "lora_model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "positive": [
          "STRING",
          {
            "default": "CLIP_POSITIVE",
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "default": "CLIP_NEGATIVE",
            "multiline": true
          }
        ],
        "token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ]
        ],
        "empty_latent_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 64
          }
        ],
        "empty_latent_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 64
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 262144
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ],
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "CLIP",
      "DEPENDENCIES"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CONDITIONING+",
      "CONDITIONING-",
      "LATENT",
      "VAE",
      "CLIP",
      "DEPENDENCIES"
    ],
    "name": "Efficient Loader",
    "display_name": "Efficient Loader",
    "description": "",
    "category": "Efficiency Nodes/Loaders",
    "output_node": false
  },
  "Eff. Loader SDXL": {
    "input": {
      "required": {
        "base_ckpt_name": [
          [
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "base_clip_skip": [
          "INT",
          {
            "default": -2,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "refiner_ckpt_name": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "refiner_clip_skip": [
          "INT",
          {
            "default": -2,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "positive_ascore": [
          "FLOAT",
          {
            "default": 6.0,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01
          }
        ],
        "negative_ascore": [
          "FLOAT",
          {
            "default": 2.0,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01
          }
        ],
        "vae_name": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "positive": [
          "STRING",
          {
            "default": "CLIP_POSITIVE",
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "default": "CLIP_NEGATIVE",
            "multiline": true
          }
        ],
        "token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ]
        ],
        "empty_latent_width": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192,
            "step": 64
          }
        ],
        "empty_latent_height": [
          "INT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192,
            "step": 64
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ],
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "SDXL_TUPLE",
      "LATENT",
      "VAE",
      "DEPENDENCIES"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "SDXL_TUPLE",
      "LATENT",
      "VAE",
      "DEPENDENCIES"
    ],
    "name": "Eff. Loader SDXL",
    "display_name": "Eff. Loader SDXL",
    "description": "",
    "category": "Efficiency Nodes/Loaders",
    "output_node": false
  },
  "LoRA Stacker": {
    "input": {
      "required": {
        "input_mode": [
          [
            "simple",
            "advanced"
          ]
        ],
        "lora_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ],
        "lora_name_1": [
          [
            "None"
          ]
        ],
        "lora_wt_1": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_1": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_1": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_2": [
          [
            "None"
          ]
        ],
        "lora_wt_2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_3": [
          [
            "None"
          ]
        ],
        "lora_wt_3": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_3": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_3": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_4": [
          [
            "None"
          ]
        ],
        "lora_wt_4": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_4": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_4": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_5": [
          [
            "None"
          ]
        ],
        "lora_wt_5": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_5": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_5": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_6": [
          [
            "None"
          ]
        ],
        "lora_wt_6": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_6": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_6": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_7": [
          [
            "None"
          ]
        ],
        "lora_wt_7": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_7": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_7": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_8": [
          [
            "None"
          ]
        ],
        "lora_wt_8": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_8": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_8": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_9": [
          [
            "None"
          ]
        ],
        "lora_wt_9": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_9": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_9": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_10": [
          [
            "None"
          ]
        ],
        "lora_wt_10": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_10": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_10": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_11": [
          [
            "None"
          ]
        ],
        "lora_wt_11": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_11": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_11": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_12": [
          [
            "None"
          ]
        ],
        "lora_wt_12": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_12": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_12": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_13": [
          [
            "None"
          ]
        ],
        "lora_wt_13": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_13": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_13": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_14": [
          [
            "None"
          ]
        ],
        "lora_wt_14": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_14": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_14": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_15": [
          [
            "None"
          ]
        ],
        "lora_wt_15": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_15": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_15": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_16": [
          [
            "None"
          ]
        ],
        "lora_wt_16": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_16": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_16": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_17": [
          [
            "None"
          ]
        ],
        "lora_wt_17": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_17": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_17": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_18": [
          [
            "None"
          ]
        ],
        "lora_wt_18": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_18": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_18": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_19": [
          [
            "None"
          ]
        ],
        "lora_wt_19": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_19": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_19": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_20": [
          [
            "None"
          ]
        ],
        "lora_wt_20": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_20": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_20": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_21": [
          [
            "None"
          ]
        ],
        "lora_wt_21": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_21": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_21": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_22": [
          [
            "None"
          ]
        ],
        "lora_wt_22": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_22": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_22": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_23": [
          [
            "None"
          ]
        ],
        "lora_wt_23": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_23": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_23": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_24": [
          [
            "None"
          ]
        ],
        "lora_wt_24": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_24": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_24": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_25": [
          [
            "None"
          ]
        ],
        "lora_wt_25": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_25": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_25": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_26": [
          [
            "None"
          ]
        ],
        "lora_wt_26": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_26": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_26": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_27": [
          [
            "None"
          ]
        ],
        "lora_wt_27": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_27": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_27": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_28": [
          [
            "None"
          ]
        ],
        "lora_wt_28": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_28": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_28": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_29": [
          [
            "None"
          ]
        ],
        "lora_wt_29": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_29": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_29": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_30": [
          [
            "None"
          ]
        ],
        "lora_wt_30": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_30": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_30": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_31": [
          [
            "None"
          ]
        ],
        "lora_wt_31": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_31": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_31": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_32": [
          [
            "None"
          ]
        ],
        "lora_wt_32": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_32": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_32": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_33": [
          [
            "None"
          ]
        ],
        "lora_wt_33": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_33": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_33": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_34": [
          [
            "None"
          ]
        ],
        "lora_wt_34": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_34": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_34": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_35": [
          [
            "None"
          ]
        ],
        "lora_wt_35": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_35": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_35": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_36": [
          [
            "None"
          ]
        ],
        "lora_wt_36": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_36": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_36": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_37": [
          [
            "None"
          ]
        ],
        "lora_wt_37": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_37": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_37": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_38": [
          [
            "None"
          ]
        ],
        "lora_wt_38": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_38": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_38": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_39": [
          [
            "None"
          ]
        ],
        "lora_wt_39": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_39": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_39": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_40": [
          [
            "None"
          ]
        ],
        "lora_wt_40": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_40": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_40": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_41": [
          [
            "None"
          ]
        ],
        "lora_wt_41": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_41": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_41": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_42": [
          [
            "None"
          ]
        ],
        "lora_wt_42": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_42": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_42": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_43": [
          [
            "None"
          ]
        ],
        "lora_wt_43": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_43": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_43": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_44": [
          [
            "None"
          ]
        ],
        "lora_wt_44": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_44": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_44": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_45": [
          [
            "None"
          ]
        ],
        "lora_wt_45": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_45": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_45": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_46": [
          [
            "None"
          ]
        ],
        "lora_wt_46": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_46": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_46": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_47": [
          [
            "None"
          ]
        ],
        "lora_wt_47": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_47": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_47": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_48": [
          [
            "None"
          ]
        ],
        "lora_wt_48": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_48": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_48": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_49": [
          [
            "None"
          ]
        ],
        "lora_wt_49": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "model_str_49": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_49": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "LORA_STACK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LORA_STACK"
    ],
    "name": "LoRA Stacker",
    "display_name": "LoRA Stacker",
    "description": "",
    "category": "Efficiency Nodes/Stackers",
    "output_node": false
  },
  "Control Net Stacker": {
    "input": {
      "required": {
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      }
    },
    "output": [
      "CONTROL_NET_STACK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CNET_STACK"
    ],
    "name": "Control Net Stacker",
    "display_name": "Control Net Stacker",
    "description": "",
    "category": "Efficiency Nodes/Stackers",
    "output_node": false
  },
  "Apply ControlNet Stack": {
    "input": {
      "required": {
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ]
      },
      "optional": {
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "CONDITIONING+",
      "CONDITIONING-"
    ],
    "name": "Apply ControlNet Stack",
    "display_name": "Apply ControlNet Stack",
    "description": "",
    "category": "Efficiency Nodes/Stackers",
    "output_node": false
  },
  "Unpack SDXL Tuple": {
    "input": {
      "required": {
        "sdxl_tuple": [
          "SDXL_TUPLE"
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "CONDITIONING",
      "CONDITIONING",
      "MODEL",
      "CLIP",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "BASE_MODEL",
      "BASE_CLIP",
      "BASE_CONDITIONING+",
      "BASE_CONDITIONING-",
      "REFINER_MODEL",
      "REFINER_CLIP",
      "REFINER_CONDITIONING+",
      "REFINER_CONDITIONING-"
    ],
    "name": "Unpack SDXL Tuple",
    "display_name": "Unpack SDXL Tuple",
    "description": "",
    "category": "Efficiency Nodes/Misc",
    "output_node": false
  },
  "Pack SDXL Tuple": {
    "input": {
      "required": {
        "base_model": [
          "MODEL"
        ],
        "base_clip": [
          "CLIP"
        ],
        "base_positive": [
          "CONDITIONING"
        ],
        "base_negative": [
          "CONDITIONING"
        ],
        "refiner_model": [
          "MODEL"
        ],
        "refiner_clip": [
          "CLIP"
        ],
        "refiner_positive": [
          "CONDITIONING"
        ],
        "refiner_negative": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "SDXL_TUPLE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SDXL_TUPLE"
    ],
    "name": "Pack SDXL Tuple",
    "display_name": "Pack SDXL Tuple",
    "description": "",
    "category": "Efficiency Nodes/Misc",
    "output_node": false
  },
  "XY Plot": {
    "input": {
      "required": {
        "grid_spacing": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 500,
            "step": 5
          }
        ],
        "XY_flip": [
          [
            "False",
            "True"
          ]
        ],
        "Y_label_orientation": [
          [
            "Horizontal",
            "Vertical"
          ]
        ],
        "cache_models": [
          [
            "True",
            "False"
          ]
        ],
        "ksampler_output_image": [
          [
            "Images",
            "Plot"
          ]
        ]
      },
      "optional": {
        "dependencies": [
          "DEPENDENCIES"
        ],
        "X": [
          "XY"
        ],
        "Y": [
          "XY"
        ]
      },
      "hidden": {
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "SCRIPT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SCRIPT"
    ],
    "name": "XY Plot",
    "display_name": "XY Plot",
    "description": "",
    "category": "Efficiency Nodes/Scripts",
    "output_node": false
  },
  "XY Input: Seeds++ Batch": {
    "input": {
      "required": {
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Seeds++ Batch",
    "display_name": "XY Input: Seeds++ Batch",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Add/Return Noise": {
    "input": {
      "required": {
        "XY_type": [
          [
            "add_noise",
            "return_with_leftover_noise"
          ]
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Add/Return Noise",
    "display_name": "XY Input: Add/Return Noise",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Steps": {
    "input": {
      "required": {
        "target_parameter": [
          [
            "steps",
            "start_at_step",
            "end_at_step",
            "refine_at_step"
          ]
        ],
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_step": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 10000
          }
        ],
        "last_step": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "first_start_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "last_start_step": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ],
        "first_end_step": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ],
        "last_end_step": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 10000
          }
        ],
        "first_refine_step": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ],
        "last_refine_step": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Steps",
    "display_name": "XY Input: Steps",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: CFG Scale": {
    "input": {
      "required": {
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_cfg": [
          "FLOAT",
          {
            "default": 7.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "last_cfg": [
          "FLOAT",
          {
            "default": 9.0,
            "min": 0.0,
            "max": 100.0
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: CFG Scale",
    "display_name": "XY Input: CFG Scale",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Sampler/Scheduler": {
    "input": {
      "required": {
        "target_parameter": [
          [
            "sampler",
            "scheduler",
            "sampler & scheduler"
          ]
        ],
        "input_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ],
        "sampler_1": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_1": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_2": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_2": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_3": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_3": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_4": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_4": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_5": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_5": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_6": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_6": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_7": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_7": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_8": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_8": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_9": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_9": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_10": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_10": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_11": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_11": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_12": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_12": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_13": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_13": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_14": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_14": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_15": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_15": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_16": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_16": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_17": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_17": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_18": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_18": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_19": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_19": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_20": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_20": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_21": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_21": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_22": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_22": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_23": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_23": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_24": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_24": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_25": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_25": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_26": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_26": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_27": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_27": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_28": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_28": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_29": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_29": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_30": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_30": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_31": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_31": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_32": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_32": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_33": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_33": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_34": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_34": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_35": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_35": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_36": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_36": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_37": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_37": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_38": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_38": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_39": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_39": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_40": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_40": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_41": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_41": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_42": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_42": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_43": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_43": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_44": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_44": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_45": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_45": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_46": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_46": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_47": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_47": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_48": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_48": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_49": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_49": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sampler_50": [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler_50": [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Sampler/Scheduler",
    "display_name": "XY Input: Sampler/Scheduler",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Denoise": {
    "input": {
      "required": {
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_denoise": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "last_denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Denoise",
    "display_name": "XY Input: Denoise",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: VAE": {
    "input": {
      "required": {
        "input_mode": [
          [
            "VAE Names",
            "VAE Batch"
          ]
        ],
        "batch_path": [
          "STRING",
          {
            "default": "/example_folder",
            "multiline": false
          }
        ],
        "subdirectories": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "batch_sort": [
          [
            "ascending",
            "descending"
          ]
        ],
        "batch_max": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 50,
            "step": 1
          }
        ],
        "vae_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ],
        "vae_name_1": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_2": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_3": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_4": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_5": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_6": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_7": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_8": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_9": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_10": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_11": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_12": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_13": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_14": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_15": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_16": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_17": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_18": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_19": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_20": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_21": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_22": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_23": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_24": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_25": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_26": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_27": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_28": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_29": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_30": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_31": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_32": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_33": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_34": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_35": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_36": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_37": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_38": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_39": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_40": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_41": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_42": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_43": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_44": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_45": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_46": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_47": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_48": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_49": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "vae_name_50": [
          [
            "None",
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: VAE",
    "display_name": "XY Input: VAE",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Prompt S/R": {
    "input": {
      "required": {
        "target_prompt": [
          [
            "positive",
            "negative"
          ]
        ],
        "search_txt": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 49
          }
        ],
        "replace_1": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_2": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_3": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_4": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_5": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_6": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_7": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_8": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_9": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_10": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_11": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_12": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_13": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_14": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_15": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_16": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_17": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_18": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_19": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_20": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_21": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_22": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_23": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_24": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_25": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_26": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_27": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_28": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_29": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_30": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_31": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_32": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_33": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_34": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_35": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_36": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_37": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_38": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_39": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_40": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_41": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_42": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_43": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_44": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_45": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_46": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_47": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_48": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace_49": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Prompt S/R",
    "display_name": "XY Input: Prompt S/R",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Aesthetic Score": {
    "input": {
      "required": {
        "target_ascore": [
          [
            "positive",
            "negative"
          ]
        ],
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_ascore": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01
          }
        ],
        "last_ascore": [
          "FLOAT",
          {
            "default": 10.0,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Aesthetic Score",
    "display_name": "XY Input: Aesthetic Score",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Refiner On/Off": {
    "input": {
      "required": {
        "refine_at_percent": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Refiner On/Off",
    "display_name": "XY Input: Refiner On/Off",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Checkpoint": {
    "input": {
      "required": {
        "target_ckpt": [
          [
            "Base",
            "Refiner"
          ]
        ],
        "input_mode": [
          [
            "Ckpt Names",
            "Ckpt Names+ClipSkip",
            "Ckpt Names+ClipSkip+VAE",
            "Checkpoint Batch"
          ]
        ],
        "batch_path": [
          "STRING",
          {
            "default": "/example_folder",
            "multiline": false
          }
        ],
        "subdirectories": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "batch_sort": [
          [
            "ascending",
            "descending"
          ]
        ],
        "batch_max": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 50,
            "step": 1
          }
        ],
        "ckpt_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ],
        "ckpt_name_1": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_1": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_1": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_2": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_2": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_2": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_3": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_3": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_3": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_4": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_4": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_4": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_5": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_5": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_5": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_6": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_6": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_6": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_7": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_7": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_7": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_8": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_8": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_8": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_9": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_9": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_9": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_10": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_10": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_10": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_11": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_11": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_11": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_12": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_12": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_12": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_13": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_13": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_13": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_14": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_14": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_14": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_15": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_15": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_15": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_16": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_16": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_16": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_17": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_17": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_17": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_18": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_18": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_18": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_19": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_19": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_19": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_20": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_20": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_20": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_21": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_21": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_21": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_22": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_22": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_22": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_23": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_23": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_23": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_24": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_24": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_24": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_25": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_25": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_25": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_26": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_26": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_26": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_27": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_27": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_27": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_28": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_28": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_28": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_29": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_29": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_29": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_30": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_30": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_30": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_31": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_31": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_31": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_32": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_32": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_32": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_33": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_33": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_33": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_34": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_34": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_34": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_35": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_35": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_35": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_36": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_36": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_36": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_37": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_37": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_37": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_38": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_38": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_38": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_39": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_39": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_39": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_40": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_40": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_40": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_41": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_41": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_41": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_42": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_42": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_42": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_43": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_43": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_43": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_44": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_44": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_44": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_45": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_45": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_45": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_46": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_46": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_46": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_47": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_47": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_47": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_48": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_48": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_48": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_49": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_49": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_49": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ],
        "ckpt_name_50": [
          [
            "None",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "clip_skip_50": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "vae_name_50": [
          [
            "Baked VAE",
            "vae-ft-mse-840000-ema-pruned.safetensors"
          ]
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Checkpoint",
    "display_name": "XY Input: Checkpoint",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Clip Skip": {
    "input": {
      "required": {
        "target_ckpt": [
          [
            "Base",
            "Refiner"
          ]
        ],
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_clip_skip": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "last_clip_skip": [
          "INT",
          {
            "default": -3,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Clip Skip",
    "display_name": "XY Input: Clip Skip",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: LoRA": {
    "input": {
      "required": {
        "input_mode": [
          [
            "LoRA Names",
            "LoRA Names+Weights",
            "LoRA Batch"
          ]
        ],
        "batch_path": [
          "STRING",
          {
            "default": "/example_folder",
            "multiline": false
          }
        ],
        "subdirectories": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "batch_sort": [
          [
            "ascending",
            "descending"
          ]
        ],
        "batch_max": [
          "INT",
          {
            "default": -1,
            "min": -1,
            "max": 50,
            "step": 1
          }
        ],
        "lora_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ],
        "model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_1": [
          [
            "None"
          ]
        ],
        "model_str_1": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_1": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_2": [
          [
            "None"
          ]
        ],
        "model_str_2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_2": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_3": [
          [
            "None"
          ]
        ],
        "model_str_3": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_3": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_4": [
          [
            "None"
          ]
        ],
        "model_str_4": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_4": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_5": [
          [
            "None"
          ]
        ],
        "model_str_5": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_5": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_6": [
          [
            "None"
          ]
        ],
        "model_str_6": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_6": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_7": [
          [
            "None"
          ]
        ],
        "model_str_7": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_7": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_8": [
          [
            "None"
          ]
        ],
        "model_str_8": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_8": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_9": [
          [
            "None"
          ]
        ],
        "model_str_9": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_9": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_10": [
          [
            "None"
          ]
        ],
        "model_str_10": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_10": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_11": [
          [
            "None"
          ]
        ],
        "model_str_11": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_11": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_12": [
          [
            "None"
          ]
        ],
        "model_str_12": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_12": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_13": [
          [
            "None"
          ]
        ],
        "model_str_13": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_13": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_14": [
          [
            "None"
          ]
        ],
        "model_str_14": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_14": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_15": [
          [
            "None"
          ]
        ],
        "model_str_15": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_15": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_16": [
          [
            "None"
          ]
        ],
        "model_str_16": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_16": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_17": [
          [
            "None"
          ]
        ],
        "model_str_17": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_17": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_18": [
          [
            "None"
          ]
        ],
        "model_str_18": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_18": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_19": [
          [
            "None"
          ]
        ],
        "model_str_19": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_19": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_20": [
          [
            "None"
          ]
        ],
        "model_str_20": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_20": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_21": [
          [
            "None"
          ]
        ],
        "model_str_21": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_21": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_22": [
          [
            "None"
          ]
        ],
        "model_str_22": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_22": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_23": [
          [
            "None"
          ]
        ],
        "model_str_23": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_23": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_24": [
          [
            "None"
          ]
        ],
        "model_str_24": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_24": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_25": [
          [
            "None"
          ]
        ],
        "model_str_25": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_25": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_26": [
          [
            "None"
          ]
        ],
        "model_str_26": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_26": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_27": [
          [
            "None"
          ]
        ],
        "model_str_27": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_27": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_28": [
          [
            "None"
          ]
        ],
        "model_str_28": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_28": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_29": [
          [
            "None"
          ]
        ],
        "model_str_29": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_29": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_30": [
          [
            "None"
          ]
        ],
        "model_str_30": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_30": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_31": [
          [
            "None"
          ]
        ],
        "model_str_31": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_31": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_32": [
          [
            "None"
          ]
        ],
        "model_str_32": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_32": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_33": [
          [
            "None"
          ]
        ],
        "model_str_33": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_33": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_34": [
          [
            "None"
          ]
        ],
        "model_str_34": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_34": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_35": [
          [
            "None"
          ]
        ],
        "model_str_35": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_35": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_36": [
          [
            "None"
          ]
        ],
        "model_str_36": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_36": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_37": [
          [
            "None"
          ]
        ],
        "model_str_37": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_37": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_38": [
          [
            "None"
          ]
        ],
        "model_str_38": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_38": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_39": [
          [
            "None"
          ]
        ],
        "model_str_39": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_39": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_40": [
          [
            "None"
          ]
        ],
        "model_str_40": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_40": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_41": [
          [
            "None"
          ]
        ],
        "model_str_41": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_41": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_42": [
          [
            "None"
          ]
        ],
        "model_str_42": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_42": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_43": [
          [
            "None"
          ]
        ],
        "model_str_43": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_43": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_44": [
          [
            "None"
          ]
        ],
        "model_str_44": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_44": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_45": [
          [
            "None"
          ]
        ],
        "model_str_45": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_45": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_46": [
          [
            "None"
          ]
        ],
        "model_str_46": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_46": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_47": [
          [
            "None"
          ]
        ],
        "model_str_47": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_47": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_48": [
          [
            "None"
          ]
        ],
        "model_str_48": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_48": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_49": [
          [
            "None"
          ]
        ],
        "model_str_49": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_49": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "lora_name_50": [
          [
            "None"
          ]
        ],
        "model_str_50": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_str_50": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: LoRA",
    "display_name": "XY Input: LoRA",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: LoRA Plot": {
    "input": {
      "required": {
        "input_mode": [
          [
            "X: LoRA Batch, Y: LoRA Weight",
            "X: LoRA Batch, Y: Model Strength",
            "X: LoRA Batch, Y: Clip Strength",
            "X: Model Strength, Y: Clip Strength"
          ]
        ],
        "lora_name": [
          [
            "None"
          ]
        ],
        "model_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "clip_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "X_batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "X_batch_path": [
          "STRING",
          {
            "default": "/example_folder",
            "multiline": false
          }
        ],
        "X_subdirectories": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "X_batch_sort": [
          [
            "ascending",
            "descending"
          ]
        ],
        "X_first_value": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "X_last_value": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "Y_batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "Y_first_value": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "Y_last_value": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "lora_stack": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "XY",
      "XY"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "X",
      "Y"
    ],
    "name": "XY Input: LoRA Plot",
    "display_name": "XY Input: LoRA Plot",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: LoRA Stacks": {
    "input": {
      "required": {
        "node_state": [
          [
            "Enabled"
          ]
        ]
      },
      "optional": {
        "lora_stack_1": [
          "LORA_STACK"
        ],
        "lora_stack_2": [
          "LORA_STACK"
        ],
        "lora_stack_3": [
          "LORA_STACK"
        ],
        "lora_stack_4": [
          "LORA_STACK"
        ],
        "lora_stack_5": [
          "LORA_STACK"
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: LoRA Stacks",
    "display_name": "XY Input: LoRA Stacks",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Control Net": {
    "input": {
      "required": {
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "target_parameter": [
          [
            "strength",
            "start_percent",
            "end_percent"
          ]
        ],
        "batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "first_strength": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "last_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "first_start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "last_start_percent": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "first_end_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "last_end_percent": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Control Net",
    "display_name": "XY Input: Control Net",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Control Net Plot": {
    "input": {
      "required": {
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "plot_type": [
          [
            "X: Strength, Y: Start%",
            "X: Strength, Y: End%",
            "X: Start%, Y: Strength",
            "X: Start%, Y: End%",
            "X: End%, Y: Strength",
            "X: End%, Y: Start%"
          ]
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "X_batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "X_first_value": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "X_last_value": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "Y_batch_count": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 50
          }
        ],
        "Y_first_value": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "Y_last_value": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "cnet_stack": [
          "CONTROL_NET_STACK"
        ]
      }
    },
    "output": [
      "XY",
      "XY"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "X",
      "Y"
    ],
    "name": "XY Input: Control Net Plot",
    "display_name": "XY Input: Control Net Plot",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "XY Input: Manual XY Entry": {
    "input": {
      "required": {
        "plot_type": [
          [
            "Nothing",
            "Seeds++ Batch",
            "Steps",
            "StartStep",
            "EndStep",
            "CFG Scale",
            "Sampler",
            "Scheduler",
            "Denoise",
            "VAE",
            "Positive Prompt S/R",
            "Negative Prompt S/R",
            "Checkpoint",
            "Clip Skip",
            "LoRA"
          ]
        ],
        "plot_value": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "XY Input: Manual XY Entry",
    "display_name": "XY Input: Manual XY Entry",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "Manual XY Entry Info": {
    "input": {
      "required": {
        "notes": [
          "STRING",
          {
            "default": "_____________SYNTAX_____________\n(X/Y_types)     (X/Y_values)\nSeeds++ Batch   batch_count\nSteps           steps_1;steps_2;...\nStartStep       start_step_1;start_step_2;...\nEndStep         end_step_1;end_step_2;...\nCFG Scale       cfg_1;cfg_2;...\nSampler(1)      sampler_1;sampler_2;...\nSampler(2)      sampler_1,scheduler_1;...\nSampler(3)      sampler_1;...;,default_scheduler\nScheduler       scheduler_1;scheduler_2;...\nDenoise         denoise_1;denoise_2;...\nVAE             vae_1;vae_2;vae_3;...\n+Prompt S/R     search_txt;replace_1;replace_2;...\n-Prompt S/R     search_txt;replace_1;replace_2;...\nCheckpoint(1)   ckpt_1;ckpt_2;ckpt_3;...\nCheckpoint(2)   ckpt_1,clip_skip_1;...\nCheckpoint(3)   ckpt_1;ckpt_2;...;,default_clip_skip\nClip Skip       clip_skip_1;clip_skip_2;...\nLoRA(1)         lora_1;lora_2;lora_3;...\nLoRA(2)         lora_1;...;,default_model_str,default_clip_str\nLoRA(3)         lora_1,model_str_1,clip_str_1;...\n\n____________SAMPLERS____________\neuler;\neuler_ancestral;\nheun;\nheunpp2;\ndpm_2;\ndpm_2_ancestral;\nlms;\ndpm_fast;\ndpm_adaptive;\ndpmpp_2s_ancestral;\ndpmpp_sde;\ndpmpp_sde_gpu;\ndpmpp_2m;\ndpmpp_2m_sde;\ndpmpp_2m_sde_gpu;\ndpmpp_3m_sde;\ndpmpp_3m_sde_gpu;\nddpm;\nlcm;\nddim;\nuni_pc;\nuni_pc_bh2\n\n___________SCHEDULERS___________\nnormal;\nkarras;\nexponential;\nsgm_uniform;\nsimple;\nddim_uniform\n\n_____________VAES_______________\nvae-ft-mse-840000-ema-pruned.safetensors\n\n___________CHECKPOINTS__________\nSD1-5/disneyPixarCartoon_v10.safetensors;\nSD1-5/sd_v1-5_vae.ckpt;\nSDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors;\nSDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors;\nSDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors;\nSDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors;\nSDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors;\nSDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors;\nSDXL/sd_xl_base_1.0_0.9vae.safetensors;\nSDXL/sd_xl_refiner_1.0.safetensors;\nsd_xl_base_1.0_0.9vae-alt.safetensors\n\n_____________LORAS______________\n\n",
            "multiline": true
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Manual XY Entry Info",
    "display_name": "Manual XY Entry Info",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "Join XY Inputs of Same Type": {
    "input": {
      "required": {
        "XY_1": [
          "XY"
        ],
        "XY_2": [
          "XY"
        ]
      }
    },
    "output": [
      "XY"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "X or Y"
    ],
    "name": "Join XY Inputs of Same Type",
    "display_name": "Join XY Inputs of Same Type",
    "description": "",
    "category": "Efficiency Nodes/XY Inputs",
    "output_node": false
  },
  "Image Overlay": {
    "input": {
      "required": {
        "base_image": [
          "IMAGE"
        ],
        "overlay_image": [
          "IMAGE"
        ],
        "overlay_resize": [
          [
            "None",
            "Fit",
            "Resize by rescale_factor",
            "Resize to width & heigth"
          ]
        ],
        "resize_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "rescale_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 16.0,
            "step": 0.1
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 8192,
            "step": 64
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 8192,
            "step": 64
          }
        ],
        "x_offset": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 10
          }
        ],
        "y_offset": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 10
          }
        ],
        "rotation": [
          "INT",
          {
            "default": 0,
            "min": -180,
            "max": 180,
            "step": 5
          }
        ],
        "opacity": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 5
          }
        ]
      },
      "optional": {
        "optional_mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Overlay",
    "display_name": "Image Overlay",
    "description": "",
    "category": "Efficiency Nodes/Image",
    "output_node": false
  },
  "Noise Control Script": {
    "input": {
      "required": {
        "rng_source": [
          [
            "cpu",
            "gpu",
            "nv"
          ]
        ],
        "cfg_denoiser": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "add_seed_noise": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.015,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "script": [
          "SCRIPT"
        ]
      }
    },
    "output": [
      "SCRIPT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SCRIPT"
    ],
    "name": "Noise Control Script",
    "display_name": "Noise Control Script",
    "description": "",
    "category": "Efficiency Nodes/Scripts",
    "output_node": false
  },
  "HighRes-Fix Script": {
    "input": {
      "required": {
        "upscale_type": [
          [
            "latent",
            "pixel"
          ]
        ],
        "hires_ckpt_name": [
          [
            "(use same)",
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "latent_upscaler": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp",
            "city96.v1",
            "city96.xl",
            "ttl_nn.SDXL",
            "ttl_nn.SD 1.x"
          ]
        ],
        "pixel_upscaler": [
          [
            "4x-UltraSharp.pth",
            "4x_foolhardy_Remacri.pth",
            "ESRGAN_4x.pth",
            "RealESRGAN_x4plus.pth"
          ]
        ],
        "upscale_by": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0.01,
            "max": 8.0,
            "step": 0.05
          }
        ],
        "use_same_seed": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "hires_steps": [
          "INT",
          {
            "default": 12,
            "min": 1,
            "max": 10000
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.56,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "iterations": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 5,
            "step": 1
          }
        ],
        "use_controlnet": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "control_net_name": [
          [
            "SD1-5/control_v11e_sd15_ip2p_fp16.safetensors",
            "SD1-5/control_v11e_sd15_shuffle_fp16.safetensors",
            "SD1-5/control_v11f1e_sd15_tile.pth",
            "SD1-5/control_v11f1e_sd15_tile_fp16.safetensors",
            "SD1-5/control_v11f1p_sd15_depth_fp16.safetensors",
            "SD1-5/control_v11p_sd15_canny_fp16.safetensors",
            "SD1-5/control_v11p_sd15_inpaint_fp16.safetensors",
            "SD1-5/control_v11p_sd15_lineart_fp16.safetensors",
            "SD1-5/control_v11p_sd15_mlsd_fp16.safetensors",
            "SD1-5/control_v11p_sd15_normalbae_fp16.safetensors",
            "SD1-5/control_v11p_sd15_openpose_fp16.safetensors",
            "SD1-5/control_v11p_sd15_scribble_fp16.safetensors",
            "SD1-5/control_v11p_sd15_seg_fp16.safetensors",
            "SD1-5/control_v11p_sd15_softedge_fp16.safetensors",
            "SD1-5/control_v11p_sd15s2_lineart_anime_fp16.safetensors",
            "SDXL/control-lora-canny-rank256.safetensors",
            "SDXL/control-lora-depth-rank256.safetensors",
            "SDXL/control-lora-openposeXL2-rank256.safetensors",
            "SDXL/control-lora-recolor-rank256.safetensors",
            "SDXL/control-lora-sketch-rank256.safetensors"
          ]
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "preprocessor": [
          [
            "ColorPreprocessor",
            "TilePreprocessor",
            "CannyEdgePreprocessor",
            "ShufflePreprocessor",
            "M-LSDPreprocessor",
            "AnimeFace_SemSegPreprocessor",
            "PiDiNetPreprocessor",
            "BinaryPreprocessor",
            "MediaPipe-FaceMeshPreprocessor",
            "AnimeLineArtPreprocessor",
            "SAMPreprocessor",
            "BAE-NormalMapPreprocessor",
            "Manga2Anime_LineArt_Preprocessor",
            "Zoe-DepthMapPreprocessor",
            "OneFormer-COCO-SemSegPreprocessor",
            "OneFormer-ADE20K-SemSegPreprocessor",
            "LeReS-DepthMapPreprocessor",
            "LineArtPreprocessor",
            "HEDPreprocessor",
            "FakeScribblePreprocessor",
            "ScribblePreprocessor",
            "Scribble_XDoG_Preprocessor",
            "DensePosePreprocessor",
            "DWPreprocessor",
            "AnimalPosePreprocessor",
            "OpenposePreprocessor",
            "MiDaS-NormalMapPreprocessor",
            "MiDaS-DepthMapPreprocessor",
            "UniFormer-SemSegPreprocessor",
            "SemSegPreprocessor"
          ],
          {
            "default": "CannyEdgePreprocessor"
          }
        ],
        "preprocessor_imgs": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "script": [
          "SCRIPT"
        ]
      },
      "hidden": {
        "my_unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "SCRIPT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SCRIPT"
    ],
    "name": "HighRes-Fix Script",
    "display_name": "HighRes-Fix Script",
    "description": "",
    "category": "Efficiency Nodes/Scripts",
    "output_node": false
  },
  "Tiled Upscaler Script": {
    "input": {
      "required": {
        "upscale_by": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0.01,
            "max": 8.0,
            "step": 0.05
          }
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 256,
            "max": 8192,
            "step": 64
          }
        ],
        "tiling_strategy": [
          [
            "random",
            "random strict",
            "padded",
            "simple",
            "none"
          ]
        ],
        "tiling_steps": [
          "INT",
          {
            "default": 30,
            "min": 1,
            "max": 10000
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.4,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "use_controlnet": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "tile_controlnet": [
          [
            "SD1-5/control_v11e_sd15_ip2p_fp16.safetensors",
            "SD1-5/control_v11e_sd15_shuffle_fp16.safetensors",
            "SD1-5/control_v11f1e_sd15_tile.pth",
            "SD1-5/control_v11f1e_sd15_tile_fp16.safetensors",
            "SD1-5/control_v11f1p_sd15_depth_fp16.safetensors",
            "SD1-5/control_v11p_sd15_canny_fp16.safetensors",
            "SD1-5/control_v11p_sd15_inpaint_fp16.safetensors",
            "SD1-5/control_v11p_sd15_lineart_fp16.safetensors",
            "SD1-5/control_v11p_sd15_mlsd_fp16.safetensors",
            "SD1-5/control_v11p_sd15_normalbae_fp16.safetensors",
            "SD1-5/control_v11p_sd15_openpose_fp16.safetensors",
            "SD1-5/control_v11p_sd15_scribble_fp16.safetensors",
            "SD1-5/control_v11p_sd15_seg_fp16.safetensors",
            "SD1-5/control_v11p_sd15_softedge_fp16.safetensors",
            "SD1-5/control_v11p_sd15s2_lineart_anime_fp16.safetensors",
            "SDXL/control-lora-canny-rank256.safetensors",
            "SDXL/control-lora-depth-rank256.safetensors",
            "SDXL/control-lora-openposeXL2-rank256.safetensors",
            "SDXL/control-lora-recolor-rank256.safetensors",
            "SDXL/control-lora-sketch-rank256.safetensors"
          ]
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "script": [
          "SCRIPT"
        ]
      }
    },
    "output": [
      "SCRIPT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SCRIPT"
    ],
    "name": "Tiled Upscaler Script",
    "display_name": "Tiled Upscaler Script",
    "description": "",
    "category": "Efficiency Nodes/Scripts",
    "output_node": false
  },
  "BNK_NoisyLatentImage": {
    "input": {
      "required": {
        "source": [
          [
            "CPU",
            "GPU"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "BNK_NoisyLatentImage",
    "display_name": "Noisy Latent Image",
    "description": "",
    "category": "latent/noise",
    "output_node": false
  },
  "BNK_SlerpLatent": {
    "input": {
      "required": {
        "latents1": [
          "LATENT"
        ],
        "factor": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "latents2": [
          "LATENT"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "BNK_SlerpLatent",
    "display_name": "Slerp Latents",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "BNK_GetSigma": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "steps": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 1,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "BNK_GetSigma",
    "display_name": "Get Sigma",
    "description": "",
    "category": "latent/noise",
    "output_node": false
  },
  "BNK_InjectNoise": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 200.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "noise": [
          "LATENT"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "BNK_InjectNoise",
    "display_name": "Inject Noise",
    "description": "",
    "category": "latent/noise",
    "output_node": false
  },
  "BNK_Unsampler": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "normalize": [
          [
            "disable",
            "enable"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "BNK_Unsampler",
    "display_name": "Unsampler",
    "description": "",
    "category": "sampling",
    "output_node": false
  },
  "BLIP Model Loader": {
    "input": {
      "required": {
        "blip_model": [
          [
            "caption",
            "interrogate"
          ]
        ]
      }
    },
    "output": [
      "BLIP_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "BLIP_MODEL"
    ],
    "name": "BLIP Model Loader",
    "display_name": "BLIP Model Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "Blend Latents": {
    "input": {
      "required": {
        "latent_a": [
          "LATENT"
        ],
        "latent_b": [
          "LATENT"
        ],
        "operation": [
          [
            "add",
            "multiply",
            "divide",
            "subtract",
            "overlay",
            "hard_light",
            "soft_light",
            "screen",
            "linear_dodge",
            "difference",
            "exclusion",
            "random"
          ]
        ],
        "blend": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.01,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "Blend Latents",
    "display_name": "Blend Latents",
    "description": "",
    "category": "WAS Suite/Latent",
    "output_node": false
  },
  "Bus Node": {
    "input": {
      "required": {},
      "optional": {
        "bus": [
          "BUS"
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "BUS",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "bus",
      "model",
      "clip",
      "vae",
      "positive",
      "negative"
    ],
    "name": "Bus Node",
    "display_name": "Bus Node",
    "description": "",
    "category": "WAS Suite/Utilities",
    "output_node": false
  },
  "Cache Node": {
    "input": {
      "required": {
        "latent_suffix": [
          "STRING",
          {
            "default": "24018841_cache",
            "multiline": false
          }
        ],
        "image_suffix": [
          "STRING",
          {
            "default": "33361911_cache",
            "multiline": false
          }
        ],
        "conditioning_suffix": [
          "STRING",
          {
            "default": "99682096_cache",
            "multiline": false
          }
        ]
      },
      "optional": {
        "output_path": [
          "STRING",
          {
            "default": "/home/johnl/ai/ComfyUI/custom_nodes/was-node-suite-comfyui/cache",
            "multiline": false
          }
        ],
        "latent": [
          "LATENT"
        ],
        "image": [
          "IMAGE"
        ],
        "conditioning": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "latent_filename",
      "image_filename",
      "conditioning_filename"
    ],
    "name": "Cache Node",
    "display_name": "Cache Node",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": true
  },
  "Checkpoint Loader": {
    "input": {
      "required": {
        "config_name": [
          [
            "anything_v3.yaml",
            "v1-inference.yaml",
            "v1-inference_clip_skip_2.yaml",
            "v1-inference_clip_skip_2_fp16.yaml",
            "v1-inference_fp16.yaml",
            "v1-inpainting-inference.yaml",
            "v2-inference-v.yaml",
            "v2-inference-v_fp32.yaml",
            "v2-inference.yaml",
            "v2-inference_fp32.yaml",
            "v2-inpainting-inference.yaml"
          ]
        ],
        "ckpt_name": [
          [
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "NAME_STRING"
    ],
    "name": "Checkpoint Loader",
    "display_name": "Checkpoint Loader",
    "description": "",
    "category": "WAS Suite/Loaders/Advanced",
    "output_node": false
  },
  "Checkpoint Loader (Simple)": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "NAME_STRING"
    ],
    "name": "Checkpoint Loader (Simple)",
    "display_name": "Checkpoint Loader (Simple)",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "CLIPTextEncode (NSP)": {
    "input": {
      "required": {
        "mode": [
          [
            "Noodle Soup Prompts",
            "Wildcards"
          ]
        ],
        "noodle_key": [
          "STRING",
          {
            "default": "__",
            "multiline": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "conditioning",
      "parsed_text",
      "raw_text"
    ],
    "name": "CLIPTextEncode (NSP)",
    "display_name": "CLIPTextEncode (NSP)",
    "description": "",
    "category": "WAS Suite/Conditioning",
    "output_node": true
  },
  "CLIP Input Switch": {
    "input": {
      "required": {
        "clip_a": [
          "CLIP"
        ],
        "clip_b": [
          "CLIP"
        ],
        "boolean_number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "name": "CLIP Input Switch",
    "display_name": "CLIP Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "CLIP Vision Input Switch": {
    "input": {
      "required": {
        "clip_vision_a": [
          "CLIP_VISION"
        ],
        "clip_vision_b": [
          "CLIP_VISION"
        ],
        "boolean_number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "CLIP_VISION"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP_VISION"
    ],
    "name": "CLIP Vision Input Switch",
    "display_name": "CLIP Vision Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Conditioning Input Switch": {
    "input": {
      "required": {
        "conditioning_a": [
          "CONDITIONING"
        ],
        "conditioning_b": [
          "CONDITIONING"
        ],
        "boolean_number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "Conditioning Input Switch",
    "display_name": "Conditioning Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Constant Number": {
    "input": {
      "required": {
        "number_type": [
          [
            "integer",
            "float",
            "bool"
          ]
        ],
        "number": [
          "FLOAT",
          {
            "default": 0,
            "min": -18446744073709551615,
            "max": 18446744073709551615
          }
        ]
      },
      "optional": {
        "number_as_text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Constant Number",
    "display_name": "Constant Number",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "Create Grid Image": {
    "input": {
      "required": {
        "images_path": [
          "STRING",
          {
            "default": "./ComfyUI/input/",
            "multiline": false
          }
        ],
        "pattern_glob": [
          "STRING",
          {
            "default": "*",
            "multiline": false
          }
        ],
        "include_subfolders": [
          [
            "false",
            "true"
          ]
        ],
        "border_width": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "number_of_columns": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 24,
            "step": 1
          }
        ],
        "max_cell_size": [
          "INT",
          {
            "default": 256,
            "min": 32,
            "max": 1280,
            "step": 1
          }
        ],
        "border_red": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "border_green": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "border_blue": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Create Grid Image",
    "display_name": "Create Grid Image",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Create Grid Image from Batch": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "border_width": [
          "INT",
          {
            "default": 3,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "number_of_columns": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 24,
            "step": 1
          }
        ],
        "max_cell_size": [
          "INT",
          {
            "default": 256,
            "min": 32,
            "max": 2048,
            "step": 1
          }
        ],
        "border_red": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "border_green": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "border_blue": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Create Grid Image from Batch",
    "display_name": "Create Grid Image from Batch",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Create Morph Image": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "transition_frames": [
          "INT",
          {
            "default": 30,
            "min": 2,
            "max": 60,
            "step": 1
          }
        ],
        "still_image_delay_ms": [
          "FLOAT",
          {
            "default": 2500.0,
            "min": 0.1,
            "max": 60000.0,
            "step": 0.1
          }
        ],
        "duration_ms": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.1,
            "max": 60000.0,
            "step": 0.1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "max_size": [
          "INT",
          {
            "default": 512,
            "min": 128,
            "max": 1280,
            "step": 1
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/output",
            "multiline": false
          }
        ],
        "filename": [
          "STRING",
          {
            "default": "morph",
            "multiline": false
          }
        ],
        "filetype": [
          [
            "GIF",
            "APNG"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "image_a_pass",
      "image_b_pass",
      "filepath_text",
      "filename_text"
    ],
    "name": "Create Morph Image",
    "display_name": "Create Morph Image",
    "description": "",
    "category": "WAS Suite/Animation",
    "output_node": false
  },
  "Create Morph Image from Path": {
    "input": {
      "required": {
        "transition_frames": [
          "INT",
          {
            "default": 30,
            "min": 2,
            "max": 60,
            "step": 1
          }
        ],
        "still_image_delay_ms": [
          "FLOAT",
          {
            "default": 2500.0,
            "min": 0.1,
            "max": 60000.0,
            "step": 0.1
          }
        ],
        "duration_ms": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.1,
            "max": 60000.0,
            "step": 0.1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "max_size": [
          "INT",
          {
            "default": 512,
            "min": 128,
            "max": 1280,
            "step": 1
          }
        ],
        "input_path": [
          "STRING",
          {
            "default": "./ComfyUI",
            "multiline": false
          }
        ],
        "input_pattern": [
          "STRING",
          {
            "default": "*",
            "multiline": false
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/output",
            "multiline": false
          }
        ],
        "filename": [
          "STRING",
          {
            "default": "morph",
            "multiline": false
          }
        ],
        "filetype": [
          [
            "GIF",
            "APNG"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "filepath_text",
      "filename_text"
    ],
    "name": "Create Morph Image from Path",
    "display_name": "Create Morph Image from Path",
    "description": "",
    "category": "WAS Suite/Animation",
    "output_node": false
  },
  "Create Video from Path": {
    "input": {
      "required": {
        "transition_frames": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 120,
            "step": 1
          }
        ],
        "image_delay_sec": [
          "FLOAT",
          {
            "default": 2.5,
            "min": 0.01,
            "max": 60000.0,
            "step": 0.01
          }
        ],
        "fps": [
          "INT",
          {
            "default": 30,
            "min": 1,
            "max": 60.0,
            "step": 1
          }
        ],
        "max_size": [
          "INT",
          {
            "default": 512,
            "min": 128,
            "max": 1920,
            "step": 1
          }
        ],
        "input_path": [
          "STRING",
          {
            "default": "./ComfyUI/input",
            "multiline": false
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/output",
            "multiline": false
          }
        ],
        "filename": [
          "STRING",
          {
            "default": "comfy_video",
            "multiline": false
          }
        ],
        "codec": [
          [
            "AVC1",
            "FFV1",
            "H264",
            "MP4V"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "filepath_text",
      "filename_text"
    ],
    "name": "Create Video from Path",
    "display_name": "Create Video from Path",
    "description": "",
    "category": "WAS Suite/Animation",
    "output_node": false
  },
  "CLIPSeg Masking": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      },
      "optional": {
        "clipseg_model": [
          "CLIPSEG_MODEL"
        ]
      }
    },
    "output": [
      "MASK",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MASK",
      "MASK_IMAGE"
    ],
    "name": "CLIPSeg Masking",
    "display_name": "CLIPSeg Masking",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "CLIPSeg Model Loader": {
    "input": {
      "required": {
        "model": [
          "STRING",
          {
            "default": "CIDAS/clipseg-rd64-refined",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "CLIPSEG_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "clipseg_model"
    ],
    "name": "CLIPSeg Model Loader",
    "display_name": "CLIPSeg Model Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "CLIPSeg Batch Masking": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "text_a": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_b": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      },
      "optional": {
        "image_c": [
          "IMAGE"
        ],
        "image_d": [
          "IMAGE"
        ],
        "image_e": [
          "IMAGE"
        ],
        "image_f": [
          "IMAGE"
        ],
        "text_c": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_d": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_e": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_f": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "IMAGES_BATCH",
      "MASKS_BATCH",
      "MASK_IMAGES_BATCH"
    ],
    "name": "CLIPSeg Batch Masking",
    "display_name": "CLIPSeg Batch Masking",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Convert Masks to Images": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGES"
    ],
    "name": "Convert Masks to Images",
    "display_name": "Convert Masks to Images",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Control Net Model Input Switch": {
    "input": {
      "required": {
        "control_net_a": [
          "CONTROL_NET"
        ],
        "control_net_b": [
          "CONTROL_NET"
        ],
        "boolean_number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTROL_NET"
    ],
    "name": "Control Net Model Input Switch",
    "display_name": "Control Net Model Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Debug Number to Console": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ],
        "label": [
          "STRING",
          {
            "default": "Debug to Console",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "NUMBER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "NUMBER"
    ],
    "name": "Debug Number to Console",
    "display_name": "Debug Number to Console",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": true
  },
  "Dictionary to Console": {
    "input": {
      "required": {
        "dictionary": [
          "DICT"
        ],
        "label": [
          "STRING",
          {
            "default": "Dictionary Output",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "DICT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "DICT"
    ],
    "name": "Dictionary to Console",
    "display_name": "Dictionary to Console",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": true
  },
  "Diffusers Model Loader": {
    "input": {
      "required": {
        "model_path": [
          []
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "NAME_STRING"
    ],
    "name": "Diffusers Model Loader",
    "display_name": "Diffusers Model Loader",
    "description": "",
    "category": "WAS Suite/Loaders/Advanced",
    "output_node": false
  },
  "Diffusers Hub Model Down-Loader": {
    "input": {
      "required": {
        "repo_id": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "revision": [
          "STRING",
          {
            "default": "None",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "NAME_STRING"
    ],
    "name": "Diffusers Hub Model Down-Loader",
    "display_name": "Diffusers Hub Model Down-Loader",
    "description": "",
    "category": "WAS Suite/Loaders/Advanced",
    "output_node": false
  },
  "Export API": {
    "input": {
      "required": {
        "save_prompt_api": [
          [
            "true",
            "true"
          ]
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/output/",
            "multiline": false
          }
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI_Prompt"
          }
        ],
        "filename_delimiter": [
          "STRING",
          {
            "default": "_"
          }
        ],
        "filename_number_padding": [
          "INT",
          {
            "default": 4,
            "min": 2,
            "max": 9,
            "step": 1
          }
        ],
        "parse_text_tokens": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Export API",
    "display_name": "Export API",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": true
  },
  "Latent Input Switch": {
    "input": {
      "required": {
        "latent_a": [
          "LATENT"
        ],
        "latent_b": [
          "LATENT"
        ],
        "boolean_number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "Latent Input Switch",
    "display_name": "Latent Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Load Cache": {
    "input": {
      "required": {
        "latent_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "image_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "conditioning_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "IMAGE",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "LATENT",
      "IMAGE",
      "CONDITIONING"
    ],
    "name": "Load Cache",
    "display_name": "Load Cache",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": false
  },
  "Logic Boolean": {
    "input": {
      "required": {
        "boolean_number": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "NUMBER",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "NUMBER",
      "INT"
    ],
    "name": "Logic Boolean",
    "display_name": "Logic Boolean",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Lora Loader": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_name": [
          [
            "None"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "NAME_STRING"
    ],
    "name": "Lora Loader",
    "display_name": "Lora Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "Image SSAO (Ambient Occlusion)": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "depth_images": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "min": 0.0,
            "max": 5.0,
            "default": 1.0,
            "step": 0.01
          }
        ],
        "radius": [
          "FLOAT",
          {
            "min": 0.01,
            "max": 1024,
            "default": 30,
            "step": 0.01
          }
        ],
        "ao_blur": [
          "FLOAT",
          {
            "min": 0.01,
            "max": 1024,
            "default": 2.5,
            "step": 0.01
          }
        ],
        "specular_threshold": [
          "INT",
          {
            "min": 0,
            "max": 255,
            "default": 25,
            "step": 1
          }
        ],
        "enable_specular_masking": [
          [
            "True",
            "False"
          ]
        ],
        "tile_size": [
          "INT",
          {
            "min": 1,
            "max": 512,
            "default": 1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "composited_images",
      "ssao_images",
      "specular_mask_images"
    ],
    "name": "Image SSAO (Ambient Occlusion)",
    "display_name": "Image SSAO (Ambient Occlusion)",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image SSDO (Direct Occlusion)": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "depth_images": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "min": 0.0,
            "max": 5.0,
            "default": 1.0,
            "step": 0.01
          }
        ],
        "radius": [
          "FLOAT",
          {
            "min": 0.01,
            "max": 1024,
            "default": 30,
            "step": 0.01
          }
        ],
        "specular_threshold": [
          "INT",
          {
            "min": 0,
            "max": 255,
            "default": 128,
            "step": 1
          }
        ],
        "colored_occlusion": [
          [
            "True",
            "False"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "composited_images",
      "ssdo_images",
      "ssdo_image_masks",
      "light_source_image_masks"
    ],
    "name": "Image SSDO (Direct Occlusion)",
    "display_name": "Image SSDO (Direct Occlusion)",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Analyze": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mode": [
          [
            "Black White Levels",
            "RGB Levels"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Analyze",
    "display_name": "Image Analyze",
    "description": "",
    "category": "WAS Suite/Image/Analyze",
    "output_node": false
  },
  "Image Aspect Ratio": {
    "input": {
      "required": {},
      "optional": {
        "image": [
          "IMAGE"
        ],
        "width": [
          "NUMBER"
        ],
        "height": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "NUMBER",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "aspect_number",
      "aspect_float",
      "is_landscape_bool",
      "aspect_ratio_common",
      "aspect_type"
    ],
    "name": "Image Aspect Ratio",
    "display_name": "Image Aspect Ratio",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Image Batch": {
    "input": {
      "required": {},
      "optional": {
        "images_a": [
          "IMAGE"
        ],
        "images_b": [
          "IMAGE"
        ],
        "images_c": [
          "IMAGE"
        ],
        "images_d": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "Image Batch",
    "display_name": "Image Batch",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Image Blank": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 4096,
            "step": 1
          }
        ],
        "red": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Blank",
    "display_name": "Image Blank",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Image Blend by Mask": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "mask": [
          "IMAGE"
        ],
        "blend_percentage": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Blend by Mask",
    "display_name": "Image Blend by Mask",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Image Blend": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "blend_percentage": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "Image Blend",
    "display_name": "Image Blend",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Image Blending Mode": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "mode": [
          [
            "add",
            "color",
            "color_burn",
            "color_dodge",
            "darken",
            "difference",
            "exclusion",
            "hard_light",
            "hue",
            "lighten",
            "multiply",
            "overlay",
            "screen",
            "soft_light"
          ]
        ],
        "blend_percentage": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "Image Blending Mode",
    "display_name": "Image Blending Mode",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Image Bloom Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "radius": [
          "FLOAT",
          {
            "default": 10,
            "min": 0.0,
            "max": 1024,
            "step": 0.1
          }
        ],
        "intensity": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.0,
            "max": 1.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Bloom Filter",
    "display_name": "Image Bloom Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Canny Filter": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "enable_threshold": [
          [
            "false",
            "true"
          ]
        ],
        "threshold_low": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "threshold_high": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "images"
    ],
    "name": "Image Canny Filter",
    "display_name": "Image Canny Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Chromatic Aberration": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "red_offset": [
          "INT",
          {
            "default": 2,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "green_offset": [
          "INT",
          {
            "default": -1,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "blue_offset": [
          "INT",
          {
            "default": 1,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "intensity": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "fade_radius": [
          "INT",
          {
            "default": 12,
            "min": 0,
            "max": 1024,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Chromatic Aberration",
    "display_name": "Image Chromatic Aberration",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Color Palette": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "colors": [
          "INT",
          {
            "default": 16,
            "min": 8,
            "max": 256,
            "step": 1
          }
        ],
        "mode": [
          [
            "Chart",
            "back_to_back"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "LIST"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "image",
      "color_palettes"
    ],
    "name": "Image Color Palette",
    "display_name": "Image Color Palette",
    "description": "",
    "category": "WAS Suite/Image/Analyze",
    "output_node": false
  },
  "Image Crop Face": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "crop_padding_factor": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.0,
            "max": 2.0,
            "step": 0.01
          }
        ],
        "cascade_xml": [
          [
            "lbpcascade_animeface.xml",
            "haarcascade_frontalface_default.xml",
            "haarcascade_frontalface_alt.xml",
            "haarcascade_frontalface_alt2.xml",
            "haarcascade_frontalface_alt_tree.xml",
            "haarcascade_profileface.xml",
            "haarcascade_upperbody.xml",
            "haarcascade_eye.xml"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "CROP_DATA"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "CROP_DATA"
    ],
    "name": "Image Crop Face",
    "display_name": "Image Crop Face",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Crop Location": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "top": [
          "INT",
          {
            "default": 0,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "left": [
          "INT",
          {
            "default": 0,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "right": [
          "INT",
          {
            "default": 256,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "bottom": [
          "INT",
          {
            "default": 256,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "CROP_DATA"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "CROP_DATA"
    ],
    "name": "Image Crop Location",
    "display_name": "Image Crop Location",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Crop Square Location": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "max": 24576,
            "min": 0,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "max": 24576,
            "min": 0,
            "step": 1
          }
        ],
        "size": [
          "INT",
          {
            "default": 256,
            "max": 4096,
            "min": 5,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "CROP_DATA"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "CROP_DATA"
    ],
    "name": "Image Crop Square Location",
    "display_name": "Image Crop Square Location",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Displacement Warp": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "displacement_maps": [
          "IMAGE"
        ],
        "amplitude": [
          "FLOAT",
          {
            "default": 25.0,
            "min": -4096,
            "max": 4096,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "images"
    ],
    "name": "Image Displacement Warp",
    "display_name": "Image Displacement Warp",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Lucy Sharpen": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "iterations": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 12,
            "step": 1
          }
        ],
        "kernel_size": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 16,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Lucy Sharpen",
    "display_name": "Image Lucy Sharpen",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Paste Face": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "crop_image": [
          "IMAGE"
        ],
        "crop_data": [
          "CROP_DATA"
        ],
        "crop_blending": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "crop_sharpening": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 3,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK_IMAGE"
    ],
    "name": "Image Paste Face",
    "display_name": "Image Paste Face",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Paste Crop": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "crop_image": [
          "IMAGE"
        ],
        "crop_data": [
          "CROP_DATA"
        ],
        "crop_blending": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "crop_sharpening": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 3,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "IMAGE"
    ],
    "name": "Image Paste Crop",
    "display_name": "Image Paste Crop",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Paste Crop by Location": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "crop_image": [
          "IMAGE"
        ],
        "top": [
          "INT",
          {
            "default": 0,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "left": [
          "INT",
          {
            "default": 0,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "right": [
          "INT",
          {
            "default": 256,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "bottom": [
          "INT",
          {
            "default": 256,
            "max": 10000000,
            "min": 0,
            "step": 1
          }
        ],
        "crop_blending": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "crop_sharpening": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 3,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "IMAGE"
    ],
    "name": "Image Paste Crop by Location",
    "display_name": "Image Paste Crop by Location",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Pixelate": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "pixelation_size": [
          "FLOAT",
          {
            "default": 164,
            "min": 16,
            "max": 480,
            "step": 1
          }
        ],
        "num_colors": [
          "FLOAT",
          {
            "default": 16,
            "min": 2,
            "max": 256,
            "step": 1
          }
        ],
        "init_mode": [
          [
            "k-means++",
            "random",
            "none"
          ]
        ],
        "max_iterations": [
          "FLOAT",
          {
            "default": 100,
            "min": 1,
            "max": 256,
            "step": 1
          }
        ],
        "dither": [
          [
            "False",
            "True"
          ]
        ],
        "dither_mode": [
          [
            "FloydSteinberg",
            "Ordered"
          ]
        ]
      },
      "optional": {
        "color_palettes": [
          "LIST",
          {
            "forceInput": true
          }
        ],
        "color_palette_mode": [
          [
            "Brightness",
            "BrightnessAndTonal",
            "Linear",
            "Tonal"
          ]
        ],
        "reverse_palette": [
          [
            "False",
            "True"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "images"
    ],
    "name": "Image Pixelate",
    "display_name": "Image Pixelate",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Power Noise": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "frequency": [
          "FLOAT",
          {
            "default": 0.5,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "attenuation": [
          "FLOAT",
          {
            "default": 0.5,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "noise_type": [
          [
            "grey",
            "white",
            "pink",
            "blue",
            "green",
            "mix"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "Image Power Noise",
    "display_name": "Image Power Noise",
    "description": "",
    "category": "WAS Suite/Image/Generate/Noise",
    "output_node": false
  },
  "Image Dragan Photography Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "saturation": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 16.0,
            "step": 0.01
          }
        ],
        "contrast": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 16.0,
            "step": 0.01
          }
        ],
        "brightness": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 16.0,
            "step": 0.01
          }
        ],
        "sharpness": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 6.0,
            "step": 0.01
          }
        ],
        "highpass_radius": [
          "FLOAT",
          {
            "default": 6.0,
            "min": 0.0,
            "max": 255.0,
            "step": 0.01
          }
        ],
        "highpass_samples": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 6.0,
            "step": 1
          }
        ],
        "highpass_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 3.0,
            "step": 0.01
          }
        ],
        "colorize": [
          [
            "true",
            "false"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Dragan Photography Filter",
    "display_name": "Image Dragan Photography Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Edge Detection Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mode": [
          [
            "normal",
            "laplacian"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Edge Detection Filter",
    "display_name": "Image Edge Detection Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Film Grain": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "density": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.01,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "intensity": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.01,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "highlights": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.01,
            "max": 255.0,
            "step": 0.01
          }
        ],
        "supersample_factor": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 8,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Film Grain",
    "display_name": "Image Film Grain",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Filter Adjustments": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "brightness": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -1.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "contrast": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -1.0,
            "max": 2.0,
            "step": 0.01
          }
        ],
        "saturation": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 5.0,
            "step": 0.01
          }
        ],
        "sharpness": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -5.0,
            "max": 5.0,
            "step": 0.01
          }
        ],
        "blur": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16,
            "step": 1
          }
        ],
        "gaussian_blur": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1024.0,
            "step": 0.1
          }
        ],
        "edge_enhance": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "detail_enhance": [
          [
            "false",
            "true"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Filter Adjustments",
    "display_name": "Image Filter Adjustments",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Flip": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "mode": [
          [
            "horizontal",
            "vertical"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "images"
    ],
    "name": "Image Flip",
    "display_name": "Image Flip",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Gradient Map": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "gradient_image": [
          "IMAGE"
        ],
        "flip_left_right": [
          [
            "false",
            "true"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Gradient Map",
    "display_name": "Image Gradient Map",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Generate Gradient": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "direction": [
          [
            "horizontal",
            "vertical"
          ]
        ],
        "tolerance": [
          "INT",
          {
            "default": 0,
            "max": 255,
            "min": 0,
            "step": 1
          }
        ],
        "gradient_stops": [
          "STRING",
          {
            "default": "0:255,0,0\n25:255,255,255\n50:0,255,0\n75:0,0,255",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Generate Gradient",
    "display_name": "Image Generate Gradient",
    "description": "",
    "category": "WAS Suite/Image/Generate",
    "output_node": false
  },
  "Image High Pass Filter": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "radius": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 500,
            "step": 1
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 0.0,
            "max": 255.0,
            "step": 0.1
          }
        ],
        "color_output": [
          [
            "true",
            "false"
          ]
        ],
        "neutral_background": [
          [
            "true",
            "false"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "images"
    ],
    "name": "Image High Pass Filter",
    "display_name": "Image High Pass Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image History Loader": {
    "input": {
      "required": {
        "image": [
          [
            "No History"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "image",
      "filename_text"
    ],
    "name": "Image History Loader",
    "display_name": "Image History Loader",
    "description": "",
    "category": "WAS Suite/History",
    "output_node": false
  },
  "Image Input Switch": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "boolean_number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Input Switch",
    "display_name": "Image Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Image Levels Adjustment": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "black_level": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 255.0,
            "step": 0.1
          }
        ],
        "mid_level": [
          "FLOAT",
          {
            "default": 127.5,
            "min": 0.0,
            "max": 255.0,
            "step": 0.1
          }
        ],
        "white_level": [
          "FLOAT",
          {
            "default": 255,
            "min": 0.0,
            "max": 255.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Levels Adjustment",
    "display_name": "Image Levels Adjustment",
    "description": "",
    "category": "WAS Suite/Image/Adjustment",
    "output_node": false
  },
  "Image Load": {
    "input": {
      "required": {
        "image_path": [
          "STRING",
          {
            "default": "./ComfyUI/input/example.png",
            "multiline": false
          }
        ],
        "RGBA": [
          [
            "false",
            "true"
          ]
        ]
      },
      "optional": {
        "filename_text_extension": [
          [
            "true",
            "false"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "image",
      "mask",
      "filename_text"
    ],
    "name": "Image Load",
    "display_name": "Image Load",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": false
  },
  "Image Median Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "diameter": [
          "INT",
          {
            "default": 2.0,
            "min": 0.1,
            "max": 255,
            "step": 1
          }
        ],
        "sigma_color": [
          "FLOAT",
          {
            "default": 10.0,
            "min": -255.0,
            "max": 255.0,
            "step": 0.1
          }
        ],
        "sigma_space": [
          "FLOAT",
          {
            "default": 10.0,
            "min": -255.0,
            "max": 255.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Median Filter",
    "display_name": "Image Median Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Mix RGB Channels": {
    "input": {
      "required": {
        "red_channel": [
          "IMAGE"
        ],
        "green_channel": [
          "IMAGE"
        ],
        "blue_channel": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Mix RGB Channels",
    "display_name": "Image Mix RGB Channels",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Monitor Effects Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mode": [
          [
            "Digital Distortion",
            "Signal Distortion",
            "TV Distortion"
          ]
        ],
        "amplitude": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ],
        "offset": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "Image Monitor Effects Filter",
    "display_name": "Image Monitor Effects Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Nova Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "amplitude": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "frequency": [
          "FLOAT",
          {
            "default": 3.14,
            "min": 0.0,
            "max": 100.0,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Nova Filter",
    "display_name": "Image Nova Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Padding": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "feathering": [
          "INT",
          {
            "default": 120,
            "min": 0,
            "max": 2048,
            "step": 1
          }
        ],
        "feather_second_pass": [
          [
            "true",
            "false"
          ]
        ],
        "left_padding": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 48000,
            "step": 1
          }
        ],
        "right_padding": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 48000,
            "step": 1
          }
        ],
        "top_padding": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 48000,
            "step": 1
          }
        ],
        "bottom_padding": [
          "INT",
          {
            "default": 512,
            "min": 8,
            "max": 48000,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "IMAGE"
    ],
    "name": "Image Padding",
    "display_name": "Image Padding",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Perlin Noise": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "max": 2048,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 2048,
            "min": 64,
            "step": 1
          }
        ],
        "scale": [
          "INT",
          {
            "default": 100,
            "max": 2048,
            "min": 2,
            "step": 1
          }
        ],
        "octaves": [
          "INT",
          {
            "default": 4,
            "max": 8,
            "min": 0,
            "step": 1
          }
        ],
        "persistence": [
          "FLOAT",
          {
            "default": 0.5,
            "max": 100.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "Image Perlin Noise",
    "display_name": "Image Perlin Noise",
    "description": "",
    "category": "WAS Suite/Image/Generate/Noise",
    "output_node": false
  },
  "Image Rembg (Remove Background)": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "transparency": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "model": [
          [
            "u2net",
            "u2netp",
            "u2net_human_seg",
            "silueta",
            "isnet-general-use",
            "isnet-anime"
          ]
        ],
        "post_processing": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "only_mask": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "alpha_matting": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "alpha_matting_foreground_threshold": [
          "INT",
          {
            "default": 240,
            "min": 0,
            "max": 255
          }
        ],
        "alpha_matting_background_threshold": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 255
          }
        ],
        "alpha_matting_erode_size": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 255
          }
        ],
        "background_color": [
          [
            "none",
            "black",
            "white",
            "magenta",
            "chroma green",
            "chroma blue"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "images"
    ],
    "name": "Image Rembg (Remove Background)",
    "display_name": "Image Rembg (Remove Background)",
    "description": "",
    "category": "WAS Suite/Image/AI",
    "output_node": false
  },
  "Image Perlin Power Fractal": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "max": 8192,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 8192,
            "min": 64,
            "step": 1
          }
        ],
        "scale": [
          "INT",
          {
            "default": 100,
            "max": 2048,
            "min": 2,
            "step": 1
          }
        ],
        "octaves": [
          "INT",
          {
            "default": 4,
            "max": 8,
            "min": 0,
            "step": 1
          }
        ],
        "persistence": [
          "FLOAT",
          {
            "default": 0.5,
            "max": 100.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "lacunarity": [
          "FLOAT",
          {
            "default": 2.0,
            "max": 100.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "exponent": [
          "FLOAT",
          {
            "default": 2.0,
            "max": 100.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "Image Perlin Power Fractal",
    "display_name": "Image Perlin Power Fractal",
    "description": "",
    "category": "WAS Suite/Image/Generate/Noise",
    "output_node": false
  },
  "Image Remove Background (Alpha)": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "mode": [
          [
            "background",
            "foreground"
          ]
        ],
        "threshold": [
          "INT",
          {
            "default": 127,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "threshold_tolerance": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 24,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "images"
    ],
    "name": "Image Remove Background (Alpha)",
    "display_name": "Image Remove Background (Alpha)",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Remove Color": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "target_red": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "target_green": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "target_blue": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "replace_red": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "replace_green": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "replace_blue": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "clip_threshold": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Remove Color",
    "display_name": "Image Remove Color",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Resize": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mode": [
          [
            "rescale",
            "resize"
          ]
        ],
        "supersample": [
          [
            "true",
            "false"
          ]
        ],
        "resampling": [
          [
            "lanczos",
            "nearest",
            "bilinear",
            "bicubic"
          ]
        ],
        "rescale_factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.01,
            "max": 16.0,
            "step": 0.01
          }
        ],
        "resize_width": [
          "INT",
          {
            "default": 1024,
            "min": 1,
            "max": 48000,
            "step": 1
          }
        ],
        "resize_height": [
          "INT",
          {
            "default": 1536,
            "min": 1,
            "max": 48000,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Resize",
    "display_name": "Image Resize",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Rotate": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "mode": [
          [
            "transpose",
            "internal"
          ]
        ],
        "rotation": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 360,
            "step": 90
          }
        ],
        "sampler": [
          [
            "nearest",
            "bilinear",
            "bicubic"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "images"
    ],
    "name": "Image Rotate",
    "display_name": "Image Rotate",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Rotate Hue": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "hue_shift": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Rotate Hue",
    "display_name": "Image Rotate Hue",
    "description": "",
    "category": "WAS Suite/Image/Adjustment",
    "output_node": false
  },
  "Image Save": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "output_path": [
          "STRING",
          {
            "default": "[time(%Y-%m-%d)]",
            "multiline": false
          }
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "filename_delimiter": [
          "STRING",
          {
            "default": "_"
          }
        ],
        "filename_number_padding": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 9,
            "step": 1
          }
        ],
        "filename_number_start": [
          [
            "false",
            "true"
          ]
        ],
        "extension": [
          [
            "png",
            "jpg",
            "jpeg",
            "gif",
            "tiff",
            "webp",
            "bmp"
          ]
        ],
        "quality": [
          "INT",
          {
            "default": 100,
            "min": 1,
            "max": 100,
            "step": 1
          }
        ],
        "lossless_webp": [
          [
            "false",
            "true"
          ]
        ],
        "overwrite_mode": [
          [
            "false",
            "prefix_as_filename"
          ]
        ],
        "show_history": [
          [
            "false",
            "true"
          ]
        ],
        "show_history_by_prefix": [
          [
            "true",
            "false"
          ]
        ],
        "embed_workflow": [
          [
            "true",
            "false"
          ]
        ],
        "show_previews": [
          [
            "true",
            "false"
          ]
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Image Save",
    "display_name": "Image Save",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": true
  },
  "Image Seamless Texture": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "blending": [
          "FLOAT",
          {
            "default": 0.4,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "tiled": [
          [
            "true",
            "false"
          ]
        ],
        "tiles": [
          "INT",
          {
            "default": 2,
            "max": 6,
            "min": 2,
            "step": 2
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "images"
    ],
    "name": "Image Seamless Texture",
    "display_name": "Image Seamless Texture",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Select Channel": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "channel": [
          [
            "red",
            "green",
            "blue"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Select Channel",
    "display_name": "Image Select Channel",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Select Color": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "red": [
          "INT",
          {
            "default": 255.0,
            "min": 0.0,
            "max": 255.0,
            "step": 0.1
          }
        ],
        "green": [
          "INT",
          {
            "default": 255.0,
            "min": 0.0,
            "max": 255.0,
            "step": 0.1
          }
        ],
        "blue": [
          "INT",
          {
            "default": 255.0,
            "min": 0.0,
            "max": 255.0,
            "step": 0.1
          }
        ],
        "variance": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Select Color",
    "display_name": "Image Select Color",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Shadows and Highlights": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "shadow_threshold": [
          "FLOAT",
          {
            "default": 75,
            "min": 0.0,
            "max": 255.0,
            "step": 0.1
          }
        ],
        "shadow_factor": [
          "FLOAT",
          {
            "default": 1.5,
            "min": -12.0,
            "max": 12.0,
            "step": 0.1
          }
        ],
        "shadow_smoothing": [
          "FLOAT",
          {
            "default": 0.25,
            "min": -255.0,
            "max": 255.0,
            "step": 0.1
          }
        ],
        "highlight_threshold": [
          "FLOAT",
          {
            "default": 175,
            "min": 0.0,
            "max": 255.0,
            "step": 0.1
          }
        ],
        "highlight_factor": [
          "FLOAT",
          {
            "default": 0.5,
            "min": -12.0,
            "max": 12.0,
            "step": 0.1
          }
        ],
        "highlight_smoothing": [
          "FLOAT",
          {
            "default": 0.25,
            "min": -255.0,
            "max": 255.0,
            "step": 0.1
          }
        ],
        "simplify_isolation": [
          "FLOAT",
          {
            "default": 0,
            "min": -255.0,
            "max": 255.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "image",
      "shadow_map",
      "highlight_map"
    ],
    "name": "Image Shadows and Highlights",
    "display_name": "Image Shadows and Highlights",
    "description": "",
    "category": "WAS Suite/Image/Adjustment",
    "output_node": false
  },
  "Image Size to Number": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "NUMBER",
      "NUMBER",
      "FLOAT",
      "FLOAT",
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "width_num",
      "height_num",
      "width_float",
      "height_float",
      "width_int",
      "height_int"
    ],
    "name": "Image Size to Number",
    "display_name": "Image Size to Number",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Image Stitch": {
    "input": {
      "required": {
        "image_a": [
          "IMAGE"
        ],
        "image_b": [
          "IMAGE"
        ],
        "stitch": [
          [
            "top",
            "left",
            "bottom",
            "right"
          ]
        ],
        "feathering": [
          "INT",
          {
            "default": 50,
            "min": 0,
            "max": 2048,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Stitch",
    "display_name": "Image Stitch",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image Style Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "style": [
          [
            "1977",
            "aden",
            "brannan",
            "brooklyn",
            "clarendon",
            "earlybird",
            "fairy tale",
            "gingham",
            "hudson",
            "inkwell",
            "kelvin",
            "lark",
            "lofi",
            "maven",
            "mayfair",
            "moon",
            "nashville",
            "perpetua",
            "reyes",
            "rise",
            "slumber",
            "stinson",
            "toaster",
            "valencia",
            "walden",
            "willow",
            "xpro2"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Style Filter",
    "display_name": "Image Style Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image Threshold": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Threshold",
    "display_name": "Image Threshold",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Tiled": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "num_tiles": [
          "INT",
          {
            "default": 4,
            "max": 64,
            "min": 2,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGES"
    ],
    "name": "Image Tiled",
    "display_name": "Image Tiled",
    "description": "",
    "category": "WAS Suite/Image/Process",
    "output_node": false
  },
  "Image Transpose": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "image_overlay": [
          "IMAGE"
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ],
        "X": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ],
        "Y": [
          "INT",
          {
            "default": 0,
            "min": -48000,
            "max": 48000,
            "step": 1
          }
        ],
        "rotation": [
          "INT",
          {
            "default": 0,
            "min": -360,
            "max": 360,
            "step": 1
          }
        ],
        "feathering": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image Transpose",
    "display_name": "Image Transpose",
    "description": "",
    "category": "WAS Suite/Image/Transform",
    "output_node": false
  },
  "Image fDOF Filter": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "depth": [
          "IMAGE"
        ],
        "mode": [
          [
            "mock",
            "gaussian",
            "box"
          ]
        ],
        "radius": [
          "INT",
          {
            "default": 8,
            "min": 1,
            "max": 128,
            "step": 1
          }
        ],
        "samples": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 3,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Image fDOF Filter",
    "display_name": "Image fDOF Filter",
    "description": "",
    "category": "WAS Suite/Image/Filter",
    "output_node": false
  },
  "Image to Latent Mask": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "channel": [
          [
            "alpha",
            "red",
            "green",
            "blue"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Image to Latent Mask",
    "display_name": "Image to Latent Mask",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Image to Noise": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "num_colors": [
          "INT",
          {
            "default": 16,
            "max": 256,
            "min": 2,
            "step": 2
          }
        ],
        "black_mix": [
          "INT",
          {
            "default": 0,
            "max": 20,
            "min": 0,
            "step": 1
          }
        ],
        "gaussian_mix": [
          "FLOAT",
          {
            "default": 0.0,
            "max": 1024,
            "min": 0,
            "step": 0.1
          }
        ],
        "brightness": [
          "FLOAT",
          {
            "default": 1.0,
            "max": 2.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_mode": [
          [
            "batch",
            "list"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "Image to Noise",
    "display_name": "Image to Noise",
    "description": "",
    "category": "WAS Suite/Image/Generate/Noise",
    "output_node": false
  },
  "Image to Seed": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "INT"
    ],
    "name": "Image to Seed",
    "display_name": "Image to Seed",
    "description": "",
    "category": "WAS Suite/Image/Analyze",
    "output_node": false
  },
  "Images to RGB": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Images to RGB",
    "display_name": "Images to RGB",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Images to Linear": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Images to Linear",
    "display_name": "Images to Linear",
    "description": "",
    "category": "WAS Suite/Image",
    "output_node": false
  },
  "Integer place counter": {
    "input": {
      "required": {
        "int_input": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000000,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INT_PLACES"
    ],
    "name": "Integer place counter",
    "display_name": "Integer place counter",
    "description": "",
    "category": "WAS Suite/Integer",
    "output_node": false
  },
  "Image Voronoi Noise Filter": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "max": 4096,
            "min": 64,
            "step": 1
          }
        ],
        "density": [
          "INT",
          {
            "default": 50,
            "max": 256,
            "min": 10,
            "step": 2
          }
        ],
        "modulator": [
          "INT",
          {
            "default": 0,
            "max": 8,
            "min": 0,
            "step": 1
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      },
      "optional": {
        "flat": [
          [
            "False",
            "True"
          ]
        ],
        "RGB_output": [
          [
            "True",
            "False"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "Image Voronoi Noise Filter",
    "display_name": "Image Voronoi Noise Filter",
    "description": "",
    "category": "WAS Suite/Image/Generate/Noise",
    "output_node": false
  },
  "KSampler (WAS)": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "SEED"
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "KSampler (WAS)",
    "display_name": "KSampler (WAS)",
    "description": "",
    "category": "WAS Suite/Sampling",
    "output_node": false
  },
  "KSampler Cycle": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "tiled_vae": [
          [
            "disable",
            "enable"
          ]
        ],
        "latent_upscale": [
          [
            "disable",
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 2.0,
            "min": 0.1,
            "max": 8.0,
            "step": 0.1
          }
        ],
        "upscale_cycles": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 12,
            "step": 1
          }
        ],
        "starting_denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "cycle_denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "scale_denoise": [
          [
            "enable",
            "disable"
          ]
        ],
        "scale_sampling": [
          [
            "bilinear",
            "bicubic",
            "nearest",
            "lanczos"
          ]
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": {
        "secondary_model": [
          "MODEL"
        ],
        "secondary_start_cycle": [
          "INT",
          {
            "default": 2,
            "min": 2,
            "max": 16,
            "step": 1
          }
        ],
        "upscale_model": [
          "UPSCALE_MODEL"
        ],
        "processor_model": [
          "UPSCALE_MODEL"
        ],
        "pos_additive": [
          "CONDITIONING"
        ],
        "neg_additive": [
          "CONDITIONING"
        ],
        "pos_add_mode": [
          [
            "increment",
            "decrement"
          ]
        ],
        "pos_add_strength": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.01,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "pos_add_strength_scaling": [
          [
            "enable",
            "disable"
          ]
        ],
        "pos_add_strength_cutoff": [
          "FLOAT",
          {
            "default": 2.0,
            "min": 0.01,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "neg_add_mode": [
          [
            "increment",
            "decrement"
          ]
        ],
        "neg_add_strength": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.01,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "neg_add_strength_scaling": [
          [
            "enable",
            "disable"
          ]
        ],
        "neg_add_strength_cutoff": [
          "FLOAT",
          {
            "default": 2.0,
            "min": 0.01,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "sharpen_strength": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "sharpen_radius": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 12,
            "step": 1
          }
        ],
        "steps_scaling": [
          [
            "enable",
            "disable"
          ]
        ],
        "steps_control": [
          [
            "decrement",
            "increment"
          ]
        ],
        "steps_scaling_value": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 20,
            "step": 1
          }
        ],
        "steps_cutoff": [
          "INT",
          {
            "default": 20,
            "min": 4,
            "max": 1000,
            "step": 1
          }
        ],
        "denoise_cutoff": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.01,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "latent(s)"
    ],
    "name": "KSampler Cycle",
    "display_name": "KSampler Cycle",
    "description": "",
    "category": "WAS Suite/Sampling",
    "output_node": false
  },
  "Latent Noise Injection": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "noise_std": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "Latent Noise Injection",
    "display_name": "Latent Noise Injection",
    "description": "",
    "category": "WAS Suite/Latent/Generate",
    "output_node": false
  },
  "Latent Size to Number": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ]
      }
    },
    "output": [
      "NUMBER",
      "NUMBER",
      "FLOAT",
      "FLOAT",
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "tensor_w_num",
      "tensor_h_num"
    ],
    "name": "Latent Size to Number",
    "display_name": "Latent Size to Number",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Latent Upscale by Factor (WAS)": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "mode": [
          [
            "area",
            "bicubic",
            "bilinear",
            "nearest"
          ]
        ],
        "factor": [
          "FLOAT",
          {
            "default": 2.0,
            "min": 0.1,
            "max": 8.0,
            "step": 0.01
          }
        ],
        "align": [
          [
            "true",
            "false"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "Latent Upscale by Factor (WAS)",
    "display_name": "Latent Upscale by Factor (WAS)",
    "description": "",
    "category": "WAS Suite/Latent/Transform",
    "output_node": false
  },
  "Load Image Batch": {
    "input": {
      "required": {
        "mode": [
          [
            "single_image",
            "incremental_image"
          ]
        ],
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 150000,
            "step": 1
          }
        ],
        "label": [
          "STRING",
          {
            "default": "Batch 001",
            "multiline": false
          }
        ],
        "path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "pattern": [
          "STRING",
          {
            "default": "*",
            "multiline": false
          }
        ],
        "allow_RGBA_output": [
          [
            "false",
            "true"
          ]
        ]
      },
      "optional": {
        "filename_text_extension": [
          [
            "true",
            "false"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "image",
      "filename_text"
    ],
    "name": "Load Image Batch",
    "display_name": "Load Image Batch",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": false
  },
  "Load Text File": {
    "input": {
      "required": {
        "file_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "dictionary_name": [
          "STRING",
          {
            "default": "[filename]",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING",
      "DICT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "STRING",
      "DICT"
    ],
    "name": "Load Text File",
    "display_name": "Load Text File",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": false
  },
  "Load Lora": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_name": [
          [
            "None"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "NAME_STRING"
    ],
    "name": "Load Lora",
    "display_name": "Load Lora",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "Lora Input Switch": {
    "input": {
      "required": {
        "model_a": [
          "MODEL"
        ],
        "clip_a": [
          "CLIP"
        ],
        "model_b": [
          "MODEL"
        ],
        "clip_b": [
          "CLIP"
        ],
        "boolean_number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP"
    ],
    "name": "Lora Input Switch",
    "display_name": "Lora Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Masks Add": {
    "input": {
      "required": {
        "masks_a": [
          "MASK"
        ],
        "masks_b": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Masks Add",
    "display_name": "Masks Add",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Masks Subtract": {
    "input": {
      "required": {
        "masks_a": [
          "MASK"
        ],
        "masks_b": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Masks Subtract",
    "display_name": "Masks Subtract",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Arbitrary Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "size": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "threshold": [
          "INT",
          {
            "default": 128,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Arbitrary Region",
    "display_name": "Mask Arbitrary Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Batch to Mask": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "batch_number": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "Mask Batch to Mask",
    "display_name": "Mask Batch to Mask",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Batch": {
    "input": {
      "optional": {
        "masks_a": [
          "MASK"
        ],
        "masks_b": [
          "MASK"
        ],
        "masks_c": [
          "MASK"
        ],
        "masks_d": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "masks"
    ],
    "name": "Mask Batch",
    "display_name": "Mask Batch",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Ceiling Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Ceiling Region",
    "display_name": "Mask Ceiling Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Crop Dominant Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "padding": [
          "INT",
          {
            "default": 24,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Crop Dominant Region",
    "display_name": "Mask Crop Dominant Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Crop Minority Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "padding": [
          "INT",
          {
            "default": 24,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Crop Minority Region",
    "display_name": "Mask Crop Minority Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Crop Region": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "padding": [
          "INT",
          {
            "default": 24,
            "min": 0,
            "max": 4096,
            "step": 1
          }
        ],
        "region_type": [
          [
            "dominant",
            "minority"
          ]
        ]
      }
    },
    "output": [
      "MASK",
      "CROP_DATA",
      "INT",
      "INT",
      "INT",
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "cropped_mask",
      "crop_data",
      "top_int",
      "left_int",
      "right_int",
      "bottom_int",
      "width_int",
      "height_int"
    ],
    "name": "Mask Crop Region",
    "display_name": "Mask Crop Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Paste Region": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "crop_mask": [
          "MASK"
        ],
        "crop_data": [
          "CROP_DATA"
        ],
        "crop_blending": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "crop_sharpening": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 3,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MASK",
      "MASK"
    ],
    "name": "Mask Paste Region",
    "display_name": "Mask Paste Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Dilate Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "iterations": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 64,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Dilate Region",
    "display_name": "Mask Dilate Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Dominant Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "threshold": [
          "INT",
          {
            "default": 128,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Dominant Region",
    "display_name": "Mask Dominant Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Erode Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "iterations": [
          "INT",
          {
            "default": 5,
            "min": 1,
            "max": 64,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Erode Region",
    "display_name": "Mask Erode Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Fill Holes": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Fill Holes",
    "display_name": "Mask Fill Holes",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Floor Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Floor Region",
    "display_name": "Mask Floor Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Gaussian Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "radius": [
          "FLOAT",
          {
            "default": 5.0,
            "min": 0.0,
            "max": 1024,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Gaussian Region",
    "display_name": "Mask Gaussian Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Invert": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Invert",
    "display_name": "Mask Invert",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Minority Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "threshold": [
          "INT",
          {
            "default": 128,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Minority Region",
    "display_name": "Mask Minority Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Smooth Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 5.0,
            "min": 0.0,
            "max": 128.0,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Smooth Region",
    "display_name": "Mask Smooth Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Mask Threshold Region": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ],
        "black_threshold": [
          "INT",
          {
            "default": 75,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "white_threshold": [
          "INT",
          {
            "default": 175,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASKS"
    ],
    "name": "Mask Threshold Region",
    "display_name": "Mask Threshold Region",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Masks Combine Regions": {
    "input": {
      "required": {
        "mask_a": [
          "MASK"
        ],
        "mask_b": [
          "MASK"
        ]
      },
      "optional": {
        "mask_c": [
          "MASK"
        ],
        "mask_d": [
          "MASK"
        ],
        "mask_e": [
          "MASK"
        ],
        "mask_f": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "Masks Combine Regions",
    "display_name": "Masks Combine Regions",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Masks Combine Batch": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "Masks Combine Batch",
    "display_name": "Masks Combine Batch",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "MiDaS Model Loader": {
    "input": {
      "required": {
        "midas_model": [
          [
            "DPT_Large",
            "DPT_Hybrid"
          ]
        ]
      }
    },
    "output": [
      "MIDAS_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "midas_model"
    ],
    "name": "MiDaS Model Loader",
    "display_name": "MiDaS Model Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "MiDaS Depth Approximation": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "use_cpu": [
          [
            "false",
            "true"
          ]
        ],
        "midas_type": [
          [
            "DPT_Large",
            "DPT_Hybrid"
          ]
        ],
        "invert_depth": [
          [
            "false",
            "true"
          ]
        ]
      },
      "optional": {
        "midas_model": [
          "MIDAS_MODEL"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "images"
    ],
    "name": "MiDaS Depth Approximation",
    "display_name": "MiDaS Depth Approximation",
    "description": "",
    "category": "WAS Suite/Image/AI",
    "output_node": false
  },
  "MiDaS Mask Image": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "use_cpu": [
          [
            "false",
            "true"
          ]
        ],
        "midas_model": [
          [
            "DPT_Large",
            "DPT_Hybrid",
            "DPT_Small"
          ]
        ],
        "remove": [
          [
            "background",
            "foregroud"
          ]
        ],
        "threshold": [
          [
            "false",
            "true"
          ]
        ],
        "threshold_low": [
          "FLOAT",
          {
            "default": 10,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "threshold_mid": [
          "FLOAT",
          {
            "default": 200,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "threshold_high": [
          "FLOAT",
          {
            "default": 210,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "smoothing": [
          "FLOAT",
          {
            "default": 0.25,
            "min": 0.0,
            "max": 16.0,
            "step": 0.01
          }
        ],
        "background_red": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "background_green": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "background_blue": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "IMAGE"
    ],
    "name": "MiDaS Mask Image",
    "display_name": "MiDaS Mask Image",
    "description": "",
    "category": "WAS Suite/Image/AI",
    "output_node": false
  },
  "Model Input Switch": {
    "input": {
      "required": {
        "model_a": [
          "MODEL"
        ],
        "model_b": [
          "MODEL"
        ],
        "boolean_number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "Model Input Switch",
    "display_name": "Model Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Number Counter": {
    "input": {
      "required": {
        "number_type": [
          [
            "integer",
            "float"
          ]
        ],
        "mode": [
          [
            "increment",
            "decrement",
            "increment_to_stop",
            "decrement_to_stop"
          ]
        ],
        "start": [
          "FLOAT",
          {
            "default": 0,
            "min": -18446744073709551615,
            "max": 18446744073709551615,
            "step": 0.01
          }
        ],
        "stop": [
          "FLOAT",
          {
            "default": 0,
            "min": -18446744073709551615,
            "max": 18446744073709551615,
            "step": 0.01
          }
        ],
        "step": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 99999,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "reset_bool": [
          "NUMBER"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "number",
      "float",
      "int"
    ],
    "name": "Number Counter",
    "display_name": "Number Counter",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "Number Operation": {
    "input": {
      "required": {
        "number_a": [
          "NUMBER"
        ],
        "number_b": [
          "NUMBER"
        ],
        "operation": [
          [
            "addition",
            "subtraction",
            "division",
            "floor division",
            "multiplication",
            "exponentiation",
            "modulus",
            "greater-than",
            "greater-than or equals",
            "less-than",
            "less-than or equals",
            "equals",
            "does not equal"
          ]
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Number Operation",
    "display_name": "Number Operation",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Number to Float": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "Number to Float",
    "display_name": "Number to Float",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Number Input Switch": {
    "input": {
      "required": {
        "number_a": [
          "NUMBER"
        ],
        "number_b": [
          "NUMBER"
        ],
        "boolean_number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Number Input Switch",
    "display_name": "Number Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Number Input Condition": {
    "input": {
      "required": {
        "number_a": [
          "NUMBER"
        ],
        "number_b": [
          "NUMBER"
        ],
        "return_boolean": [
          [
            "false",
            "true"
          ]
        ],
        "comparison": [
          [
            "and",
            "or",
            "greater-than",
            "greater-than or equals",
            "less-than",
            "less-than or equals",
            "equals",
            "does not equal",
            "divisible by",
            "if A odd",
            "if A even",
            "if A prime",
            "factor of"
          ]
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Number Input Condition",
    "display_name": "Number Input Condition",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Number Multiple Of": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ],
        "multiple": [
          "INT",
          {
            "default": 8,
            "min": -18446744073709551615,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Number Multiple Of",
    "display_name": "Number Multiple Of",
    "description": "",
    "category": "WAS Suite/Number/Functions",
    "output_node": false
  },
  "Number PI": {
    "input": {
      "required": {}
    },
    "output": [
      "NUMBER",
      "FLOAT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "NUMBER",
      "FLOAT"
    ],
    "name": "Number PI",
    "display_name": "Number PI",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "Number to Int": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INT"
    ],
    "name": "Number to Int",
    "display_name": "Number to Int",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Number to Seed": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "SEED"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEED"
    ],
    "name": "Number to Seed",
    "display_name": "Number to Seed",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Number to String": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Number to String",
    "display_name": "Number to String",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Number to Text": {
    "input": {
      "required": {
        "number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Number to Text",
    "display_name": "Number to Text",
    "description": "",
    "category": "WAS Suite/Number/Operations",
    "output_node": false
  },
  "Prompt Styles Selector": {
    "input": {
      "required": {
        "style": [
          [
            "None"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_string",
      "negative_string"
    ],
    "name": "Prompt Styles Selector",
    "display_name": "Prompt Styles Selector",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Prompt Multiple Styles Selector": {
    "input": {
      "required": {
        "style1": [
          [
            "None"
          ]
        ],
        "style2": [
          [
            "None"
          ]
        ],
        "style3": [
          [
            "None"
          ]
        ],
        "style4": [
          [
            "None"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive_string",
      "negative_string"
    ],
    "name": "Prompt Multiple Styles Selector",
    "display_name": "Prompt Multiple Styles Selector",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Random Number": {
    "input": {
      "required": {
        "number_type": [
          [
            "integer",
            "float",
            "bool"
          ]
        ],
        "minimum": [
          "FLOAT",
          {
            "default": 0,
            "min": -18446744073709551615,
            "max": 18446744073709551615
          }
        ],
        "maximum": [
          "FLOAT",
          {
            "default": 0,
            "min": -18446744073709551615,
            "max": 18446744073709551615
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "Random Number",
    "display_name": "Random Number",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "Save Text File": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "path": [
          "STRING",
          {
            "default": "./ComfyUI/output/[time(%Y-%m-%d)]",
            "multiline": false
          }
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "filename_delimiter": [
          "STRING",
          {
            "default": "_"
          }
        ],
        "filename_number_padding": [
          "INT",
          {
            "default": 4,
            "min": 2,
            "max": 9,
            "step": 1
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Save Text File",
    "display_name": "Save Text File",
    "description": "",
    "category": "WAS Suite/IO",
    "output_node": true
  },
  "Seed": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "SEED",
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "seed",
      "number",
      "float",
      "int"
    ],
    "name": "Seed",
    "display_name": "Seed",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "Tensor Batch to Image": {
    "input": {
      "required": {
        "images_batch": [
          "IMAGE"
        ],
        "batch_image_number": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Tensor Batch to Image",
    "display_name": "Tensor Batch to Image",
    "description": "",
    "category": "WAS Suite/Latent/Transform",
    "output_node": false
  },
  "BLIP Analyze Image": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mode": [
          [
            "caption",
            "interrogate"
          ]
        ],
        "question": [
          "STRING",
          {
            "default": "What does the background consist of?",
            "multiline": true
          }
        ]
      },
      "optional": {
        "blip_model": [
          "BLIP_MODEL"
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "BLIP Analyze Image",
    "display_name": "BLIP Analyze Image",
    "description": "",
    "category": "WAS Suite/Text/AI",
    "output_node": false
  },
  "SAM Model Loader": {
    "input": {
      "required": {
        "model_size": [
          [
            "ViT-H",
            "ViT-L",
            "ViT-B"
          ]
        ]
      }
    },
    "output": [
      "SAM_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAM_MODEL"
    ],
    "name": "SAM Model Loader",
    "display_name": "SAM Model Loader",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "SAM Parameters": {
    "input": {
      "required": {
        "points": [
          "STRING",
          {
            "default": "[128, 128]; [0, 0]",
            "multiline": false
          }
        ],
        "labels": [
          "STRING",
          {
            "default": "[1, 0]",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "SAM_PARAMETERS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAM_PARAMETERS"
    ],
    "name": "SAM Parameters",
    "display_name": "SAM Parameters",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "SAM Parameters Combine": {
    "input": {
      "required": {
        "sam_parameters_a": [
          "SAM_PARAMETERS"
        ],
        "sam_parameters_b": [
          "SAM_PARAMETERS"
        ]
      }
    },
    "output": [
      "SAM_PARAMETERS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAM_PARAMETERS"
    ],
    "name": "SAM Parameters Combine",
    "display_name": "SAM Parameters Combine",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "SAM Image Mask": {
    "input": {
      "required": {
        "sam_model": [
          "SAM_MODEL"
        ],
        "sam_parameters": [
          "SAM_PARAMETERS"
        ],
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "SAM Image Mask",
    "display_name": "SAM Image Mask",
    "description": "",
    "category": "WAS Suite/Image/Masking",
    "output_node": false
  },
  "Samples Passthrough (Stat System)": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "samples"
    ],
    "name": "Samples Passthrough (Stat System)",
    "display_name": "Samples Passthrough (Stat System)",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": false
  },
  "String to Text": {
    "input": {
      "required": {
        "string": [
          "STRING",
          {}
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "String to Text",
    "display_name": "String to Text",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "Image Bounds": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE_BOUNDS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE_BOUNDS"
    ],
    "name": "Image Bounds",
    "display_name": "Image Bounds",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Inset Image Bounds": {
    "input": {
      "required": {
        "image_bounds": [
          "IMAGE_BOUNDS"
        ],
        "inset_left": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "inset_right": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "inset_top": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "inset_bottom": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "IMAGE_BOUNDS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE_BOUNDS"
    ],
    "name": "Inset Image Bounds",
    "display_name": "Inset Image Bounds",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Bounded Image Blend": {
    "input": {
      "required": {
        "target": [
          "IMAGE"
        ],
        "target_bounds": [
          "IMAGE_BOUNDS"
        ],
        "source": [
          "IMAGE"
        ],
        "blend_factor": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0
          }
        ],
        "feathering": [
          "INT",
          {
            "default": 16,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Bounded Image Blend",
    "display_name": "Bounded Image Blend",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Bounded Image Blend with Mask": {
    "input": {
      "required": {
        "target": [
          "IMAGE"
        ],
        "target_mask": [
          "MASK"
        ],
        "target_bounds": [
          "IMAGE_BOUNDS"
        ],
        "source": [
          "IMAGE"
        ],
        "blend_factor": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0
          }
        ],
        "feathering": [
          "INT",
          {
            "default": 16,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Bounded Image Blend with Mask",
    "display_name": "Bounded Image Blend with Mask",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Bounded Image Crop": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "image_bounds": [
          "IMAGE_BOUNDS"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Bounded Image Crop",
    "display_name": "Bounded Image Crop",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Bounded Image Crop with Mask": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "padding_left": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "padding_right": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "padding_top": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "padding_bottom": [
          "INT",
          {
            "default": 64,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE_BOUNDS"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "IMAGE_BOUNDS"
    ],
    "name": "Bounded Image Crop with Mask",
    "display_name": "Bounded Image Crop with Mask",
    "description": "",
    "category": "WAS Suite/Image/Bound",
    "output_node": false
  },
  "Image Bounds to Console": {
    "input": {
      "required": {
        "image_bounds": [
          "IMAGE_BOUNDS"
        ],
        "label": [
          "STRING",
          {
            "default": "Debug to Console",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE_BOUNDS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE_BOUNDS"
    ],
    "name": "Image Bounds to Console",
    "display_name": "Image Bounds to Console",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": true
  },
  "Text Dictionary Update": {
    "input": {
      "required": {
        "dictionary_a": [
          "DICT"
        ],
        "dictionary_b": [
          "DICT"
        ]
      },
      "optional": {
        "dictionary_c": [
          "DICT"
        ],
        "dictionary_d": [
          "DICT"
        ]
      }
    },
    "output": [
      "DICT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "DICT"
    ],
    "name": "Text Dictionary Update",
    "display_name": "Text Dictionary Update",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Add Tokens": {
    "input": {
      "required": {
        "tokens": [
          "STRING",
          {
            "default": "[hello]: world",
            "multiline": true
          }
        ],
        "print_current_tokens": [
          [
            "false",
            "true"
          ]
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Text Add Tokens",
    "display_name": "Text Add Tokens",
    "description": "",
    "category": "WAS Suite/Text/Tokens",
    "output_node": true
  },
  "Text Add Token by Input": {
    "input": {
      "required": {
        "token_name": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "token_value": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "print_current_tokens": [
          [
            "false",
            "true"
          ]
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Text Add Token by Input",
    "display_name": "Text Add Token by Input",
    "description": "",
    "category": "WAS Suite/Text/Tokens",
    "output_node": true
  },
  "Text Compare": {
    "input": {
      "required": {
        "text_a": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_b": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "mode": [
          [
            "similarity",
            "difference"
          ]
        ],
        "tolerance": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "NUMBER",
      "NUMBER",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "TEXT_A_PASS",
      "TEXT_B_PASS",
      "BOOL_NUMBER",
      "SCORE_NUMBER",
      "COMPARISON_TEXT"
    ],
    "name": "Text Compare",
    "display_name": "Text Compare",
    "description": "",
    "category": "WAS Suite/Text/Search",
    "output_node": false
  },
  "Text Concatenate": {
    "input": {
      "required": {
        "text_a": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_b": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "linebreak_addition": [
          [
            "false",
            "true"
          ]
        ]
      },
      "optional": {
        "text_c": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_d": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "delimiter": [
          "STRING",
          {
            "forceInput": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text Concatenate",
    "display_name": "Text Concatenate",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text File History Loader": {
    "input": {
      "required": {
        "file": [
          [
            "No History"
          ]
        ],
        "dictionary_name": [
          "STRING",
          {
            "default": "[filename]",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "DICT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "STRING",
      "DICT"
    ],
    "name": "Text File History Loader",
    "display_name": "Text File History Loader",
    "description": "",
    "category": "WAS Suite/History",
    "output_node": false
  },
  "Text Find and Replace by Dictionary": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "dictionary": [
          "DICT"
        ],
        "replacement_key": [
          "STRING",
          {
            "default": "__",
            "multiline": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text Find and Replace by Dictionary",
    "display_name": "Text Find and Replace by Dictionary",
    "description": "",
    "category": "WAS Suite/Text/Search",
    "output_node": false
  },
  "Text Find and Replace Input": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "find": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "replace": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "result_text",
      "replacement_count_number",
      "replacement_count_float",
      "replacement_count_int"
    ],
    "name": "Text Find and Replace Input",
    "display_name": "Text Find and Replace Input",
    "description": "",
    "category": "WAS Suite/Text/Search",
    "output_node": false
  },
  "Text Find and Replace": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "find": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "replace": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING",
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "result_text",
      "replacement_count_number",
      "replacement_count_float",
      "replacement_count_int"
    ],
    "name": "Text Find and Replace",
    "display_name": "Text Find and Replace",
    "description": "",
    "category": "WAS Suite/Text/Search",
    "output_node": false
  },
  "Text Input Switch": {
    "input": {
      "required": {
        "text_a": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_b": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "boolean_number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text Input Switch",
    "display_name": "Text Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Text List": {
    "input": {
      "required": {
        "text_a": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      },
      "optional": {
        "text_b": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_c": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_d": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_e": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_f": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_g": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "LIST"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LIST"
    ],
    "name": "Text List",
    "display_name": "Text List",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text List Concatenate": {
    "input": {
      "required": {
        "list_a": [
          "LIST",
          {
            "forceInput": true
          }
        ],
        "list_b": [
          "LIST",
          {
            "forceInput": true
          }
        ],
        "delimiter": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      },
      "optional": {
        "list_c": [
          "LIST",
          {
            "forceInput": true
          }
        ],
        "list_d": [
          "LIST",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "LIST"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LIST"
    ],
    "name": "Text List Concatenate",
    "display_name": "Text List Concatenate",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Load Line From File": {
    "input": {
      "required": {
        "file_path": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "dictionary_name": [
          "STRING",
          {
            "default": "[filename]",
            "multiline": false
          }
        ],
        "label": [
          "STRING",
          {
            "default": "TextBatch",
            "multiline": false
          }
        ],
        "mode": [
          [
            "automatic",
            "index"
          ]
        ],
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": {
        "multiline_text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "DICT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "line_text",
      "dictionary"
    ],
    "name": "Text Load Line From File",
    "display_name": "Text Load Line From File",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Multiline": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text Multiline",
    "display_name": "Text Multiline",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Parse A1111 Embeddings": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text Parse A1111 Embeddings",
    "display_name": "Text Parse A1111 Embeddings",
    "description": "",
    "category": "WAS Suite/Text/Parse",
    "output_node": false
  },
  "Text Parse Noodle Soup Prompts": {
    "input": {
      "required": {
        "mode": [
          [
            "Noodle Soup Prompts",
            "Wildcards"
          ]
        ],
        "noodle_key": [
          "STRING",
          {
            "default": "__",
            "multiline": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text Parse Noodle Soup Prompts",
    "display_name": "Text Parse Noodle Soup Prompts",
    "description": "",
    "category": "WAS Suite/Text/Parse",
    "output_node": true
  },
  "Text Parse Tokens": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text Parse Tokens",
    "display_name": "Text Parse Tokens",
    "description": "",
    "category": "WAS Suite/Text/Tokens",
    "output_node": false
  },
  "Text Random Line": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text Random Line",
    "display_name": "Text Random Line",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Random Prompt": {
    "input": {
      "required": {
        "search_seed": [
          "STRING",
          {
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text Random Prompt",
    "display_name": "Text Random Prompt",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text String": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      },
      "optional": {
        "text_b": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_c": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ],
        "text_d": [
          "STRING",
          {
            "default": "",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "name": "Text String",
    "display_name": "Text String",
    "description": "",
    "category": "WAS Suite/Text",
    "output_node": false
  },
  "Text Shuffle": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "separator": [
          "STRING",
          {
            "default": ",",
            "multiline": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text Shuffle",
    "display_name": "Text Shuffle",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "Text to Conditioning": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "Text to Conditioning",
    "display_name": "Text to Conditioning",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "Text to Console": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "label": [
          "STRING",
          {
            "default": "Text Output",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text to Console",
    "display_name": "Text to Console",
    "description": "",
    "category": "WAS Suite/Debug",
    "output_node": true
  },
  "Text to Number": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "NUMBER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "NUMBER"
    ],
    "name": "Text to Number",
    "display_name": "Text to Number",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "Text to String": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text to String",
    "display_name": "Text to String",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "Text String Truncate": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "truncate_by": [
          [
            "characters",
            "words"
          ]
        ],
        "truncate_from": [
          [
            "end",
            "beginning"
          ]
        ],
        "truncate_to": [
          "INT",
          {
            "default": 10,
            "min": -99999999,
            "max": 99999999,
            "step": 1
          }
        ]
      },
      "optional": {
        "text_b": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_c": [
          "STRING",
          {
            "forceInput": true
          }
        ],
        "text_d": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "STRING",
      "STRING",
      "STRING",
      "STRING"
    ],
    "name": "Text String Truncate",
    "display_name": "Text String Truncate",
    "description": "",
    "category": "WAS Suite/Text/Operations",
    "output_node": false
  },
  "True Random.org Number Generator": {
    "input": {
      "required": {
        "api_key": [
          "STRING",
          {
            "default": "00000000-0000-0000-0000-000000000000",
            "multiline": false
          }
        ],
        "minimum": [
          "FLOAT",
          {
            "default": 0,
            "min": -18446744073709551615,
            "max": 18446744073709551615
          }
        ],
        "maximum": [
          "FLOAT",
          {
            "default": 10000000,
            "min": -18446744073709551615,
            "max": 18446744073709551615
          }
        ],
        "mode": [
          [
            "random",
            "fixed"
          ]
        ]
      }
    },
    "output": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "NUMBER",
      "FLOAT",
      "INT"
    ],
    "name": "True Random.org Number Generator",
    "display_name": "True Random.org Number Generator",
    "description": "",
    "category": "WAS Suite/Number",
    "output_node": false
  },
  "unCLIP Checkpoint Loader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "CLIP_VISION",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "CLIP_VISION",
      "NAME_STRING"
    ],
    "name": "unCLIP Checkpoint Loader",
    "display_name": "unCLIP Checkpoint Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "Upscale Model Loader": {
    "input": {
      "required": {
        "model_name": [
          [
            "4x-UltraSharp.pth",
            "4x_foolhardy_Remacri.pth",
            "ESRGAN_4x.pth",
            "RealESRGAN_x4plus.pth"
          ]
        ]
      }
    },
    "output": [
      "UPSCALE_MODEL",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "UPSCALE_MODEL",
      "MODEL_NAME_TEXT"
    ],
    "name": "Upscale Model Loader",
    "display_name": "Upscale Model Loader",
    "description": "",
    "category": "WAS Suite/Loaders",
    "output_node": false
  },
  "Upscale Model Switch": {
    "input": {
      "required": {
        "upscale_model_a": [
          "UPSCALE_MODEL"
        ],
        "upscale_model_b": [
          "UPSCALE_MODEL"
        ],
        "boolean_number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "UPSCALE_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "UPSCALE_MODEL"
    ],
    "name": "Upscale Model Switch",
    "display_name": "Upscale Model Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Write to GIF": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "transition_frames": [
          "INT",
          {
            "default": 30,
            "min": 2,
            "max": 60,
            "step": 1
          }
        ],
        "image_delay_ms": [
          "FLOAT",
          {
            "default": 2500.0,
            "min": 0.1,
            "max": 60000.0,
            "step": 0.1
          }
        ],
        "duration_ms": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.1,
            "max": 60000.0,
            "step": 0.1
          }
        ],
        "loops": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "max_size": [
          "INT",
          {
            "default": 512,
            "min": 128,
            "max": 1280,
            "step": 1
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "/home/johnl/ai/ComfyUI/output",
            "multiline": false
          }
        ],
        "filename": [
          "STRING",
          {
            "default": "morph_writer",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "image_pass",
      "filepath_text",
      "filename_text"
    ],
    "name": "Write to GIF",
    "display_name": "Write to GIF",
    "description": "",
    "category": "WAS Suite/Animation/Writer",
    "output_node": false
  },
  "Write to Video": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "transition_frames": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 120,
            "step": 1
          }
        ],
        "image_delay_sec": [
          "FLOAT",
          {
            "default": 2.5,
            "min": 0.1,
            "max": 60000.0,
            "step": 0.1
          }
        ],
        "fps": [
          "INT",
          {
            "default": 30,
            "min": 1,
            "max": 60.0,
            "step": 1
          }
        ],
        "max_size": [
          "INT",
          {
            "default": 512,
            "min": 128,
            "max": 1920,
            "step": 1
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/output",
            "multiline": false
          }
        ],
        "filename": [
          "STRING",
          {
            "default": "comfy_writer",
            "multiline": false
          }
        ],
        "codec": [
          [
            "AVC1",
            "FFV1",
            "H264",
            "MP4V"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "IMAGE_PASS",
      "filepath_text",
      "filename_text"
    ],
    "name": "Write to Video",
    "display_name": "Write to Video",
    "description": "",
    "category": "WAS Suite/Animation/Writer",
    "output_node": false
  },
  "VAE Input Switch": {
    "input": {
      "required": {
        "vae_a": [
          "VAE"
        ],
        "vae_b": [
          "VAE"
        ],
        "boolean_number": [
          "NUMBER"
        ]
      }
    },
    "output": [
      "VAE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "VAE"
    ],
    "name": "VAE Input Switch",
    "display_name": "VAE Input Switch",
    "description": "",
    "category": "WAS Suite/Logic",
    "output_node": false
  },
  "Video Dump Frames": {
    "input": {
      "required": {
        "video_path": [
          "STRING",
          {
            "default": "./ComfyUI/input/MyVideo.mp4",
            "multiline": false
          }
        ],
        "output_path": [
          "STRING",
          {
            "default": "./ComfyUI/input/MyVideo",
            "multiline": false
          }
        ],
        "prefix": [
          "STRING",
          {
            "default": "frame_",
            "multiline": false
          }
        ],
        "filenumber_digits": [
          "INT",
          {
            "default": 4,
            "min": -1,
            "max": 8,
            "step": 1
          }
        ],
        "extension": [
          [
            "png",
            "jpg",
            "gif",
            "tiff"
          ]
        ]
      }
    },
    "output": [
      "STRING",
      "NUMBER"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "output_path",
      "processed_count"
    ],
    "name": "Video Dump Frames",
    "display_name": "Video Dump Frames",
    "description": "",
    "category": "WAS Suite/Animation",
    "output_node": false
  },
  "CLIPTextEncode (BlenderNeko Advanced + NSP)": {
    "input": {
      "required": {
        "mode": [
          [
            "Noodle Soup Prompts",
            "Wildcards"
          ]
        ],
        "noodle_key": [
          "STRING",
          {
            "default": "__",
            "multiline": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "clip": [
          "CLIP"
        ],
        "token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++"
          ]
        ],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "conditioning",
      "parsed_text",
      "raw_text"
    ],
    "name": "CLIPTextEncode (BlenderNeko Advanced + NSP)",
    "display_name": "CLIPTextEncode (BlenderNeko Advanced + NSP)",
    "description": "A node based on Blenderneko's <a href='https://github.com/BlenderNeko/ComfyUI_ADV_CLIP_embw' target='_blank'>Advanced CLIP Text Encode</a>. This version adds the ability to use Noodle Soup Prompts and Wildcards. Wildcards are stored in WAS Node Suite root under the folder 'wildcards'. You can create the folder if it doesn't exist and move your wildcards into it.",
    "category": "WAS Suite/Conditioning",
    "output_node": true
  },
  "Seed Everywhere": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      },
      "hidden": {
        "id": "UNIQUE_ID"
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INT"
    ],
    "name": "Seed Everywhere",
    "display_name": "Seed Everywhere",
    "description": "",
    "category": "everywhere",
    "output_node": true
  },
  "Anything Everywhere": {
    "input": {
      "required": {},
      "optional": {
        "anything": [
          "*",
          {}
        ]
      },
      "hidden": {
        "id": "UNIQUE_ID"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Anything Everywhere",
    "display_name": "Anything Everywhere",
    "description": "",
    "category": "everywhere",
    "output_node": true
  },
  "Anything Everywhere3": {
    "input": {
      "required": {},
      "optional": {
        "anything": [
          "*",
          {}
        ],
        "anything2": [
          "*",
          {}
        ],
        "anything3": [
          "*",
          {}
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Anything Everywhere3",
    "display_name": "Anything Everywhere3",
    "description": "",
    "category": "everywhere",
    "output_node": true
  },
  "Anything Everywhere?": {
    "input": {
      "required": {},
      "optional": {
        "anything": [
          "*",
          {}
        ],
        "title_regex": [
          "STRING",
          {
            "default": ".*"
          }
        ],
        "input_regex": [
          "STRING",
          {
            "default": ".*"
          }
        ]
      },
      "hidden": {
        "id": "UNIQUE_ID"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Anything Everywhere?",
    "display_name": "Anything Everywhere?",
    "description": "",
    "category": "everywhere",
    "output_node": true
  },
  "Prompts Everywhere": {
    "input": {
      "required": {},
      "optional": {
        "(^prompt|^positive)": [
          "*",
          {}
        ],
        "neg": [
          "*",
          {}
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Prompts Everywhere",
    "display_name": "Prompts Everywhere",
    "description": "",
    "category": "everywhere",
    "output_node": true
  },
  "Simple String": {
    "input": {
      "required": {
        "string": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Simple String",
    "display_name": "Simple String",
    "description": "",
    "category": "everywhere",
    "output_node": false
  },
  "ChatGPT Simple _O": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "model": [
          [],
          {
            "default": "gpt-3.5-turbo"
          }
        ],
        "behaviour": [
          [
            "tags",
            "description"
          ],
          {
            "default": "description"
          }
        ]
      },
      "optional": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "ChatGPT Simple _O",
    "display_name": "ChatGPT Simple _O",
    "description": "",
    "category": "O/OpenAI",
    "output_node": false
  },
  "ChatGPT compact _O": {
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "initMsg": [
          "STRING",
          {
            "multiline": true,
            "default": "\nact as prompt generator ,i will give you text and you describe an image that match that text in details use gelbooru  tags in your description also describe the high quality of the image, answer with one response only \n"
          }
        ],
        "model": [
          [],
          {
            "default": "gpt-3.5-turbo"
          }
        ]
      },
      "optional": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "ChatGPT compact _O",
    "display_name": "ChatGPT compact _O",
    "description": "",
    "category": "O/OpenAI",
    "output_node": false
  },
  "load_openAI _O": {
    "input": {
      "required": {}
    },
    "output": [
      "OPENAI"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "OPENAI"
    ],
    "name": "load_openAI _O",
    "display_name": "load_openAI _O",
    "description": "",
    "category": "O/OpenAI/Advanced",
    "output_node": false
  },
  "Chat_Message _O": {
    "input": {
      "required": {
        "role": [
          [
            "user",
            "assistant",
            "system"
          ],
          {
            "default": "user"
          }
        ],
        "content": [
          "STRING",
          {
            "multiline": true,
            "default": "\nact as prompt generator ,i will give you text and you describe an image that match that text in details use gelbooru  tags in your description also describe the high quality of the image, answer with one response only \n"
          }
        ]
      }
    },
    "output": [
      "OPENAI_CHAT_MESSAGES"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "OPENAI_CHAT_MESSAGES"
    ],
    "name": "Chat_Message _O",
    "display_name": "Chat_Message _O",
    "description": "",
    "category": "O/OpenAI/Advanced/ChatGPT",
    "output_node": false
  },
  "combine_chat_messages _O": {
    "input": {
      "required": {
        "message1": [
          "OPENAI_CHAT_MESSAGES"
        ],
        "message2": [
          "OPENAI_CHAT_MESSAGES"
        ]
      }
    },
    "output": [
      "OPENAI_CHAT_MESSAGES"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "OPENAI_CHAT_MESSAGES"
    ],
    "name": "combine_chat_messages _O",
    "display_name": "combine_chat_messages _O",
    "description": "",
    "category": "O/OpenAI/Advanced/ChatGPT",
    "output_node": false
  },
  "Chat completion _O": {
    "input": {
      "required": {
        "openai": [
          "OPENAI"
        ],
        "model": [
          [],
          {
            "default": "gpt-3.5-turbo"
          }
        ],
        "messages": [
          "OPENAI_CHAT_MESSAGES"
        ]
      },
      "optional": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "STRING",
      "OPENAI_CHAT_COMPLETION"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "STRING",
      "OPENAI_CHAT_COMPLETION"
    ],
    "name": "Chat completion _O",
    "display_name": "Chat completion _O",
    "description": "",
    "category": "O/OpenAI/Advanced/ChatGPT",
    "output_node": true
  },
  "create image _O": {
    "input": {
      "required": {
        "openai": [
          "OPENAI"
        ],
        "prompt": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "number": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ],
        "size": [
          [
            "256x256",
            "512x512",
            "1024x1024"
          ],
          {
            "default": "256x256"
          }
        ]
      },
      "optional": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "create image _O",
    "display_name": "create image _O",
    "description": "",
    "category": "O/OpenAI/Advanced/Image",
    "output_node": true
  },
  "variation_image _O": {
    "input": {
      "required": {
        "openai": [
          "OPENAI"
        ],
        "image": [
          "IMAGE"
        ],
        "number": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ],
        "size": [
          [
            "256x256",
            "512x512",
            "1024x1024"
          ],
          {
            "default": "256x256"
          }
        ]
      },
      "optional": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "variation_image _O",
    "display_name": "variation_image _O",
    "description": "",
    "category": "O/OpenAI/Advanced/Image",
    "output_node": true
  },
  "LatentUpscaleFactor _O": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "WidthFactor": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0.0,
            "max": 10.0,
            "step": 0.28125
          }
        ],
        "HeightFactor": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0.0,
            "max": 10.0,
            "step": 0.28125
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentUpscaleFactor _O",
    "display_name": "LatentUpscaleFactor _O",
    "description": "",
    "category": "O/latent",
    "output_node": false
  },
  "LatentUpscaleFactorSimple _O": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "factor": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0.0,
            "max": 10.0,
            "step": 0.28125
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentUpscaleFactorSimple _O",
    "display_name": "LatentUpscaleFactorSimple _O",
    "description": "",
    "category": "O/latent",
    "output_node": false
  },
  "selectLatentFromBatch _O": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "selectLatentFromBatch _O",
    "display_name": "selectLatentFromBatch _O",
    "description": "",
    "category": "O/latent",
    "output_node": false
  },
  "RandomNSP _O": {
    "input": {
      "required": {
        "terminology": [
          [
            "fantasy-creature",
            "gen-modifier",
            "adj-beauty",
            "noun-beauty",
            "noun-fantasy",
            "adj-horror",
            "noun-emote",
            "noun-horror",
            "adj-architecture",
            "nationality",
            "pop-location",
            "pop-culture",
            "site",
            "style",
            "hd",
            "aspect-ratio",
            "3d-terms",
            "color-palette",
            "camera",
            "camera-manu",
            "f-stop",
            "iso-stop",
            "focal-length",
            "photo-term",
            "adj-general",
            "noun-general",
            "color",
            "artist",
            "identity",
            "identity-adult",
            "identity-young",
            "punk",
            "hair",
            "bodyshape",
            "skin-color",
            "eyecolor",
            "fantasy-setting",
            "details",
            "portrait-type",
            "occupation",
            "celeb",
            "neg-weight",
            "landscape-type",
            "animals",
            "gender",
            "gender-ext",
            "movement",
            "body-heavy",
            "body-light",
            "body-fit",
            "body-poor",
            "body-shape",
            "body-short",
            "body-tall",
            "quantity",
            "scenario-desc",
            "games",
            "foods",
            "rpg-Item",
            "trippy",
            "cosmic-star",
            "cosmic-nebula",
            "cosmic-galaxy",
            "cosmic-terms",
            "flower",
            "dinosaur",
            "natl-park",
            "fruit",
            "tree",
            "wh-site",
            "forest-type",
            "water",
            "fish",
            "artist-botanical",
            "artist-surreal",
            "bird",
            "movie",
            "movie-director",
            "comic",
            "penciller",
            "album-cover",
            "band"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "RandomNSP _O",
    "display_name": "RandomNSP _O",
    "description": "",
    "category": "O/text/NSP",
    "output_node": false
  },
  "ConcatRandomNSP_O": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false,
            "defaultBehavior": "input"
          }
        ],
        "terminology": [
          [
            "fantasy-creature",
            "gen-modifier",
            "adj-beauty",
            "noun-beauty",
            "noun-fantasy",
            "adj-horror",
            "noun-emote",
            "noun-horror",
            "adj-architecture",
            "nationality",
            "pop-location",
            "pop-culture",
            "site",
            "style",
            "hd",
            "aspect-ratio",
            "3d-terms",
            "color-palette",
            "camera",
            "camera-manu",
            "f-stop",
            "iso-stop",
            "focal-length",
            "photo-term",
            "adj-general",
            "noun-general",
            "color",
            "artist",
            "identity",
            "identity-adult",
            "identity-young",
            "punk",
            "hair",
            "bodyshape",
            "skin-color",
            "eyecolor",
            "fantasy-setting",
            "details",
            "portrait-type",
            "occupation",
            "celeb",
            "neg-weight",
            "landscape-type",
            "animals",
            "gender",
            "gender-ext",
            "movement",
            "body-heavy",
            "body-light",
            "body-fit",
            "body-poor",
            "body-shape",
            "body-short",
            "body-tall",
            "quantity",
            "scenario-desc",
            "games",
            "foods",
            "rpg-Item",
            "trippy",
            "cosmic-star",
            "cosmic-nebula",
            "cosmic-galaxy",
            "cosmic-terms",
            "flower",
            "dinosaur",
            "natl-park",
            "fruit",
            "tree",
            "wh-site",
            "forest-type",
            "water",
            "fish",
            "artist-botanical",
            "artist-surreal",
            "bird",
            "movie",
            "movie-director",
            "comic",
            "penciller",
            "album-cover",
            "band"
          ]
        ],
        "separator": [
          "STRING",
          {
            "multiline": false,
            "default": ","
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "ConcatRandomNSP_O",
    "display_name": "ConcatRandomNSP_O",
    "description": "",
    "category": "O/text/NSP",
    "output_node": false
  },
  "Concat Text _O": {
    "input": {
      "required": {
        "text1": [
          "STRING",
          {
            "multiline": true,
            "defaultBehavior": "input"
          }
        ],
        "text2": [
          "STRING",
          {
            "multiline": true,
            "defaultBehavior": "input"
          }
        ],
        "separator": [
          "STRING",
          {
            "multiline": false,
            "default": ","
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Concat Text _O",
    "display_name": "Concat Text _O",
    "description": "",
    "category": "O/text/operations",
    "output_node": false
  },
  "Trim Text _O": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false,
            "defaultBehavior": "input"
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Trim Text _O",
    "display_name": "Trim Text _O",
    "description": "",
    "category": "O/text/operations",
    "output_node": false
  },
  "Replace Text _O": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true,
            "defaultBehavior": "input"
          }
        ],
        "old": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "new": [
          "STRING",
          {
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Replace Text _O",
    "display_name": "Replace Text _O",
    "description": "",
    "category": "O/text/operations",
    "output_node": false
  },
  "saveTextToFile _O": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "default": "",
            "multiline": false,
            "defaultBehavior": "input"
          }
        ],
        "filename": [
          "STRING",
          {
            "default": "log.txt",
            "multiline": false
          }
        ]
      },
      "optional": {
        "append": [
          [
            "true",
            "false"
          ],
          {
            "default": true
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "saveTextToFile _O",
    "display_name": "saveTextToFile _O",
    "description": "",
    "category": "O/text",
    "output_node": true
  },
  "Text2Image _O": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "font": [
          [
            "COMICZ.TTF",
            "COMIC.TTF",
            "CALIBRI.TTF",
            "COMICI.TTF",
            "Alkatra.ttf"
          ],
          {
            "default": "COMICZ.TTF"
          }
        ],
        "size": [
          "INT",
          {
            "default": 36,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "font_R": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "font_G": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "font_B": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "font_A": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "background_R": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "background_G": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "background_B": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "background_A": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 128,
            "min": 0,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 128,
            "min": 0,
            "step": 1
          }
        ],
        "expand": [
          [
            "true",
            "false"
          ],
          {
            "default": "true"
          }
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": -100,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": -100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "Text2Image _O",
    "display_name": "Text2Image _O",
    "description": "",
    "category": "O/text",
    "output_node": false
  },
  "ImageScaleFactor _O": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "WidthFactor": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0.0,
            "max": 10.0,
            "step": 0.28125
          }
        ],
        "HeightFactor": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0.0,
            "max": 10.0,
            "step": 0.28125
          }
        ],
        "MulOf46": [
          [
            "enabled",
            "disabled"
          ],
          {
            "default": "enabled"
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageScaleFactor _O",
    "display_name": "ImageScaleFactor _O",
    "description": "",
    "category": "O/image",
    "output_node": false
  },
  "ImageScaleFactorSimple _O": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "Factor": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0.0,
            "max": 10.0,
            "step": 0.28125
          }
        ],
        "MulOf46": [
          [
            "enabled",
            "disabled"
          ],
          {
            "default": "enabled"
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageScaleFactorSimple _O",
    "display_name": "ImageScaleFactorSimple _O",
    "description": "",
    "category": "O/image",
    "output_node": false
  },
  "Equation1param _O": {
    "input": {
      "required": {
        "x": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 18446744073709551615,
            "defaultBehavior": "input"
          }
        ],
        "equation": [
          "STRING",
          {
            "multiline": true,
            "default": "x*1"
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "int"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "FLOAT",
      "int"
    ],
    "name": "Equation1param _O",
    "display_name": "Equation1param _O",
    "description": "",
    "category": "O/numbers",
    "output_node": false
  },
  "Equation2params _O": {
    "input": {
      "required": {
        "x": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 18446744073709551615,
            "defaultBehavior": "input"
          }
        ],
        "y": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 18446744073709551615,
            "defaultBehavior": "input"
          }
        ],
        "equation": [
          "STRING",
          {
            "multiline": true,
            "default": "x+y"
          }
        ]
      },
      "optional": {
        "equation_2": [
          "STRING",
          {
            "multiline": true,
            "default": "x+y"
          }
        ]
      }
    },
    "output": [
      "FLOAT",
      "INT",
      "FLOAT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "FLOAT",
      "INT",
      "FLOAT",
      "INT"
    ],
    "name": "Equation2params _O",
    "display_name": "Equation2params _O",
    "description": "",
    "category": "O/numbers",
    "output_node": false
  },
  "floatToInt _O": {
    "input": {
      "required": {
        "float": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 18446744073709551615,
            "defaultBehavior": "input"
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INT"
    ],
    "name": "floatToInt _O",
    "display_name": "floatToInt _O",
    "description": "",
    "category": "O/numbers",
    "output_node": false
  },
  "intToFloat _O": {
    "input": {
      "required": {
        "int": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615,
            "defaultBehavior": "input"
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "intToFloat _O",
    "display_name": "intToFloat _O",
    "description": "",
    "category": "O/numbers",
    "output_node": false
  },
  "floatToText _O": {
    "input": {
      "required": {
        "float": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 18446744073709551615,
            "defaultBehavior": "input"
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "floatToText _O",
    "display_name": "floatToText _O",
    "description": "",
    "category": "O/numbers",
    "output_node": false
  },
  "GetImage_(Width&Height) _O": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "INT",
      "INT"
    ],
    "name": "GetImage_(Width&Height) _O",
    "display_name": "GetImage_(Width&Height) _O",
    "description": "",
    "category": "O/numbers",
    "output_node": false
  },
  "GetLatent_(Width&Height) _O": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ]
      }
    },
    "output": [
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "INT",
      "INT"
    ],
    "name": "GetLatent_(Width&Height) _O",
    "display_name": "GetLatent_(Width&Height) _O",
    "description": "",
    "category": "O/numbers",
    "output_node": false
  },
  "debug messages_O": {
    "input": {
      "required": {
        "messages": [
          "OPENAI_CHAT_MESSAGES"
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "debug messages_O",
    "display_name": "debug messages_O",
    "description": "",
    "category": "O/debug/OpenAI/Advanced/ChatGPT",
    "output_node": true
  },
  "debug Completeion _O": {
    "input": {
      "required": {
        "completion": [
          "OPENAI_CHAT_COMPLETION"
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "debug Completeion _O",
    "display_name": "debug Completeion _O",
    "description": "",
    "category": "O/debug/OpenAI/Advanced/ChatGPT",
    "output_node": true
  },
  "Debug Text _O": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false,
            "defaultBehavior": "input"
          }
        ],
        "prefix": [
          "STRING",
          {
            "default": "debug",
            "multiline": false
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Debug Text _O",
    "display_name": "Debug Text _O",
    "description": "",
    "category": "O/debug/text",
    "output_node": true
  },
  "Debug Text route _O": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false,
            "defaultBehavior": "input"
          }
        ],
        "prefix": [
          "STRING",
          {
            "default": "debug",
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Debug Text route _O",
    "display_name": "Debug Text route _O",
    "description": "",
    "category": "O/debug/text",
    "output_node": false
  },
  "Note _O": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Note _O",
    "display_name": "Note _O",
    "description": "",
    "category": "O/utils",
    "output_node": true
  },
  "Text _O": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "Text _O",
    "display_name": "Text _O",
    "description": "",
    "category": "O/utils",
    "output_node": false
  },
  "seed _O": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INT"
    ],
    "name": "seed _O",
    "display_name": "seed _O",
    "description": "",
    "category": "O/utils",
    "output_node": false
  },
  "int _O": {
    "input": {
      "required": {
        "int": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INT"
    ],
    "name": "int _O",
    "display_name": "int _O",
    "description": "",
    "category": "O/utils",
    "output_node": false
  },
  "float _O": {
    "input": {
      "required": {
        "float": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "float _O",
    "display_name": "float _O",
    "description": "",
    "category": "O/utils",
    "output_node": false
  },
  "ChatGPT _O": {
    "input": {
      "required": {
        "api_key_file": [
          "STRING",
          {
            "file": true,
            "default": "api_key.txt"
          }
        ]
      }
    },
    "output": [
      "OPENAI"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "OPENAI"
    ],
    "name": "ChatGPT _O",
    "display_name": "ChatGPT _O",
    "description": "",
    "category": "O/OpenAI/Advanced",
    "output_node": false
  },
  "Chat_Message_fromString _O": {
    "input": {
      "required": {
        "role": [
          [
            "user",
            "assistant",
            "system"
          ],
          {
            "default": "user"
          }
        ],
        "content": [
          "STR"
        ]
      }
    },
    "output": [
      "OPENAI_CHAT_MESSAGES"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "OPENAI_CHAT_MESSAGES"
    ],
    "name": "Chat_Message_fromString _O",
    "display_name": "Chat_Message_fromString _O",
    "description": "",
    "category": "O/deprecated/OpenAI/Advanced/ChatGPT",
    "output_node": false
  },
  "compine_chat_messages _O": {
    "input": {
      "required": {
        "message1": [
          "OPENAI_CHAT_MESSAGES"
        ],
        "message2": [
          "OPENAI_CHAT_MESSAGES"
        ]
      }
    },
    "output": [
      "OPENAI_CHAT_MESSAGES"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "OPENAI_CHAT_MESSAGES"
    ],
    "name": "compine_chat_messages _O",
    "display_name": "compine_chat_messages _O",
    "description": "",
    "category": "O/deprecated/OpenAI/Advanced/ChatGPT",
    "output_node": false
  },
  "Chat_Completion _O": {
    "input": {
      "required": {
        "openai": [
          "OPENAI"
        ],
        "model": [
          "STRING",
          {
            "multiline": false,
            "default": "gpt-3.5-turbo"
          }
        ],
        "messages": [
          "OPENAI_CHAT_MESSAGES"
        ]
      }
    },
    "output": [
      "STR",
      "OPENAI_CHAT_COMPLETION"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "STR",
      "OPENAI_CHAT_COMPLETION"
    ],
    "name": "Chat_Completion _O",
    "display_name": "Chat_Completion _O",
    "description": "",
    "category": "O/deprecated/OpenAI/Advanced/ChatGPT",
    "output_node": true
  },
  "create_image _O": {
    "input": {
      "required": {
        "openai": [
          "OPENAI"
        ],
        "prompt": [
          "STR"
        ],
        "number": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ],
        "size": [
          [
            "256x256",
            "512x512",
            "1024x1024"
          ],
          {
            "default": "256x256"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "create_image _O",
    "display_name": "create_image _O",
    "description": "",
    "category": "O/deprecated/OpenAI/Advanced/Image",
    "output_node": true
  },
  "String _O": {
    "input": {
      "required": {
        "string": [
          "STRING",
          {
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STR"
    ],
    "name": "String _O",
    "display_name": "String _O",
    "description": "",
    "category": "O/deprecated/string",
    "output_node": false
  },
  "Debug String _O": {
    "input": {
      "required": {
        "string": [
          "STR"
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "Debug String _O",
    "display_name": "Debug String _O",
    "description": "",
    "category": "O/deprecated/string",
    "output_node": true
  },
  "concat Strings _O": {
    "input": {
      "required": {
        "string1": [
          "STR"
        ],
        "string2": [
          "STR"
        ]
      }
    },
    "output": [
      "STR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STR"
    ],
    "name": "concat Strings _O",
    "display_name": "concat Strings _O",
    "description": "",
    "category": "O/deprecated/string/operations",
    "output_node": false
  },
  "trim String _O": {
    "input": {
      "required": {
        "string": [
          "STR"
        ]
      }
    },
    "output": [
      "STR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STR"
    ],
    "name": "trim String _O",
    "display_name": "trim String _O",
    "description": "",
    "category": "O/deprecated/string/operations",
    "output_node": false
  },
  "replace String _O": {
    "input": {
      "required": {
        "string": [
          "STR"
        ],
        "old": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "new": [
          "STRING",
          {
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "STR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STR"
    ],
    "name": "replace String _O",
    "display_name": "replace String _O",
    "description": "",
    "category": "O/deprecated/string/operations",
    "output_node": false
  },
  "replace String advanced _O": {
    "input": {
      "required": {
        "string": [
          "STR"
        ],
        "old": [
          "STR"
        ],
        "new": [
          "STR"
        ]
      }
    },
    "output": [
      "STR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STR"
    ],
    "name": "replace String advanced _O",
    "display_name": "replace String advanced _O",
    "description": "",
    "category": "O/deprecated/string/operations",
    "output_node": false
  },
  "string2Image _O": {
    "input": {
      "required": {
        "string": [
          "STR"
        ],
        "font": [
          "STRING",
          {
            "default": "CALIBRI.TTF",
            "multiline": false
          }
        ],
        "size": [
          "INT",
          {
            "default": 36,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "font_R": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "font_G": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "font_B": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "background_R": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "background_G": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "background_B": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "string2Image _O",
    "display_name": "string2Image _O",
    "description": "",
    "category": "O/deprecated/string",
    "output_node": false
  },
  "CLIPStringEncode _O": {
    "input": {
      "required": {
        "string": [
          "STR"
        ],
        "clip": [
          "CLIP"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "CLIPStringEncode _O",
    "display_name": "CLIPStringEncode _O",
    "description": "",
    "category": "O/deprecated/string",
    "output_node": false
  },
  "LatentUpscaleMultiply": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "WidthMul": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0.0,
            "max": 10.0,
            "step": 0.1
          }
        ],
        "HeightMul": [
          "FLOAT",
          {
            "default": 1.25,
            "min": 0.0,
            "max": 10.0,
            "step": 0.1
          }
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentUpscaleMultiply",
    "display_name": "LatentUpscaleMultiply",
    "description": "",
    "category": "O/deprecated/latent",
    "output_node": false
  },
  "SAMLoader": {
    "input": {
      "required": {
        "model_name": [
          [
            "sam_vit_b_01ec64.pth"
          ]
        ],
        "device_mode": [
          [
            "AUTO",
            "Prefer GPU",
            "CPU"
          ]
        ]
      }
    },
    "output": [
      "SAM_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAM_MODEL"
    ],
    "name": "SAMLoader",
    "display_name": "SAMLoader",
    "description": "",
    "category": "ImpactPack",
    "output_node": false
  },
  "CLIPSegDetectorProvider": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "blur": [
          "FLOAT",
          {
            "min": 0,
            "max": 15,
            "step": 0.1,
            "default": 7
          }
        ],
        "threshold": [
          "FLOAT",
          {
            "min": 0,
            "max": 1,
            "step": 0.05,
            "default": 0.4
          }
        ],
        "dilation_factor": [
          "INT",
          {
            "min": 0,
            "max": 10,
            "step": 1,
            "default": 4
          }
        ]
      }
    },
    "output": [
      "BBOX_DETECTOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "BBOX_DETECTOR"
    ],
    "name": "CLIPSegDetectorProvider",
    "display_name": "CLIPSegDetectorProvider",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ONNXDetectorProvider": {
    "input": {
      "required": {
        "model_name": [
          []
        ]
      }
    },
    "output": [
      "BBOX_DETECTOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "BBOX_DETECTOR"
    ],
    "name": "ONNXDetectorProvider",
    "display_name": "ONNXDetectorProvider",
    "description": "",
    "category": "ImpactPack",
    "output_node": false
  },
  "BitwiseAndMaskForEach": {
    "input": {
      "required": {
        "base_segs": [
          "SEGS"
        ],
        "mask_segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "BitwiseAndMaskForEach",
    "display_name": "Bitwise(SEGS & SEGS)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "SubtractMaskForEach": {
    "input": {
      "required": {
        "base_segs": [
          "SEGS"
        ],
        "mask_segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "SubtractMaskForEach",
    "display_name": "Bitwise(SEGS - SEGS)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "DetailerForEach": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 256,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 768,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "DetailerForEach",
    "display_name": "Detailer (SEGS)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "DetailerForEachDebug": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 256,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 768,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      true,
      true,
      true,
      true
    ],
    "output_name": [
      "image",
      "cropped",
      "cropped_refined",
      "cropped_refined_alpha",
      "cnet_images"
    ],
    "name": "DetailerForEachDebug",
    "display_name": "DetailerDebug (SEGS)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "DetailerForEachPipe": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 256,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 768,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 1.0
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "detailer_hook": [
          "DETAILER_HOOK"
        ],
        "refiner_basic_pipe_opt": [
          "BASIC_PIPE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "SEGS",
      "BASIC_PIPE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false,
      false,
      true
    ],
    "output_name": [
      "image",
      "segs",
      "basic_pipe",
      "cnet_images"
    ],
    "name": "DetailerForEachPipe",
    "display_name": "Detailer (SEGS/pipe)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "DetailerForEachDebugPipe": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 256,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 768,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 1.0
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "detailer_hook": [
          "DETAILER_HOOK"
        ],
        "refiner_basic_pipe_opt": [
          "BASIC_PIPE"
        ]
      }
    },
    "output": [
      "IMAGE",
      "SEGS",
      "BASIC_PIPE",
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false,
      false,
      true,
      true,
      true,
      true
    ],
    "output_name": [
      "image",
      "segs",
      "basic_pipe",
      "cropped",
      "cropped_refined",
      "cropped_refined_alpha",
      "cnet_images"
    ],
    "name": "DetailerForEachDebugPipe",
    "display_name": "DetailerDebug (SEGS/pipe)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "SAMDetectorCombined": {
    "input": {
      "required": {
        "sam_model": [
          "SAM_MODEL"
        ],
        "segs": [
          "SEGS"
        ],
        "image": [
          "IMAGE"
        ],
        "detection_hint": [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none"
          ]
        ],
        "dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.93,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "mask_hint_use_negative": [
          [
            "False",
            "Small",
            "Outter"
          ]
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "SAMDetectorCombined",
    "display_name": "SAMDetector (combined)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "SAMDetectorSegmented": {
    "input": {
      "required": {
        "sam_model": [
          "SAM_MODEL"
        ],
        "segs": [
          "SEGS"
        ],
        "image": [
          "IMAGE"
        ],
        "detection_hint": [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none"
          ]
        ],
        "dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.93,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "mask_hint_use_negative": [
          [
            "False",
            "Small",
            "Outter"
          ]
        ]
      }
    },
    "output": [
      "MASK",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "combined_mask",
      "batch_masks"
    ],
    "name": "SAMDetectorSegmented",
    "display_name": "SAMDetector (segmented)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "FaceDetailer": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 256,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 768,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "bbox_crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 10,
            "step": 0.1
          }
        ],
        "sam_detection_hint": [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none"
          ]
        ],
        "sam_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sam_threshold": [
          "FLOAT",
          {
            "default": 0.93,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "sam_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "sam_mask_hint_use_negative": [
          [
            "False",
            "Small",
            "Outter"
          ]
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "sam_model_opt": [
          "SAM_MODEL"
        ],
        "segm_detector_opt": [
          "SEGM_DETECTOR"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "MASK",
      "DETAILER_PIPE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      true,
      true,
      false,
      false,
      true
    ],
    "output_name": [
      "image",
      "cropped_refined",
      "cropped_enhanced_alpha",
      "mask",
      "detailer_pipe",
      "cnet_images"
    ],
    "name": "FaceDetailer",
    "display_name": "FaceDetailer",
    "description": "",
    "category": "ImpactPack/Simple",
    "output_node": false
  },
  "FaceDetailerPipe": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "detailer_pipe": [
          "DETAILER_PIPE"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 256,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 768,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "bbox_crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 10,
            "step": 0.1
          }
        ],
        "sam_detection_hint": [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none"
          ]
        ],
        "sam_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sam_threshold": [
          "FLOAT",
          {
            "default": 0.93,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "sam_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "sam_mask_hint_use_negative": [
          [
            "False",
            "Small",
            "Outter"
          ]
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 1.0
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "MASK",
      "DETAILER_PIPE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      true,
      true,
      false,
      false,
      true
    ],
    "output_name": [
      "image",
      "cropped_refined",
      "cropped_enhanced_alpha",
      "mask",
      "detailer_pipe",
      "cnet_images"
    ],
    "name": "FaceDetailerPipe",
    "display_name": "FaceDetailer (pipe)",
    "description": "",
    "category": "ImpactPack/Simple",
    "output_node": false
  },
  "MaskDetailerPipe": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 256,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "mask bbox",
            "label_off": "crop region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 768,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "mask_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "masked only",
            "label_off": "whole"
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 10,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 1.0
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 100
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "refiner_basic_pipe_opt": [
          "BASIC_PIPE"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "BASIC_PIPE",
      "BASIC_PIPE"
    ],
    "output_is_list": [
      false,
      true,
      true,
      false,
      false
    ],
    "output_name": [
      "image",
      "cropped_refined",
      "cropped_enhanced_alpha",
      "basic_pipe",
      "refiner_basic_pipe_opt"
    ],
    "name": "MaskDetailerPipe",
    "display_name": "MaskDetailer (Pipe)",
    "description": "",
    "category": "ImpactPack/__for_test",
    "output_node": false
  },
  "ToDetailerPipe": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ]
      },
      "optional": {
        "sam_model_opt": [
          "SAM_MODEL"
        ],
        "segm_detector_opt": [
          "SEGM_DETECTOR"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "detailer_pipe"
    ],
    "name": "ToDetailerPipe",
    "display_name": "ToDetailerPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "ToDetailerPipeSDXL": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "refiner_model": [
          "MODEL"
        ],
        "refiner_clip": [
          "CLIP"
        ],
        "refiner_positive": [
          "CONDITIONING"
        ],
        "refiner_negative": [
          "CONDITIONING"
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ]
      },
      "optional": {
        "sam_model_opt": [
          "SAM_MODEL"
        ],
        "segm_detector_opt": [
          "SEGM_DETECTOR"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "detailer_pipe"
    ],
    "name": "ToDetailerPipeSDXL",
    "display_name": "ToDetailerPipeSDXL",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "FromDetailerPipe": {
    "input": {
      "required": {
        "detailer_pipe": [
          "DETAILER_PIPE"
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "BBOX_DETECTOR",
      "SAM_MODEL",
      "SEGM_DETECTOR",
      "DETAILER_HOOK"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "model",
      "clip",
      "vae",
      "positive",
      "negative",
      "bbox_detector",
      "sam_model_opt",
      "segm_detector_opt",
      "detailer_hook"
    ],
    "name": "FromDetailerPipe",
    "display_name": "FromDetailerPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "FromDetailerPipe_v2": {
    "input": {
      "required": {
        "detailer_pipe": [
          "DETAILER_PIPE"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "BBOX_DETECTOR",
      "SAM_MODEL",
      "SEGM_DETECTOR",
      "DETAILER_HOOK"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "detailer_pipe",
      "model",
      "clip",
      "vae",
      "positive",
      "negative",
      "bbox_detector",
      "sam_model_opt",
      "segm_detector_opt",
      "detailer_hook"
    ],
    "name": "FromDetailerPipe_v2",
    "display_name": "FromDetailerPipe_v2",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "FromDetailerPipeSDXL": {
    "input": {
      "required": {
        "detailer_pipe": [
          "DETAILER_PIPE"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "BBOX_DETECTOR",
      "SAM_MODEL",
      "SEGM_DETECTOR",
      "DETAILER_HOOK",
      "MODEL",
      "CLIP",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "detailer_pipe",
      "model",
      "clip",
      "vae",
      "positive",
      "negative",
      "bbox_detector",
      "sam_model_opt",
      "segm_detector_opt",
      "detailer_hook",
      "refiner_model",
      "refiner_clip",
      "refiner_positive",
      "refiner_negative"
    ],
    "name": "FromDetailerPipeSDXL",
    "display_name": "FromDetailer (SDXL/pipe)",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "ToBasicPipe": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "BASIC_PIPE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "basic_pipe"
    ],
    "name": "ToBasicPipe",
    "display_name": "ToBasicPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "FromBasicPipe": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "model",
      "clip",
      "vae",
      "positive",
      "negative"
    ],
    "name": "FromBasicPipe",
    "display_name": "FromBasicPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "FromBasicPipe_v2": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ]
      }
    },
    "output": [
      "BASIC_PIPE",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "basic_pipe",
      "model",
      "clip",
      "vae",
      "positive",
      "negative"
    ],
    "name": "FromBasicPipe_v2",
    "display_name": "FromBasicPipe_v2",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "BasicPipeToDetailerPipe": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ]
      },
      "optional": {
        "sam_model_opt": [
          "SAM_MODEL"
        ],
        "segm_detector_opt": [
          "SEGM_DETECTOR"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "detailer_pipe"
    ],
    "name": "BasicPipeToDetailerPipe",
    "display_name": "BasicPipe -> DetailerPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "BasicPipeToDetailerPipeSDXL": {
    "input": {
      "required": {
        "base_basic_pipe": [
          "BASIC_PIPE"
        ],
        "refiner_basic_pipe": [
          "BASIC_PIPE"
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ]
      },
      "optional": {
        "sam_model_opt": [
          "SAM_MODEL"
        ],
        "segm_detector_opt": [
          "SEGM_DETECTOR"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "detailer_pipe"
    ],
    "name": "BasicPipeToDetailerPipeSDXL",
    "display_name": "BasicPipe -> DetailerPipe (SDXL)",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "DetailerPipeToBasicPipe": {
    "input": {
      "required": {
        "detailer_pipe": [
          "DETAILER_PIPE"
        ]
      }
    },
    "output": [
      "BASIC_PIPE",
      "BASIC_PIPE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "base_basic_pipe",
      "refiner_basic_pipe"
    ],
    "name": "DetailerPipeToBasicPipe",
    "display_name": "DetailerPipe -> BasicPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "EditBasicPipe": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ]
      },
      "optional": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "BASIC_PIPE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "basic_pipe"
    ],
    "name": "EditBasicPipe",
    "display_name": "Edit BasicPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "EditDetailerPipe": {
    "input": {
      "required": {
        "detailer_pipe": [
          "DETAILER_PIPE"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ]
      },
      "optional": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "sam_model": [
          "SAM_MODEL"
        ],
        "segm_detector": [
          "SEGM_DETECTOR"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "detailer_pipe"
    ],
    "name": "EditDetailerPipe",
    "display_name": "Edit DetailerPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "EditDetailerPipeSDXL": {
    "input": {
      "required": {
        "detailer_pipe": [
          "DETAILER_PIPE"
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ]
      },
      "optional": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "vae": [
          "VAE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "refiner_model": [
          "MODEL"
        ],
        "refiner_clip": [
          "CLIP"
        ],
        "refiner_positive": [
          "CONDITIONING"
        ],
        "refiner_negative": [
          "CONDITIONING"
        ],
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "sam_model": [
          "SAM_MODEL"
        ],
        "segm_detector": [
          "SEGM_DETECTOR"
        ],
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "DETAILER_PIPE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "detailer_pipe"
    ],
    "name": "EditDetailerPipeSDXL",
    "display_name": "Edit DetailerPipe (SDXL)",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "LatentPixelScale": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "scale_factor": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 0.1,
            "max": 10000,
            "step": 0.1
          }
        ],
        "vae": [
          "VAE"
        ],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ]
      },
      "optional": {
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ]
      }
    },
    "output": [
      "LATENT",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "LATENT",
      "IMAGE"
    ],
    "name": "LatentPixelScale",
    "display_name": "Latent Scale (on Pixel Space)",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "PixelKSampleUpscalerProvider": {
    "input": {
      "required": {
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "model": [
          "MODEL"
        ],
        "vae": [
          "VAE"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      },
      "optional": {
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ],
        "pk_hook_opt": [
          "PK_HOOK"
        ]
      }
    },
    "output": [
      "UPSCALER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "UPSCALER"
    ],
    "name": "PixelKSampleUpscalerProvider",
    "display_name": "PixelKSampleUpscalerProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "PixelKSampleUpscalerProviderPipe": {
    "input": {
      "required": {
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      },
      "optional": {
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ],
        "pk_hook_opt": [
          "PK_HOOK"
        ]
      }
    },
    "output": [
      "UPSCALER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "UPSCALER"
    ],
    "name": "PixelKSampleUpscalerProviderPipe",
    "display_name": "PixelKSampleUpscalerProviderPipe",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "IterativeLatentUpscale": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 1,
            "max": 10000,
            "step": 0.1
          }
        ],
        "steps": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 10000,
            "step": 1
          }
        ],
        "temp_prefix": [
          "STRING",
          {
            "default": ""
          }
        ],
        "upscaler": [
          "UPSCALER"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "LATENT",
      "VAE"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "latent",
      "vae"
    ],
    "name": "IterativeLatentUpscale",
    "display_name": "Iterative Upscale (Latent)",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "IterativeImageUpscale": {
    "input": {
      "required": {
        "pixels": [
          "IMAGE"
        ],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 1,
            "max": 10000,
            "step": 0.1
          }
        ],
        "steps": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 10000,
            "step": 1
          }
        ],
        "temp_prefix": [
          "STRING",
          {
            "default": ""
          }
        ],
        "upscaler": [
          "UPSCALER"
        ],
        "vae": [
          "VAE"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "image"
    ],
    "name": "IterativeImageUpscale",
    "display_name": "Iterative Upscale (Image)",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "PixelTiledKSampleUpscalerProvider": {
    "input": {
      "required": {
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "model": [
          "MODEL"
        ],
        "vae": [
          "VAE"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "tile_width": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 8192,
            "step": 64
          }
        ],
        "tile_height": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 8192,
            "step": 64
          }
        ],
        "tiling_strategy": [
          [
            "random",
            "padded",
            "simple"
          ]
        ]
      },
      "optional": {
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ],
        "pk_hook_opt": [
          "PK_HOOK"
        ]
      }
    },
    "output": [
      "UPSCALER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "UPSCALER"
    ],
    "name": "PixelTiledKSampleUpscalerProvider",
    "display_name": "PixelTiledKSampleUpscalerProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "PixelTiledKSampleUpscalerProviderPipe": {
    "input": {
      "required": {
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "tile_width": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 8192,
            "step": 64
          }
        ],
        "tile_height": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 8192,
            "step": 64
          }
        ],
        "tiling_strategy": [
          [
            "random",
            "padded",
            "simple"
          ]
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ]
      },
      "optional": {
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ],
        "pk_hook_opt": [
          "PK_HOOK"
        ]
      }
    },
    "output": [
      "UPSCALER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "UPSCALER"
    ],
    "name": "PixelTiledKSampleUpscalerProviderPipe",
    "display_name": "PixelTiledKSampleUpscalerProviderPipe",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "TwoSamplersForMaskUpscalerProvider": {
    "input": {
      "required": {
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "full_sample_schedule": [
          [
            "none",
            "interleave1",
            "interleave2",
            "interleave3",
            "last1",
            "last2",
            "interleave1+last1",
            "interleave2+last1",
            "interleave3+last1"
          ]
        ],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "base_sampler": [
          "KSAMPLER"
        ],
        "mask_sampler": [
          "KSAMPLER"
        ],
        "mask": [
          "MASK"
        ],
        "vae": [
          "VAE"
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      },
      "optional": {
        "full_sampler_opt": [
          "KSAMPLER"
        ],
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ],
        "pk_hook_base_opt": [
          "PK_HOOK"
        ],
        "pk_hook_mask_opt": [
          "PK_HOOK"
        ],
        "pk_hook_full_opt": [
          "PK_HOOK"
        ]
      }
    },
    "output": [
      "UPSCALER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "UPSCALER"
    ],
    "name": "TwoSamplersForMaskUpscalerProvider",
    "display_name": "TwoSamplersForMask Upscaler Provider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "TwoSamplersForMaskUpscalerProviderPipe": {
    "input": {
      "required": {
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area"
          ]
        ],
        "full_sample_schedule": [
          [
            "none",
            "interleave1",
            "interleave2",
            "interleave3",
            "last1",
            "last2",
            "interleave1+last1",
            "interleave2+last1",
            "interleave3+last1"
          ]
        ],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "base_sampler": [
          "KSAMPLER"
        ],
        "mask_sampler": [
          "KSAMPLER"
        ],
        "mask": [
          "MASK"
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      },
      "optional": {
        "full_sampler_opt": [
          "KSAMPLER"
        ],
        "upscale_model_opt": [
          "UPSCALE_MODEL"
        ],
        "pk_hook_base_opt": [
          "PK_HOOK"
        ],
        "pk_hook_mask_opt": [
          "PK_HOOK"
        ],
        "pk_hook_full_opt": [
          "PK_HOOK"
        ]
      }
    },
    "output": [
      "UPSCALER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "UPSCALER"
    ],
    "name": "TwoSamplersForMaskUpscalerProviderPipe",
    "display_name": "TwoSamplersForMask Upscaler Provider (pipe)",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "PixelKSampleHookCombine": {
    "input": {
      "required": {
        "hook1": [
          "PK_HOOK"
        ],
        "hook2": [
          "PK_HOOK"
        ]
      }
    },
    "output": [
      "PK_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "PK_HOOK"
    ],
    "name": "PixelKSampleHookCombine",
    "display_name": "PixelKSampleHookCombine",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "DetailerHookCombine": {
    "input": {
      "required": {
        "hook1": [
          "DETAILER_HOOK"
        ],
        "hook2": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "DETAILER_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "DETAILER_HOOK"
    ],
    "name": "DetailerHookCombine",
    "display_name": "DetailerHookCombine",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "DenoiseScheduleHookProvider": {
    "input": {
      "required": {
        "schedule_for_iteration": [
          [
            "simple"
          ]
        ],
        "target_denoise": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "PK_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "PK_HOOK"
    ],
    "name": "DenoiseScheduleHookProvider",
    "display_name": "DenoiseScheduleHookProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "CfgScheduleHookProvider": {
    "input": {
      "required": {
        "schedule_for_iteration": [
          [
            "simple"
          ]
        ],
        "target_cfg": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 0.0,
            "max": 100.0
          }
        ]
      }
    },
    "output": [
      "PK_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "PK_HOOK"
    ],
    "name": "CfgScheduleHookProvider",
    "display_name": "CfgScheduleHookProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "NoiseInjectionHookProvider": {
    "input": {
      "required": {
        "schedule_for_iteration": [
          [
            "simple"
          ]
        ],
        "source": [
          [
            "CPU",
            "GPU"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "start_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 200.0,
            "step": 0.01
          }
        ],
        "end_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 200.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "PK_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "PK_HOOK"
    ],
    "name": "NoiseInjectionHookProvider",
    "display_name": "NoiseInjectionHookProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "UnsamplerHookProvider": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "steps": [
          "INT",
          {
            "default": 25,
            "min": 1,
            "max": 10000
          }
        ],
        "start_end_at_step": [
          "INT",
          {
            "default": 21,
            "min": 0,
            "max": 10000
          }
        ],
        "end_end_at_step": [
          "INT",
          {
            "default": 24,
            "min": 0,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "normalize": [
          [
            "disable",
            "enable"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "schedule_for_iteration": [
          [
            "simple"
          ]
        ]
      }
    },
    "output": [
      "PK_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "PK_HOOK"
    ],
    "name": "UnsamplerHookProvider",
    "display_name": "UnsamplerHookProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "NoiseInjectionDetailerHookProvider": {
    "input": {
      "required": {
        "schedule_for_cycle": [
          [
            "skip_start",
            "from_start"
          ]
        ],
        "source": [
          [
            "CPU",
            "GPU"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "start_strength": [
          "FLOAT",
          {
            "default": 2.0,
            "min": 0.0,
            "max": 200.0,
            "step": 0.01
          }
        ],
        "end_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 200.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "DETAILER_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "DETAILER_HOOK"
    ],
    "name": "NoiseInjectionDetailerHookProvider",
    "display_name": "NoiseInjectionDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "UnsamplerDetailerHookProvider": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "steps": [
          "INT",
          {
            "default": 25,
            "min": 1,
            "max": 10000
          }
        ],
        "start_end_at_step": [
          "INT",
          {
            "default": 21,
            "min": 0,
            "max": 10000
          }
        ],
        "end_end_at_step": [
          "INT",
          {
            "default": 24,
            "min": 0,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "normalize": [
          [
            "disable",
            "enable"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "schedule_for_cycle": [
          [
            "skip_start",
            "from_start"
          ]
        ]
      }
    },
    "output": [
      "DETAILER_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "DETAILER_HOOK"
    ],
    "name": "UnsamplerDetailerHookProvider",
    "display_name": "UnsamplerDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "CoreMLDetailerHookProvider": {
    "input": {
      "required": {
        "mode": [
          [
            "512x512",
            "768x768",
            "512x768",
            "768x512"
          ]
        ]
      }
    },
    "output": [
      "DETAILER_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "DETAILER_HOOK"
    ],
    "name": "CoreMLDetailerHookProvider",
    "display_name": "CoreMLDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "DenoiseSchedulerDetailerHookProvider": {
    "input": {
      "required": {
        "schedule_for_cycle": [
          [
            "simple"
          ]
        ],
        "target_denoise": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "DETAILER_HOOK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "DETAILER_HOOK"
    ],
    "name": "DenoiseSchedulerDetailerHookProvider",
    "display_name": "DenoiseSchedulerDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "BitwiseAndMask": {
    "input": {
      "required": {
        "mask1": [
          "MASK"
        ],
        "mask2": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "BitwiseAndMask",
    "display_name": "Bitwise(MASK & MASK)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "SubtractMask": {
    "input": {
      "required": {
        "mask1": [
          "MASK"
        ],
        "mask2": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "SubtractMask",
    "display_name": "Bitwise(MASK - MASK)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "AddMask": {
    "input": {
      "required": {
        "mask1": [
          "MASK"
        ],
        "mask2": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "AddMask",
    "display_name": "Bitwise(MASK + MASK)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "ImpactSegsAndMask": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactSegsAndMask",
    "display_name": "Bitwise(SEGS & MASK)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "ImpactSegsAndMaskForEach": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactSegsAndMaskForEach",
    "display_name": "Bitwise(SEGS & MASKS ForEach)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "EmptySegs": {
    "input": {
      "required": {}
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "EmptySegs",
    "display_name": "EmptySegs",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "MediaPipeFaceMeshToSEGS": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "bbox_fill": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "crop_min_size": [
          "INT",
          {
            "min": 10,
            "max": 8192,
            "step": 1,
            "default": 50
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 1
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "face": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "mouth": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "left_eyebrow": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "left_eye": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "left_pupil": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "right_eyebrow": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "right_eye": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "right_pupil": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "MediaPipeFaceMeshToSEGS",
    "display_name": "MediaPipe FaceMesh to SEGS",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "MaskToSEGS": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "combined": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "bbox_fill": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "contour_fill": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "MaskToSEGS",
    "display_name": "MASK to SEGS",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "MaskToSEGS_for_AnimateDiff": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "combined": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "bbox_fill": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "contour_fill": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "MaskToSEGS_for_AnimateDiff",
    "display_name": "MASK to SEGS for AnimateDiff",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "ToBinaryMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "threshold": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "ToBinaryMask",
    "display_name": "ToBinaryMask",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "MasksToMaskList": {
    "input": {
      "required": {
        "masks": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "MASK"
    ],
    "name": "MasksToMaskList",
    "display_name": "Masks to Mask List",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "MaskListToMaskBatch": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "MaskListToMaskBatch",
    "display_name": "Mask List to Masks",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "ImageListToImageBatch": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImageListToImageBatch",
    "display_name": "Image List to Image Batch",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "SetDefaultImageForSEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "image": [
          "IMAGE"
        ],
        "override": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "SetDefaultImageForSEGS",
    "display_name": "Set Default Image for SEGS",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "BboxDetectorSEGS": {
    "input": {
      "required": {
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "image": [
          "IMAGE"
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "labels": [
          "STRING",
          {
            "multiline": true,
            "default": "all",
            "placeholder": "List the types of segments to be allowed, separated by commas"
          }
        ]
      },
      "optional": {
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "BboxDetectorSEGS",
    "display_name": "BBOX Detector (SEGS)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "SegmDetectorSEGS": {
    "input": {
      "required": {
        "segm_detector": [
          "SEGM_DETECTOR"
        ],
        "image": [
          "IMAGE"
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "labels": [
          "STRING",
          {
            "multiline": true,
            "default": "all",
            "placeholder": "List the types of segments to be allowed, separated by commas"
          }
        ]
      },
      "optional": {
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "SegmDetectorSEGS",
    "display_name": "SEGM Detector (SEGS)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "ONNXDetectorSEGS": {
    "input": {
      "required": {
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "image": [
          "IMAGE"
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "labels": [
          "STRING",
          {
            "multiline": true,
            "default": "all",
            "placeholder": "List the types of segments to be allowed, separated by commas"
          }
        ]
      },
      "optional": {
        "detailer_hook": [
          "DETAILER_HOOK"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ONNXDetectorSEGS",
    "display_name": "ONNX Detector (SEGS/legacy) - use BBOXDetector",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "ImpactSimpleDetectorSEGS_for_AD": {
    "input": {
      "required": {
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "image_frames": [
          "IMAGE"
        ],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "sub_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "sub_dilation": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "sub_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "sam_model_opt": [
          "SAM_MODEL"
        ],
        "segm_detector_opt": [
          "SEGM_DETECTOR"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactSimpleDetectorSEGS_for_AD",
    "display_name": "Simple Detector for AnimateDiff (SEGS)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "ImpactSimpleDetectorSEGS": {
    "input": {
      "required": {
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "image": [
          "IMAGE"
        ],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "sub_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "sub_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sub_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "post_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sam_model_opt": [
          "SAM_MODEL"
        ],
        "segm_detector_opt": [
          "SEGM_DETECTOR"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactSimpleDetectorSEGS",
    "display_name": "Simple Detector (SEGS)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "ImpactSimpleDetectorSEGSPipe": {
    "input": {
      "required": {
        "detailer_pipe": [
          "DETAILER_PIPE"
        ],
        "image": [
          "IMAGE"
        ],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3.0,
            "min": 1.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "sub_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "sub_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sub_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "post_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactSimpleDetectorSEGSPipe",
    "display_name": "Simple Detector (SEGS/pipe)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "ImpactControlNetApplySEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "segs_preprocessor": [
          "SEGS_PREPROCESSOR"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactControlNetApplySEGS",
    "display_name": "ControlNetApply (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactDecomposeSEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "SEGS_HEADER",
      "SEG_ELT"
    ],
    "output_is_list": [
      false,
      true
    ],
    "output_name": [
      "SEGS_HEADER",
      "SEG_ELT"
    ],
    "name": "ImpactDecomposeSEGS",
    "display_name": "Decompose (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactAssembleSEGS": {
    "input": {
      "required": {
        "seg_header": [
          "SEGS_HEADER"
        ],
        "seg_elt": [
          "SEG_ELT"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactAssembleSEGS",
    "display_name": "Assemble (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactFrom_SEG_ELT": {
    "input": {
      "required": {
        "seg_elt": [
          "SEG_ELT"
        ]
      }
    },
    "output": [
      "SEG_ELT",
      "IMAGE",
      "MASK",
      "SEG_ELT_crop_region",
      "SEG_ELT_bbox",
      "SEG_ELT_control_net_wrapper",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "seg_elt",
      "cropped_image",
      "cropped_mask",
      "crop_region",
      "bbox",
      "control_net_wrapper",
      "confidence",
      "label"
    ],
    "name": "ImpactFrom_SEG_ELT",
    "display_name": "From SEG_ELT",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactEdit_SEG_ELT": {
    "input": {
      "required": {
        "seg_elt": [
          "SEG_ELT"
        ]
      },
      "optional": {
        "cropped_image_opt": [
          "IMAGE"
        ],
        "cropped_mask_opt": [
          "MASK"
        ],
        "crop_region_opt": [
          "SEG_ELT_crop_region"
        ],
        "bbox_opt": [
          "SEG_ELT_bbox"
        ],
        "control_net_wrapper_opt": [
          "SEG_ELT_control_net_wrapper"
        ],
        "confidence_opt": [
          "FLOAT",
          {
            "min": 0,
            "max": 1.0,
            "step": 0.1,
            "forceInput": true
          }
        ],
        "label_opt": [
          "STRING",
          {
            "multiline": false,
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "SEG_ELT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEG_ELT"
    ],
    "name": "ImpactEdit_SEG_ELT",
    "display_name": "Edit SEG_ELT",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactDilate_Mask_SEG_ELT": {
    "input": {
      "required": {
        "seg_elt": [
          "SEG_ELT"
        ],
        "dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "SEG_ELT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEG_ELT"
    ],
    "name": "ImpactDilate_Mask_SEG_ELT",
    "display_name": "Dilate Mask (SEG_ELT)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactDilateMask": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "ImpactDilateMask",
    "display_name": "Dilate Mask",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactScaleBy_BBOX_SEG_ELT": {
    "input": {
      "required": {
        "seg": [
          "SEG_ELT"
        ],
        "scale_by": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.01,
            "max": 8.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "SEG_ELT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEG_ELT"
    ],
    "name": "ImpactScaleBy_BBOX_SEG_ELT",
    "display_name": "ScaleBy BBOX (SEG_ELT)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "BboxDetectorCombined_v2": {
    "input": {
      "required": {
        "bbox_detector": [
          "BBOX_DETECTOR"
        ],
        "image": [
          "IMAGE"
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 4,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "BboxDetectorCombined_v2",
    "display_name": "BBOX Detector (combined)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "SegmDetectorCombined_v2": {
    "input": {
      "required": {
        "segm_detector": [
          "SEGM_DETECTOR"
        ],
        "image": [
          "IMAGE"
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "SegmDetectorCombined_v2",
    "display_name": "SEGM Detector (combined)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "SegsToCombinedMask": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "name": "SegsToCombinedMask",
    "display_name": "SEGS to MASK (combined)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "KSamplerProvider": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ]
      }
    },
    "output": [
      "KSAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "KSAMPLER"
    ],
    "name": "KSamplerProvider",
    "display_name": "KSamplerProvider",
    "description": "",
    "category": "ImpactPack/Sampler",
    "output_node": false
  },
  "TwoSamplersForMask": {
    "input": {
      "required": {
        "latent_image": [
          "LATENT"
        ],
        "base_sampler": [
          "KSAMPLER"
        ],
        "mask_sampler": [
          "KSAMPLER"
        ],
        "mask": [
          "MASK"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "TwoSamplersForMask",
    "display_name": "TwoSamplersForMask",
    "description": "",
    "category": "ImpactPack/Sampler",
    "output_node": false
  },
  "TiledKSamplerProvider": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "tile_width": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 8192,
            "step": 64
          }
        ],
        "tile_height": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 8192,
            "step": 64
          }
        ],
        "tiling_strategy": [
          [
            "random",
            "padded",
            "simple"
          ]
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ]
      }
    },
    "output": [
      "KSAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "KSAMPLER"
    ],
    "name": "TiledKSamplerProvider",
    "display_name": "TiledKSamplerProvider",
    "description": "",
    "category": "ImpactPack/Sampler",
    "output_node": false
  },
  "KSamplerAdvancedProvider": {
    "input": {
      "required": {
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ]
      }
    },
    "output": [
      "KSAMPLER_ADVANCED"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "KSAMPLER_ADVANCED"
    ],
    "name": "KSamplerAdvancedProvider",
    "display_name": "KSamplerAdvancedProvider",
    "description": "",
    "category": "ImpactPack/Sampler",
    "output_node": false
  },
  "TwoAdvancedSamplersForMask": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "samples": [
          "LATENT"
        ],
        "base_sampler": [
          "KSAMPLER_ADVANCED"
        ],
        "mask_sampler": [
          "KSAMPLER_ADVANCED"
        ],
        "mask": [
          "MASK"
        ],
        "overlap_factor": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "TwoAdvancedSamplersForMask",
    "display_name": "TwoAdvancedSamplersForMask",
    "description": "",
    "category": "ImpactPack/Sampler",
    "output_node": false
  },
  "PreviewBridge": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "image": [
          "STRING",
          {
            "default": ""
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "PreviewBridge",
    "display_name": "Preview Bridge (Image)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "PreviewBridgeLatent": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ],
        "image": [
          "STRING",
          {
            "default": ""
          }
        ],
        "preview_method": [
          [
            "Latent2RGB-SDXL",
            "Latent2RGB-SD15",
            "TAESDXL",
            "TAESD15"
          ]
        ]
      },
      "optional": {
        "vae_opt": [
          "VAE"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "LATENT",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "LATENT",
      "MASK"
    ],
    "name": "PreviewBridgeLatent",
    "display_name": "Preview Bridge (Latent)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "ImageSender": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "ImgSender"
          }
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImageSender",
    "display_name": "Image Sender",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "ImageReceiver": {
    "input": {
      "required": {
        "image": [
          [
            "example.png"
          ]
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ],
        "save_to_workflow": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "image_data": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "trigger_always": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "ImageReceiver",
    "display_name": "Image Receiver",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "LatentSender": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "latents/LatentSender"
          }
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ],
        "preview_method": [
          [
            "Latent2RGB-SDXL",
            "Latent2RGB-SD15",
            "TAESDXL",
            "TAESD15"
          ]
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "LatentSender",
    "display_name": "LatentSender",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "LatentReceiver": {
    "input": {
      "required": {
        "latent": [
          []
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ],
        "trigger_always": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "LatentReceiver",
    "display_name": "LatentReceiver",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImageMaskSwitch": {
    "input": {
      "required": {
        "select": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4,
            "step": 1
          }
        ],
        "images1": [
          "IMAGE"
        ]
      },
      "optional": {
        "mask1_opt": [
          "MASK"
        ],
        "images2_opt": [
          "IMAGE"
        ],
        "mask2_opt": [
          "MASK"
        ],
        "images3_opt": [
          "IMAGE"
        ],
        "mask3_opt": [
          "MASK"
        ],
        "images4_opt": [
          "IMAGE"
        ],
        "mask4_opt": [
          "MASK"
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "ImageMaskSwitch",
    "display_name": "Switch (images, mask)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "LatentSwitch": {
    "input": {
      "required": {
        "select": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999999,
            "step": 1
          }
        ],
        "sel_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "select_on_prompt",
            "label_off": "select_on_execution",
            "forceInput": false
          }
        ]
      },
      "optional": {
        "input1": [
          "*"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "*",
      "STRING",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "selected_value",
      "selected_label",
      "selected_index"
    ],
    "name": "LatentSwitch",
    "display_name": "Switch (latent/legacy)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "SEGSSwitch": {
    "input": {
      "required": {
        "select": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999999,
            "step": 1
          }
        ],
        "sel_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "select_on_prompt",
            "label_off": "select_on_execution",
            "forceInput": false
          }
        ]
      },
      "optional": {
        "input1": [
          "*"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "*",
      "STRING",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "selected_value",
      "selected_label",
      "selected_index"
    ],
    "name": "SEGSSwitch",
    "display_name": "Switch (SEGS/legacy)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSwitch": {
    "input": {
      "required": {
        "select": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999999,
            "step": 1
          }
        ],
        "sel_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "select_on_prompt",
            "label_off": "select_on_execution",
            "forceInput": false
          }
        ]
      },
      "optional": {
        "input1": [
          "*"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "*",
      "STRING",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "selected_value",
      "selected_label",
      "selected_index"
    ],
    "name": "ImpactSwitch",
    "display_name": "Switch (Any)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactInversedSwitch": {
    "input": {
      "required": {
        "select": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999999,
            "step": 1
          }
        ],
        "input": [
          "*"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*",
      "*"
    ],
    "name": "ImpactInversedSwitch",
    "display_name": "Inversed Switch (Any)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactWildcardProcessor": {
    "input": {
      "required": {
        "wildcard_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "populated_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Populate",
            "label_off": "Fixed"
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "ImpactWildcardProcessor",
    "display_name": "ImpactWildcardProcessor",
    "description": "",
    "category": "ImpactPack/Prompt",
    "output_node": false
  },
  "ImpactWildcardEncode": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "wildcard_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "populated_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Populate",
            "label_off": "Fixed"
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "model",
      "clip",
      "conditioning",
      "populated_text"
    ],
    "name": "ImpactWildcardEncode",
    "display_name": "ImpactWildcardEncode",
    "description": "",
    "category": "ImpactPack/Prompt",
    "output_node": false
  },
  "SEGSDetailer": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 256,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 768,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 1.0
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 100
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "refiner_basic_pipe_opt": [
          "BASIC_PIPE"
        ]
      }
    },
    "output": [
      "SEGS",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      true
    ],
    "output_name": [
      "segs",
      "cnet_images"
    ],
    "name": "SEGSDetailer",
    "display_name": "SEGSDetailer",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "SEGSPaste": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "alpha": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      },
      "optional": {
        "ref_image_opt": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "SEGSPaste",
    "display_name": "SEGSPaste",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "SEGSPreview": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "alpha_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      },
      "optional": {
        "fallback_image_opt": [
          "IMAGE"
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SEGSPreview",
    "display_name": "SEGSPreview",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "SEGSToImageList": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      },
      "optional": {
        "fallback_image_opt": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "SEGSToImageList",
    "display_name": "SEGSToImageList",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSToMaskList": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "MASK"
    ],
    "name": "ImpactSEGSToMaskList",
    "display_name": "SEGS to Mask List",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSToMaskBatch": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "MASK"
    ],
    "name": "ImpactSEGSToMaskBatch",
    "display_name": "SEGS to Mask Batch",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSConcat": {
    "input": {
      "required": {
        "segs1": [
          "SEGS"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactSEGSConcat",
    "display_name": "SEGS Concat",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSPicker": {
    "input": {
      "required": {
        "picks": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "pysssss.autocomplete": false
          }
        ],
        "segs": [
          "SEGS"
        ]
      },
      "optional": {
        "fallback_image_opt": [
          "IMAGE"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS"
    ],
    "name": "ImpactSEGSPicker",
    "display_name": "Picker (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "SEGSDetailerForAnimateDiff": {
    "input": {
      "required": {
        "image_frames": [
          "IMAGE"
        ],
        "segs": [
          "SEGS"
        ],
        "guide_size": [
          "FLOAT",
          {
            "default": 256,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 768,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 1.0
          }
        ]
      },
      "optional": {
        "refiner_basic_pipe_opt": [
          "BASIC_PIPE"
        ]
      }
    },
    "output": [
      "SEGS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "segs"
    ],
    "name": "SEGSDetailerForAnimateDiff",
    "display_name": "Detailer For AnimateDiff (SEGS/pipe)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "ImpactKSamplerBasicPipe": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "BASIC_PIPE",
      "LATENT",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "BASIC_PIPE",
      "LATENT",
      "VAE"
    ],
    "name": "ImpactKSamplerBasicPipe",
    "display_name": "KSampler (pipe)",
    "description": "",
    "category": "sampling",
    "output_node": false
  },
  "ImpactKSamplerAdvancedBasicPipe": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "add_noise": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "return_with_leftover_noise": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "BASIC_PIPE",
      "LATENT",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "BASIC_PIPE",
      "LATENT",
      "VAE"
    ],
    "name": "ImpactKSamplerAdvancedBasicPipe",
    "display_name": "KSampler (Advanced/pipe)",
    "description": "",
    "category": "sampling",
    "output_node": false
  },
  "ReencodeLatent": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "tile_mode": [
          [
            "None",
            "Both",
            "Decode(input) only",
            "Encode(output) only"
          ]
        ],
        "input_vae": [
          "VAE"
        ],
        "output_vae": [
          "VAE"
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "ReencodeLatent",
    "display_name": "Reencode Latent",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ReencodeLatentPipe": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "tile_mode": [
          [
            "None",
            "Both",
            "Decode(input) only",
            "Encode(output) only"
          ]
        ],
        "input_basic_pipe": [
          "BASIC_PIPE"
        ],
        "output_basic_pipe": [
          "BASIC_PIPE"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "ReencodeLatentPipe",
    "display_name": "Reencode Latent (pipe)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactImageBatchToImageList": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImpactImageBatchToImageList",
    "display_name": "Image batch to Image List",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactMakeImageList": {
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImpactMakeImageList",
    "display_name": "Make Image List",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactMakeImageBatch": {
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ImpactMakeImageBatch",
    "display_name": "Make Image Batch",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "RegionalSampler": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "seed_2nd": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "seed_2nd_mode": [
          [
            "ignore",
            "fixed",
            "seed+seed_2nd",
            "seed-seed_2nd",
            "increment",
            "decrement",
            "randomize"
          ]
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "base_only_steps": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 10000
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "samples": [
          "LATENT"
        ],
        "base_sampler": [
          "KSAMPLER_ADVANCED"
        ],
        "regional_prompts": [
          "REGIONAL_PROMPTS"
        ],
        "overlap_factor": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ],
        "restore_latent": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "RegionalSampler",
    "display_name": "RegionalSampler",
    "description": "",
    "category": "ImpactPack/Regional",
    "output_node": false
  },
  "RegionalSamplerAdvanced": {
    "input": {
      "required": {
        "add_noise": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "overlap_factor": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ],
        "restore_latent": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "return_with_leftover_noise": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "latent_image": [
          "LATENT"
        ],
        "base_sampler": [
          "KSAMPLER_ADVANCED"
        ],
        "regional_prompts": [
          "REGIONAL_PROMPTS"
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "RegionalSamplerAdvanced",
    "display_name": "RegionalSamplerAdvanced",
    "description": "",
    "category": "ImpactPack/Regional",
    "output_node": false
  },
  "CombineRegionalPrompts": {
    "input": {
      "required": {
        "regional_prompts1": [
          "REGIONAL_PROMPTS"
        ]
      }
    },
    "output": [
      "REGIONAL_PROMPTS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "REGIONAL_PROMPTS"
    ],
    "name": "CombineRegionalPrompts",
    "display_name": "CombineRegionalPrompts",
    "description": "",
    "category": "ImpactPack/Regional",
    "output_node": false
  },
  "RegionalPrompt": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "advanced_sampler": [
          "KSAMPLER_ADVANCED"
        ]
      }
    },
    "output": [
      "REGIONAL_PROMPTS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "REGIONAL_PROMPTS"
    ],
    "name": "RegionalPrompt",
    "display_name": "RegionalPrompt",
    "description": "",
    "category": "ImpactPack/Regional",
    "output_node": false
  },
  "ImpactCombineConditionings": {
    "input": {
      "required": {
        "conditioning1": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ImpactCombineConditionings",
    "display_name": "Combine Conditionings",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactConcatConditionings": {
    "input": {
      "required": {
        "conditioning1": [
          "CONDITIONING"
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ImpactConcatConditionings",
    "display_name": "Concat Conditionings",
    "description": "",
    "category": "ImpactPack/__for_testing",
    "output_node": false
  },
  "ImpactSEGSLabelFilter": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "preset": [
          [
            "all",
            "hand",
            "face",
            "mouth",
            "eyes",
            "eyebrows",
            "pupils",
            "left_eyebrow",
            "left_eye",
            "left_pupil",
            "right_eyebrow",
            "right_eye",
            "right_pupil",
            "short_sleeved_shirt",
            "long_sleeved_shirt",
            "short_sleeved_outwear",
            "long_sleeved_outwear",
            "vest",
            "sling",
            "shorts",
            "trousers",
            "skirt",
            "short_sleeved_dress",
            "long_sleeved_dress",
            "vest_dress",
            "sling_dress",
            "person",
            "bicycle",
            "car",
            "motorcycle",
            "airplane",
            "bus",
            "train",
            "truck",
            "boat",
            "traffic light",
            "fire hydrant",
            "stop sign",
            "parking meter",
            "bench",
            "bird",
            "cat",
            "dog",
            "horse",
            "sheep",
            "cow",
            "elephant",
            "bear",
            "zebra",
            "giraffe",
            "backpack",
            "umbrella",
            "handbag",
            "tie",
            "suitcase",
            "frisbee",
            "skis",
            "snowboard",
            "sports ball",
            "kite",
            "baseball bat",
            "baseball glove",
            "skateboard",
            "surfboard",
            "tennis racket",
            "bottle",
            "wine glass",
            "cup",
            "fork",
            "knife",
            "spoon",
            "bowl",
            "banana",
            "apple",
            "sandwich",
            "orange",
            "broccoli",
            "carrot",
            "hot dog",
            "pizza",
            "donut",
            "cake",
            "chair",
            "couch",
            "potted plant",
            "bed",
            "dining table",
            "toilet",
            "tv",
            "laptop",
            "mouse",
            "remote",
            "keyboard",
            "cell phone",
            "microwave",
            "oven",
            "toaster",
            "sink",
            "refrigerator",
            "book",
            "clock",
            "vase",
            "scissors",
            "teddy bear",
            "hair drier",
            "toothbrush"
          ]
        ],
        "labels": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "List the types of segments to be allowed, separated by commas"
          }
        ]
      }
    },
    "output": [
      "SEGS",
      "SEGS"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "filtered_SEGS",
      "remained_SEGS"
    ],
    "name": "ImpactSEGSLabelFilter",
    "display_name": "SEGS Filter (label)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSRangeFilter": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "target": [
          [
            "area(=w*h)",
            "width",
            "height",
            "x1",
            "y1",
            "x2",
            "y2",
            "length_percent"
          ]
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "inside",
            "label_off": "outside"
          }
        ],
        "min_value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ],
        "max_value": [
          "INT",
          {
            "default": 67108864,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "SEGS",
      "SEGS"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "filtered_SEGS",
      "remained_SEGS"
    ],
    "name": "ImpactSEGSRangeFilter",
    "display_name": "SEGS Filter (range)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSOrderedFilter": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ],
        "target": [
          [
            "area(=w*h)",
            "width",
            "height",
            "x1",
            "y1",
            "x2",
            "y2"
          ]
        ],
        "order": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "descending",
            "label_off": "ascending"
          }
        ],
        "take_start": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ],
        "take_count": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "SEGS",
      "SEGS"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "filtered_SEGS",
      "remained_SEGS"
    ],
    "name": "ImpactSEGSOrderedFilter",
    "display_name": "SEGS Filter (ordered)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactCompare": {
    "input": {
      "required": {
        "cmp": [
          [
            "a = b",
            "a <> b",
            "a > b",
            "a < b",
            "a >= b",
            "a <= b",
            "tt",
            "ff"
          ]
        ],
        "a": [
          "*"
        ],
        "b": [
          "*"
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "ImpactCompare",
    "display_name": "ImpactCompare",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactConditionalBranch": {
    "input": {
      "required": {
        "cond": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ],
        "tt_value": [
          "*"
        ],
        "ff_value": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "*"
    ],
    "name": "ImpactConditionalBranch",
    "display_name": "ImpactConditionalBranch",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactInt": {
    "input": {
      "required": {
        "value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INT"
    ],
    "name": "ImpactInt",
    "display_name": "ImpactInt",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactFloat": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -3.402823466e+38,
            "max": 3.402823466e+38
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "ImpactFloat",
    "display_name": "ImpactFloat",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactValueSender": {
    "input": {
      "required": {
        "value": [
          "*"
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ]
      },
      "optional": {
        "signal_opt": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "signal"
    ],
    "name": "ImpactValueSender",
    "display_name": "ImpactValueSender",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": true
  },
  "ImpactValueReceiver": {
    "input": {
      "required": {
        "typ": [
          [
            "STRING",
            "INT",
            "FLOAT",
            "BOOLEAN"
          ]
        ],
        "value": [
          "STRING",
          {
            "default": ""
          }
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9223372036854775807,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "*"
    ],
    "name": "ImpactValueReceiver",
    "display_name": "ImpactValueReceiver",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactImageInfo": {
    "input": {
      "required": {
        "value": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT",
      "INT",
      "INT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "batch",
      "height",
      "width",
      "channel"
    ],
    "name": "ImpactImageInfo",
    "display_name": "ImpactImageInfo",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": false
  },
  "ImpactMinMax": {
    "input": {
      "required": {
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "max",
            "label_off": "min"
          }
        ],
        "a": [
          "*"
        ],
        "b": [
          "*"
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INT"
    ],
    "name": "ImpactMinMax",
    "display_name": "ImpactMinMax",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": false
  },
  "ImpactNeg": {
    "input": {
      "required": {
        "value": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "ImpactNeg",
    "display_name": "ImpactNeg",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactConditionalStopIteration": {
    "input": {
      "required": {
        "cond": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImpactConditionalStopIteration",
    "display_name": "ImpactConditionalStopIteration",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": true
  },
  "ImpactStringSelector": {
    "input": {
      "required": {
        "strings": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "multiline": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "select": [
          "INT",
          {
            "min": 0,
            "max": 9223372036854775807,
            "step": 1,
            "default": 0
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "ImpactStringSelector",
    "display_name": "String Selector",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "RemoveNoiseMask": {
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "RemoveNoiseMask",
    "display_name": "Remove Noise Mask",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactLogger": {
    "input": {
      "required": {
        "data": [
          "*",
          ""
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImpactLogger",
    "display_name": "ImpactLogger",
    "description": "",
    "category": "ImpactPack/Debug",
    "output_node": true
  },
  "ImpactDummyInput": {
    "input": {
      "required": {}
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "*"
    ],
    "name": "ImpactDummyInput",
    "display_name": "ImpactDummyInput",
    "description": "",
    "category": "ImpactPack/Debug",
    "output_node": false
  },
  "ImpactQueueTrigger": {
    "input": {
      "required": {
        "signal": [
          "*"
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Trigger",
            "label_off": "Don't trigger"
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "signal_opt"
    ],
    "name": "ImpactQueueTrigger",
    "display_name": "Queue Trigger",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactQueueTriggerCountdown": {
    "input": {
      "required": {
        "signal": [
          "*"
        ],
        "count": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "*",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "signal_opt",
      "count"
    ],
    "name": "ImpactQueueTriggerCountdown",
    "display_name": "Queue Trigger (Countdown)",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactSetWidgetValue": {
    "input": {
      "required": {
        "signal": [
          "*"
        ],
        "node_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "widget_name": [
          "STRING",
          {
            "multiline": false
          }
        ]
      },
      "optional": {
        "boolean_value": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ],
        "int_value": [
          "INT",
          {
            "forceInput": true
          }
        ],
        "float_value": [
          "FLOAT",
          {
            "forceInput": true
          }
        ],
        "string_value": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "signal_opt"
    ],
    "name": "ImpactSetWidgetValue",
    "display_name": "Set Widget Value",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactNodeSetMuteState": {
    "input": {
      "required": {
        "signal": [
          "*"
        ],
        "node_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "set_state": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "active",
            "label_off": "mute"
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "signal_opt"
    ],
    "name": "ImpactNodeSetMuteState",
    "display_name": "Set Mute State",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactControlBridge": {
    "input": {
      "required": {
        "value": [
          "*"
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Active",
            "label_off": "Mute/Bypass"
          }
        ],
        "behavior": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Mute",
            "label_off": "Bypass"
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "value"
    ],
    "name": "ImpactControlBridge",
    "display_name": "Control Bridge",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactIsNotEmptySEGS": {
    "input": {
      "required": {
        "segs": [
          "SEGS"
        ]
      }
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "BOOLEAN"
    ],
    "name": "ImpactIsNotEmptySEGS",
    "display_name": "SEGS isn't Empty",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactSleep": {
    "input": {
      "required": {
        "signal": [
          "*"
        ],
        "seconds": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 3600
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "signal_opt"
    ],
    "name": "ImpactSleep",
    "display_name": "Sleep",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactRemoteBoolean": {
    "input": {
      "required": {
        "node_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "widget_name": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "value": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "True",
            "label_off": "False"
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImpactRemoteBoolean",
    "display_name": "Remote Boolean (on prompt)",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactRemoteInt": {
    "input": {
      "required": {
        "node_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "widget_name": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "value": [
          "INT",
          {
            "default": 0,
            "min": -18446744073709551615,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImpactRemoteInt",
    "display_name": "Remote Int (on prompt)",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactHFTransformersClassifierProvider": {
    "input": {
      "required": {
        "preset_repo_id": [
          [
            "rizvandwiki/gender-classification-2",
            "NTQAI/pedestrian_gender_recognition",
            "Leilab/gender_class",
            "ProjectPersonal/GenderClassifier",
            "crangana/trained-gender",
            "cledoux42/GenderNew_v002",
            "ivensamdh/genderage2",
            "Manual repo id"
          ]
        ],
        "manual_repo_id": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "device_mode": [
          [
            "AUTO",
            "Prefer GPU",
            "CPU"
          ]
        ]
      }
    },
    "output": [
      "TRANSFORMERS_CLASSIFIER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "TRANSFORMERS_CLASSIFIER"
    ],
    "name": "ImpactHFTransformersClassifierProvider",
    "display_name": "HF Transformers Classifier Provider",
    "description": "",
    "category": "ImpactPack/HuggingFace",
    "output_node": false
  },
  "ImpactSEGSClassify": {
    "input": {
      "required": {
        "classifier": [
          "TRANSFORMERS_CLASSIFIER"
        ],
        "segs": [
          "SEGS"
        ],
        "preset_expr": [
          [
            "#Female > #Male",
            "#Female < #Male",
            "female > 0.5",
            "male > 0.5",
            "Age16to25 > 0.1",
            "Age50to69 > 0.1",
            "Manual expr"
          ]
        ],
        "manual_expr": [
          "STRING",
          {
            "multiline": false
          }
        ]
      },
      "optional": {
        "ref_image_opt": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "SEGS",
      "SEGS"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "filtered_SEGS",
      "remained_SEGS"
    ],
    "name": "ImpactSEGSClassify",
    "display_name": "SEGS Classify",
    "description": "",
    "category": "ImpactPack/HuggingFace",
    "output_node": false
  },
  "UltralyticsDetectorProvider": {
    "input": {
      "required": {
        "model_name": [
          [
            "bbox/face_yolov8m.pt",
            "bbox/hand_yolov8s.pt",
            "segm/person_yolov8m-seg.pt"
          ]
        ]
      }
    },
    "output": [
      "BBOX_DETECTOR",
      "SEGM_DETECTOR"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "BBOX_DETECTOR",
      "SEGM_DETECTOR"
    ],
    "name": "UltralyticsDetectorProvider",
    "display_name": "UltralyticsDetectorProvider",
    "description": "",
    "category": "ImpactPack",
    "output_node": false
  },
  "BNK_CLIPTextEncodeAdvanced": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "clip": [
          "CLIP"
        ],
        "token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ]
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "BNK_CLIPTextEncodeAdvanced",
    "display_name": "CLIP Text Encode (Advanced)",
    "description": "",
    "category": "conditioning/advanced",
    "output_node": false
  },
  "BNK_CLIPTextEncodeSDXLAdvanced": {
    "input": {
      "required": {
        "text_l": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "text_g": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "clip": [
          "CLIP"
        ],
        "token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ]
        ],
        "balance": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "BNK_CLIPTextEncodeSDXLAdvanced",
    "display_name": "CLIP Text Encode SDXL (Advanced)",
    "description": "",
    "category": "conditioning/advanced",
    "output_node": false
  },
  "BNK_AddCLIPSDXLParams": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "width": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ],
        "crop_w": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192
          }
        ],
        "crop_h": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192
          }
        ],
        "target_width": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ],
        "target_height": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "BNK_AddCLIPSDXLParams",
    "display_name": "Add CLIP SDXL Params",
    "description": "",
    "category": "conditioning/advanced",
    "output_node": false
  },
  "BNK_AddCLIPSDXLRParams": {
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "width": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024.0,
            "min": 0,
            "max": 8192
          }
        ],
        "ascore": [
          "FLOAT",
          {
            "default": 6.0,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "BNK_AddCLIPSDXLRParams",
    "display_name": "Add CLIP SDXL Refiner Params",
    "description": "",
    "category": "conditioning/advanced",
    "output_node": false
  },
  "XY Input: Lora Block Weight //Inspire": {
    "input": {
      "required": {
        "category_filter": [
          [
            "All"
          ]
        ],
        "lora_name": [
          []
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "inverse": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "A": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "B": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "preset": [
          [
            "Preset",
            "SD-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SD-INS:1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-IND:1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0",
            "SD-INALL:1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0",
            "SD-MIDD:1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0",
            "SD-MIDD0.2:1,0,0,0,0,0,0.2,0.4,0.4,0.2,0,0,0,0,0,0,0",
            "SD-MIDD0.8:1,0,0,0,0,0.5,0.8,0.8,0.4,0,0,0,0,0,0,0,0",
            "SD-MOUT:1,0,0,0,0,0,1,1,1,1,1,1,1,1,0.5,0,0",
            "SD-OUTD:1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0",
            "SD-OUTS:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1",
            "SD-OUTALL:1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1",
            "SD-ROUT:1,1,1,1,1,1,1,1,R,R,R,R,R,R,R,R,R",
            "SD-AOUT:A,1,1,1,1,1,1,1,1,1,1,1,A,A,A,A,A",
            "SD-AB:A,B,B,B,B,B,B,B,B,B,B,B,A,A,A,A,A",
            "SD-ALL0.5:0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5",
            "SD-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SD-LyC-INALL:1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-MIDALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-NONE:0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-ALL:1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-INALL:1,1,1,1,1,0,0,0,0,0,0,0",
            "SDXL-MIDALL:1,0,0,0,0,1,0,0,0,0,0,0",
            "SDXL-OUTALL:1,0,0,0,0,0,1,1,1,1,1,1",
            "SDXL-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-LyC-INALL:1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-MIDALL:1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1",
            "@SD-FULL-TEST:17",
            "@SD-BLOCK1-TEST:17,12,1",
            "@SD-BLOCK2-TEST:17,12,2",
            "@SD-BLOCK3-TEST:17,12,3",
            "@SD-BLOCK4-TEST:17,12,4",
            "@SD-BLOCK5-TEST:17,12,5",
            "@SD-BLOCK6-TEST:17,12,6",
            "@SD-BLOCK7-TEST:17,12,7",
            "@SD-BLOCK8-TEST:17,12,8",
            "@SD-BLOCK9-TEST:17,12,9",
            "@SD-BLOCK10-TEST:17,12,10",
            "@SD-BLOCK11-TEST:17,12,11",
            "@SD-BLOCK12-TEST:17,12,12",
            "@SD-BLOCK13-TEST:17,12,13",
            "@SD-BLOCK14-TEST:17,12,14",
            "@SD-BLOCK15-TEST:17,12,15",
            "@SD-BLOCK16-TEST:17,12,16",
            "@SD-BLOCK17-TEST:17,12,17",
            "@SD-LyC-FULL-TEST:27",
            "@SDXL-FULL-TEST:12",
            "@SDXL-LyC-FULL-TEST:21"
          ]
        ],
        "block_vectors": [
          "STRING",
          {
            "multiline": true,
            "default": "SD-NONE/SD-ALL\nSD-ALL/SD-ALL\nSD-INS/SD-ALL\nSD-IND/SD-ALL\nSD-INALL/SD-ALL\nSD-MIDD/SD-ALL\nSD-MIDD0.2/SD-ALL\nSD-MIDD0.8/SD-ALL\nSD-MOUT/SD-ALL\nSD-OUTD/SD-ALL\nSD-OUTS/SD-ALL\nSD-OUTALL/SD-ALL",
            "placeholder": "{target vector}/{reference vector}",
            "pysssss.autocomplete": false
          }
        ],
        "heatmap_palette": [
          [
            "viridis",
            "magma",
            "plasma",
            "inferno",
            "cividis"
          ]
        ],
        "heatmap_alpha": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "heatmap_strength": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "xyplot_mode": [
          [
            "Simple",
            "Diff",
            "Diff+Heatmap"
          ]
        ]
      }
    },
    "output": [
      "XY",
      "XY"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "X (vectors)",
      "Y (effect_compares)"
    ],
    "name": "XY Input: Lora Block Weight //Inspire",
    "display_name": "XY Input: Lora Block Weight",
    "description": "",
    "category": "InspirePack/LoraBlockWeight",
    "output_node": false
  },
  "LoraLoaderBlockWeight //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "category_filter": [
          [
            "All"
          ]
        ],
        "lora_name": [
          []
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "inverse": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "A": [
          "FLOAT",
          {
            "default": 4.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "B": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "preset": [
          [
            "Preset",
            "SD-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SD-INS:1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-IND:1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0",
            "SD-INALL:1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0",
            "SD-MIDD:1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0",
            "SD-MIDD0.2:1,0,0,0,0,0,0.2,0.4,0.4,0.2,0,0,0,0,0,0,0",
            "SD-MIDD0.8:1,0,0,0,0,0.5,0.8,0.8,0.4,0,0,0,0,0,0,0,0",
            "SD-MOUT:1,0,0,0,0,0,1,1,1,1,1,1,1,1,0.5,0,0",
            "SD-OUTD:1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0",
            "SD-OUTS:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1",
            "SD-OUTALL:1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1",
            "SD-ROUT:1,1,1,1,1,1,1,1,R,R,R,R,R,R,R,R,R",
            "SD-AOUT:A,1,1,1,1,1,1,1,1,1,1,1,A,A,A,A,A",
            "SD-AB:A,B,B,B,B,B,B,B,B,B,B,B,A,A,A,A,A",
            "SD-ALL0.5:0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5",
            "SD-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SD-LyC-INALL:1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-MIDALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-NONE:0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-ALL:1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-INALL:1,1,1,1,1,0,0,0,0,0,0,0",
            "SDXL-MIDALL:1,0,0,0,0,1,0,0,0,0,0,0",
            "SDXL-OUTALL:1,0,0,0,0,0,1,1,1,1,1,1",
            "SDXL-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-LyC-INALL:1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-MIDALL:1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1"
          ]
        ],
        "block_vector": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "block weight vectors",
            "default": "1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1",
            "pysssss.autocomplete": false
          }
        ],
        "bypass": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "model",
      "clip",
      "populated_vector"
    ],
    "name": "LoraLoaderBlockWeight //Inspire",
    "display_name": "Lora Loader (Block Weight)",
    "description": "",
    "category": "InspirePack/LoraBlockWeight",
    "output_node": false
  },
  "LoraBlockInfo //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "lora_name": [
          []
        ],
        "block_info": [
          "STRING",
          {
            "multiline": true
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "LoraBlockInfo //Inspire",
    "display_name": "Lora Block Info",
    "description": "",
    "category": "InspirePack/LoraBlockWeight",
    "output_node": true
  },
  "OpenPose_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "detect_hand": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "detect_body": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "detect_face": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "resolution_upscale_by": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.5,
            "max": 100,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "OpenPose_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "OpenPose Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "DWPreprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "detect_hand": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "detect_body": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "detect_face": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "resolution_upscale_by": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.5,
            "max": 100,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "DWPreprocessor_Provider_for_SEGS //Inspire",
    "display_name": "DWPreprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "MiDaS_DepthMap_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "a": [
          "FLOAT",
          {
            "default": 6.283185307179586,
            "min": 0.0,
            "max": 15.707963267948966,
            "step": 0.05
          }
        ],
        "bg_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "MiDaS_DepthMap_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "MiDaS Depth Map Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "LeRes_DepthMap_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "rm_nearest": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 100,
            "step": 0.1
          }
        ],
        "rm_background": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 100,
            "step": 0.1
          }
        ]
      },
      "optional": {
        "boost": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "LeRes_DepthMap_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "LeReS Depth Map Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "Canny_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "low_threshold": [
          "FLOAT",
          {
            "default": 0.4,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "high_threshold": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "Canny_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Canny Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "MediaPipe_FaceMesh_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "max_faces": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 50,
            "step": 1
          }
        ],
        "min_confidence": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.01,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "resolution_upscale_by": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.5,
            "max": 100,
            "step": 0.1
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "MediaPipe_FaceMesh_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "MediaPipe FaceMesh Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "HEDPreprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "safe": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "HEDPreprocessor_Provider_for_SEGS //Inspire",
    "display_name": "HED Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "FakeScribblePreprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "safe": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "FakeScribblePreprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Fake Scribble Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "AnimeLineArt_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {}
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "AnimeLineArt_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "AnimeLineArt Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "Manga2Anime_LineArt_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {}
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "Manga2Anime_LineArt_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Manga2Anime LineArt Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "LineArt_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "coarse": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "LineArt_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "LineArt Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "Color_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {}
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "Color_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Color Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "InpaintPreprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {}
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "InpaintPreprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Inpaint Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "TilePreprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "pyrUp_iters": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "SEGS_PREPROCESSOR"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SEGS_PREPROCESSOR"
    ],
    "name": "TilePreprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Tile Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "MediaPipeFaceMeshDetectorProvider //Inspire": {
    "input": {
      "required": {
        "max_faces": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 50,
            "step": 1
          }
        ],
        "face": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "mouth": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "left_eyebrow": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "left_eye": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "left_pupil": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "right_eyebrow": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "right_eye": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "right_pupil": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "BBOX_DETECTOR",
      "SEGM_DETECTOR"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "BBOX_DETECTOR",
      "SEGM_DETECTOR"
    ],
    "name": "MediaPipeFaceMeshDetectorProvider //Inspire",
    "display_name": "MediaPipeFaceMesh Detector Provider",
    "description": "",
    "category": "InspirePack/Detector",
    "output_node": false
  },
  "KSampler //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ],
        "batch_seed_mode": [
          [
            "incremental",
            "comfy",
            "variation str inc:0.01",
            "variation str inc:0.05"
          ]
        ],
        "variation_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "variation_strength": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "KSampler //Inspire",
    "display_name": "KSampler (inspire)",
    "description": "",
    "category": "InspirePack/a1111_compat",
    "output_node": false
  },
  "KSamplerAdvanced //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "add_noise": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.5,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ],
        "return_with_leftover_noise": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "batch_seed_mode": [
          [
            "incremental",
            "comfy",
            "variation str inc:0.01",
            "variation str inc:0.05"
          ]
        ],
        "variation_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "variation_strength": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "noise_opt": [
          "NOISE"
        ]
      }
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "name": "KSamplerAdvanced //Inspire",
    "display_name": "KSamplerAdvanced (inspire)",
    "description": "",
    "category": "InspirePack/a1111_compat",
    "output_node": false
  },
  "LoadPromptsFromDir //Inspire": {
    "input": {
      "required": {
        "prompt_dir": [
          [
            "example"
          ]
        ]
      }
    },
    "output": [
      "ZIPPED_PROMPT"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "ZIPPED_PROMPT"
    ],
    "name": "LoadPromptsFromDir //Inspire",
    "display_name": "Load Prompts From Dir (Inspire)",
    "description": "",
    "category": "InspirePack/prompt",
    "output_node": false
  },
  "LoadPromptsFromFile //Inspire": {
    "input": {
      "required": {
        "prompt_file": [
          [
            "example/prompt1.txt",
            "example/prompt2.txt"
          ]
        ]
      }
    },
    "output": [
      "ZIPPED_PROMPT"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "ZIPPED_PROMPT"
    ],
    "name": "LoadPromptsFromFile //Inspire",
    "display_name": "Load Prompts From File (Inspire)",
    "description": "",
    "category": "InspirePack/prompt",
    "output_node": false
  },
  "UnzipPrompt //Inspire": {
    "input": {
      "required": {
        "zipped_prompt": [
          "ZIPPED_PROMPT"
        ]
      }
    },
    "output": [
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "name"
    ],
    "name": "UnzipPrompt //Inspire",
    "display_name": "Unzip Prompt (Inspire)",
    "description": "",
    "category": "InspirePack/prompt",
    "output_node": false
  },
  "ZipPrompt //Inspire": {
    "input": {
      "required": {
        "positive": [
          "STRING",
          {
            "forceInput": true,
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "forceInput": true,
            "multiline": true
          }
        ]
      },
      "optional": {
        "name_opt": [
          "STRING",
          {
            "forceInput": true,
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "ZIPPED_PROMPT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "ZIPPED_PROMPT"
    ],
    "name": "ZipPrompt //Inspire",
    "display_name": "Zip Prompt (Inspire)",
    "description": "",
    "category": "InspirePack/prompt",
    "output_node": false
  },
  "PromptExtractor //Inspire": {
    "input": {
      "required": {
        "image": [
          [
            "example.png"
          ],
          {
            "image_upload": true
          }
        ],
        "positive_id": [
          "STRING",
          {}
        ],
        "negative_id": [
          "STRING",
          {}
        ],
        "info": [
          "STRING",
          {
            "multiline": true
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative"
    ],
    "name": "PromptExtractor //Inspire",
    "display_name": "Prompt Extractor (Inspire)",
    "description": "",
    "category": "InspirePack/prompt",
    "output_node": true
  },
  "GlobalSeed //Inspire": {
    "input": {
      "required": {
        "value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1125899906842624
          }
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "control_before_generate",
            "label_off": "control_after_generate"
          }
        ],
        "action": [
          [
            "fixed",
            "increment",
            "decrement",
            "randomize",
            "increment for each node",
            "decrement for each node",
            "randomize for each node"
          ]
        ],
        "last_seed": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "GlobalSeed //Inspire",
    "display_name": "Global Seed (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": true
  },
  "BindImageListPromptList //Inspire": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "zipped_prompts": [
          "ZIPPED_PROMPT"
        ],
        "default_positive": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "default positive"
          }
        ],
        "default_negative": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "default negative"
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "STRING",
      "STRING",
      "STRING"
    ],
    "output_is_list": [
      true,
      true,
      true
    ],
    "output_name": [
      "image",
      "positive",
      "negative",
      "prompt_label"
    ],
    "name": "BindImageListPromptList //Inspire",
    "display_name": "Bind [ImageList, PromptList] (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "WildcardEncode //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "clip": [
          "CLIP"
        ],
        "token_normalization": [
          [
            "none",
            "mean",
            "length",
            "length+mean"
          ]
        ],
        "weight_interpretation": [
          [
            "comfy",
            "A1111",
            "compel",
            "comfy++",
            "down_weight"
          ],
          {
            "default": "comfy++"
          }
        ],
        "wildcard_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "Wildcard Prmopt (User Input)"
          }
        ],
        "populated_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "Populated Prmopt (Will be generated automatically)"
          }
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Populate",
            "label_off": "Fixed"
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text"
          ]
        ],
        "Select to add Wildcard": [
          [
            "Select the Wildcard to add to the text"
          ]
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "CONDITIONING",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "model",
      "clip",
      "conditioning",
      "populated_text"
    ],
    "name": "WildcardEncode //Inspire",
    "display_name": "Wildcard Encode (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "PromptBuilder //Inspire": {
    "input": {
      "required": {
        "category": [
          [
            "Angle of View",
            "Artists",
            "Character Types",
            "Colors",
            "Composition",
            "Composition Form",
            "Lighting",
            "Negative",
            "Picture Effect",
            "Picture Quality",
            "Setting",
            "Shot",
            "Style"
          ]
        ],
        "preset": [
          [
            "#PRESET"
          ]
        ],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "name": "PromptBuilder //Inspire",
    "display_name": "Prompt Builder (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "SeedExplorer //Inspire": {
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ],
        "seed_prompt": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "pysssss.autocomplete": false
          }
        ],
        "enable_additional": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "true",
            "label_off": "false"
          }
        ],
        "additional_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "additional_strength": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ],
        "initial_batch_seed_mode": [
          [
            "incremental",
            "comfy"
          ]
        ]
      }
    },
    "output": [
      "NOISE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "NOISE"
    ],
    "name": "SeedExplorer //Inspire",
    "display_name": "Seed Explorer (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "ListCounter //Inspire": {
    "input": {
      "required": {
        "signal": [
          "*"
        ],
        "base_value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INT"
    ],
    "name": "ListCounter //Inspire",
    "display_name": "List Counter (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "CLIPTextEncodeWithWeight //Inspire": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "clip": [
          "CLIP"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "add_weight": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "CLIPTextEncodeWithWeight //Inspire",
    "display_name": "CLIPTextEncodeWithWeight (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "LoadImagesFromDir //Inspire": {
    "input": {
      "required": {
        "directory": [
          "STRING",
          {
            "default": ""
          }
        ]
      },
      "optional": {
        "image_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "name": "LoadImagesFromDir //Inspire",
    "display_name": "Load Image Batch From Dir (Inspire)",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "LoadImageListFromDir //Inspire": {
    "input": {
      "required": {
        "directory": [
          "STRING",
          {
            "default": ""
          }
        ]
      },
      "optional": {
        "image_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      true,
      true
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "LoadImageListFromDir //Inspire",
    "display_name": "Load Image List From Dir (Inspire)",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "LoadImage //Inspire": {
    "input": {
      "required": {
        "image": [
          [
            "example.png",
            "#DATA"
          ],
          {
            "image_upload": true
          }
        ],
        "image_data": [
          "STRING",
          {
            "multiline": false
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "name": "LoadImage //Inspire",
    "display_name": "LoadImage //Inspire",
    "description": "",
    "category": "InspirePack/image",
    "output_node": false
  },
  "ChangeImageBatchSize //Inspire": {
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "mode": [
          [
            "simple"
          ]
        ]
      }
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "name": "ChangeImageBatchSize //Inspire",
    "display_name": "Change Image Batch Size (Inspire)",
    "description": "",
    "category": "InspirePack/image",
    "output_node": false
  },
  "RegionalPromptSimple //Inspire": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "mask": [
          "MASK"
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "wildcard_prompt": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "wildcard prompt"
          }
        ],
        "controlnet_in_pipe": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Keep",
            "label_off": "Override"
          }
        ]
      }
    },
    "output": [
      "REGIONAL_PROMPTS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "REGIONAL_PROMPTS"
    ],
    "name": "RegionalPromptSimple //Inspire",
    "display_name": "Regional Prompt Simple (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalPromptColorMask //Inspire": {
    "input": {
      "required": {
        "basic_pipe": [
          "BASIC_PIPE"
        ],
        "color_mask": [
          "IMAGE"
        ],
        "mask_color": [
          "STRING",
          {
            "multiline": false,
            "default": "#FFFFFF"
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "wildcard_prompt": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "wildcard prompt"
          }
        ],
        "controlnet_in_pipe": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Keep",
            "label_off": "Override"
          }
        ]
      }
    },
    "output": [
      "REGIONAL_PROMPTS",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "REGIONAL_PROMPTS",
      "MASK"
    ],
    "name": "RegionalPromptColorMask //Inspire",
    "display_name": "Regional Prompt By Color Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalConditioningSimple //Inspire": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "mask": [
          "MASK"
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "set_cond_area": [
          [
            "default",
            "mask bounds"
          ]
        ],
        "prompt": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "prompt"
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "RegionalConditioningSimple //Inspire",
    "display_name": "Regional Conditioning Simple (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalConditioningColorMask //Inspire": {
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "color_mask": [
          "IMAGE"
        ],
        "mask_color": [
          "STRING",
          {
            "multiline": false,
            "default": "#FFFFFF"
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ],
        "set_cond_area": [
          [
            "default",
            "mask bounds"
          ]
        ],
        "prompt": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "prompt"
          }
        ]
      }
    },
    "output": [
      "CONDITIONING",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "CONDITIONING",
      "MASK"
    ],
    "name": "RegionalConditioningColorMask //Inspire",
    "display_name": "Regional Conditioning By Color Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalIPAdapterMask //Inspire": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.7,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "noise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "weight_type": [
          [
            "original",
            "linear",
            "channel penalty"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "unfold_batch": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "REGIONAL_IPADAPTER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "REGIONAL_IPADAPTER"
    ],
    "name": "RegionalIPAdapterMask //Inspire",
    "display_name": "Regional IPAdapter Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalIPAdapterColorMask //Inspire": {
    "input": {
      "required": {
        "color_mask": [
          "IMAGE"
        ],
        "mask_color": [
          "STRING",
          {
            "multiline": false,
            "default": "#FFFFFF"
          }
        ],
        "image": [
          "IMAGE"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.7,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "noise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "weight_type": [
          [
            "original",
            "linear",
            "channel penalty"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "unfold_batch": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "REGIONAL_IPADAPTER",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "REGIONAL_IPADAPTER",
      "MASK"
    ],
    "name": "RegionalIPAdapterColorMask //Inspire",
    "display_name": "Regional IPAdapter By Color Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalIPAdapterEncodedMask //Inspire": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "embeds": [
          "embeds"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.7,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "original",
            "linear",
            "channel penalty"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "unfold_batch": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "REGIONAL_IPADAPTER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "REGIONAL_IPADAPTER"
    ],
    "name": "RegionalIPAdapterEncodedMask //Inspire",
    "display_name": "Regional IPAdapter Encoded Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalIPAdapterEncodedColorMask //Inspire": {
    "input": {
      "required": {
        "color_mask": [
          "IMAGE"
        ],
        "mask_color": [
          "STRING",
          {
            "multiline": false,
            "default": "#FFFFFF"
          }
        ],
        "embeds": [
          "EMBEDS"
        ],
        "weight": [
          "FLOAT",
          {
            "default": 0.7,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_type": [
          [
            "original",
            "linear",
            "channel penalty"
          ]
        ],
        "start_at": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
          }
        ],
        "unfold_batch": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": [
      "REGIONAL_IPADAPTER",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "REGIONAL_IPADAPTER",
      "MASK"
    ],
    "name": "RegionalIPAdapterEncodedColorMask //Inspire",
    "display_name": "Regional IPAdapter Encoded By Color Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalSeedExplorerMask //Inspire": {
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "noise": [
          "NOISE"
        ],
        "seed_prompt": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "pysssss.autocomplete": false
          }
        ],
        "enable_additional": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "true",
            "label_off": "false"
          }
        ],
        "additional_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "additional_strength": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ]
      }
    },
    "output": [
      "NOISE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "NOISE"
    ],
    "name": "RegionalSeedExplorerMask //Inspire",
    "display_name": "Regional Seed Explorer By Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalSeedExplorerColorMask //Inspire": {
    "input": {
      "required": {
        "color_mask": [
          "IMAGE"
        ],
        "mask_color": [
          "STRING",
          {
            "multiline": false,
            "default": "#FFFFFF"
          }
        ],
        "noise": [
          "NOISE"
        ],
        "seed_prompt": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "pysssss.autocomplete": false
          }
        ],
        "enable_additional": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "true",
            "label_off": "false"
          }
        ],
        "additional_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "additional_strength": [
          "FLOAT",
          {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ]
      }
    },
    "output": [
      "NOISE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "NOISE",
      "MASK"
    ],
    "name": "RegionalSeedExplorerColorMask //Inspire",
    "display_name": "Regional Seed Explorer By Color Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "ToIPAdapterPipe //Inspire": {
    "input": {
      "required": {
        "ipadapter": [
          "IPADAPTER"
        ],
        "clip_vision": [
          "CLIP_VISION"
        ],
        "model": [
          "MODEL"
        ]
      }
    },
    "output": [
      "IPADAPTER_PIPE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IPADAPTER_PIPE"
    ],
    "name": "ToIPAdapterPipe //Inspire",
    "display_name": "ToIPAdapterPipe (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "FromIPAdapterPipe //Inspire": {
    "input": {
      "required": {
        "ipadapter_pipe": [
          "IPADAPTER_PIPE"
        ]
      }
    },
    "output": [
      "IPADAPTER",
      "CLIP_VISION",
      "MODEL"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "IPADAPTER",
      "CLIP_VISION",
      "MODEL"
    ],
    "name": "FromIPAdapterPipe //Inspire",
    "display_name": "FromIPAdapterPipe (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "ApplyRegionalIPAdapters //Inspire": {
    "input": {
      "required": {
        "ipadapter_pipe": [
          "IPADAPTER_PIPE"
        ],
        "regional_ipadapter1": [
          "REGIONAL_IPADAPTER"
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "ApplyRegionalIPAdapters //Inspire",
    "display_name": "Apply Regional IPAdapters (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "KSamplerProgress //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ],
        "interval": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10000
          }
        ],
        "omit_start_latent": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "True",
            "label_off": "False"
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "latent",
      "progress_latent"
    ],
    "name": "KSamplerProgress //Inspire",
    "display_name": "KSampler Progress (Inspire)",
    "description": "",
    "category": "InspirePack/analysis",
    "output_node": false
  },
  "KSamplerAdvancedProgress //Inspire": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "add_noise": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.5,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": [
          "CONDITIONING"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "latent_image": [
          "LATENT"
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "noise_mode": [
          [
            "GPU(=A1111)",
            "CPU"
          ]
        ],
        "return_with_leftover_noise": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "interval": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10000
          }
        ],
        "omit_start_latent": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ]
      },
      "optional": {
        "prev_progress_latent_opt": [
          "LATENT"
        ]
      }
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "latent",
      "progress_latent"
    ],
    "name": "KSamplerAdvancedProgress //Inspire",
    "display_name": "KSampler Advanced Progress (Inspire)",
    "description": "",
    "category": "InspirePack/analysis",
    "output_node": false
  },
  "CacheBackendData //Inspire": {
    "input": {
      "required": {
        "key": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Input data key (e.g. 'model a', 'chunli lora', 'girl latent 3', ...)"
          }
        ],
        "tag": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Tag: short description"
          }
        ],
        "data": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "data opt"
    ],
    "name": "CacheBackendData //Inspire",
    "display_name": "Cache Backend Data (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "CacheBackendDataNumberKey //Inspire": {
    "input": {
      "required": {
        "key": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "tag": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Tag: short description"
          }
        ],
        "data": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "data opt"
    ],
    "name": "CacheBackendDataNumberKey //Inspire",
    "display_name": "Cache Backend Data [NumberKey] (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "CacheBackendDataList //Inspire": {
    "input": {
      "required": {
        "key": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Input data key (e.g. 'model a', 'chunli lora', 'girl latent 3', ...)"
          }
        ],
        "tag": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Tag: short description"
          }
        ],
        "data": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "data opt"
    ],
    "name": "CacheBackendDataList //Inspire",
    "display_name": "Cache Backend Data List (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "CacheBackendDataNumberKeyList //Inspire": {
    "input": {
      "required": {
        "key": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ],
        "tag": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Tag: short description"
          }
        ],
        "data": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "data opt"
    ],
    "name": "CacheBackendDataNumberKeyList //Inspire",
    "display_name": "Cache Backend Data List [NumberKey] (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "RetrieveBackendData //Inspire": {
    "input": {
      "required": {
        "key": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Input data key (e.g. 'model a', 'chunli lora', 'girl latent 3', ...)"
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "data"
    ],
    "name": "RetrieveBackendData //Inspire",
    "display_name": "Retrieve Backend Data (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": false
  },
  "RetrieveBackendDataNumberKey //Inspire": {
    "input": {
      "required": {
        "key": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "data"
    ],
    "name": "RetrieveBackendDataNumberKey //Inspire",
    "display_name": "Retrieve Backend Data [NumberKey] (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": false
  },
  "RemoveBackendData //Inspire": {
    "input": {
      "required": {
        "key": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Input data key ('*' = clear all)"
          }
        ]
      },
      "optional": {
        "signal_opt": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "signal"
    ],
    "name": "RemoveBackendData //Inspire",
    "display_name": "Remove Backend Data (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "RemoveBackendDataNumberKey //Inspire": {
    "input": {
      "required": {
        "key": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
          }
        ]
      },
      "optional": {
        "signal_opt": [
          "*"
        ]
      }
    },
    "output": [
      "*"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "signal"
    ],
    "name": "RemoveBackendDataNumberKey //Inspire",
    "display_name": "Remove Backend Data [NumberKey] (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "ShowCachedInfo //Inspire": {
    "input": {
      "required": {
        "cache_info": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "key": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ShowCachedInfo //Inspire",
    "display_name": "Show Cached Info (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "CheckpointLoaderSimpleShared //Inspire": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "SD1-5/disneyPixarCartoon_v10.safetensors",
            "SD1-5/sd_v1-5_vae.ckpt",
            "SDXL-Turbo/sd_xl_turbo_1.0_fp16.safetensors",
            "SDXL/gulo-agg-(woman)-step00010_[b7f7dea349].safetensors",
            "SDXL/gulo-agg-(woman)-step00020_[f655c90e3b].safetensors",
            "SDXL/gulo-agg-(woman)-step00030_[7a4030e6e2].safetensors",
            "SDXL/gulo-agg-(woman)-step00040_[fd7d19e2c4].safetensors",
            "SDXL/gulo-agg-(woman)-step00050_[1fc4ac871c].safetensors",
            "SDXL/sd_xl_base_1.0_0.9vae.safetensors",
            "SDXL/sd_xl_refiner_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae-alt.safetensors"
          ]
        ],
        "key_opt": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "If empty, use 'ckpt_name' as the key."
          }
        ]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "STRING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "model",
      "clip",
      "vae",
      "cache key"
    ],
    "name": "CheckpointLoaderSimpleShared //Inspire",
    "display_name": "Shared Checkpoint Loader (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": false
  },
  "FloatRange //Inspire": {
    "input": {
      "required": {
        "start": [
          "FLOAT",
          {
            "default": 0.0,
            "min": -100.0,
            "max": 100.0,
            "step": 1e-09
          }
        ],
        "stop": [
          "FLOAT",
          {
            "default": 1.0,
            "min": -100.0,
            "max": 100.0,
            "step": 1e-09
          }
        ],
        "step": [
          "FLOAT",
          {
            "default": 0.01,
            "min": 0.0,
            "max": 100.0,
            "step": 1e-09
          }
        ],
        "limit": [
          "INT",
          {
            "default": 100,
            "min": 2,
            "max": 4096,
            "step": 1
          }
        ],
        "ensure_end": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "FLOAT"
    ],
    "name": "FloatRange //Inspire",
    "display_name": "Float Range (Inspire)",
    "description": "",
    "category": "InspirePack/util",
    "output_node": false
  },
  "ConcatConditioningsWithMultiplier //Inspire": {
    "input": {
      "required": {
        "conditioning1": [
          "CONDITIONING"
        ]
      },
      "optional": {
        "multiplier1": [
          "FLOAT",
          {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
          }
        ]
      }
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "name": "ConcatConditioningsWithMultiplier //Inspire",
    "display_name": "Concat Conditionings with Multiplier (Inspire)",
    "description": "",
    "category": "InspirePack/__for_testing",
    "output_node": false
  },
  "VHS_VideoCombine": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "frame_rate": [
          "INT",
          {
            "default": 8,
            "min": 1,
            "step": 1
          }
        ],
        "loop_count": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "filename_prefix": [
          "STRING",
          {
            "default": "AnimateDiff"
          }
        ],
        "format": [
          [
            "image/gif",
            "image/webp",
            "video/ProRes",
            "video/av1-webm",
            "video/h264-mp4",
            "video/h265-mp4",
            "video/webm"
          ]
        ],
        "pingpong": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "save_image": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "crf": [
          "INT",
          {
            "default": 20,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      },
      "optional": {
        "save_metadata": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "audio_file": [
          "STRING",
          {
            "default": ""
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [
      "GIF"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "GIF"
    ],
    "name": "VHS_VideoCombine",
    "display_name": "Video Combine \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "output_node": true
  },
  "VHS_LoadVideo": {
    "input": {
      "required": {
        "video": [
          [],
          {
            "video_upload": true
          }
        ],
        "force_rate": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 24,
            "step": 1
          }
        ],
        "force_size": [
          [
            "Disabled",
            "256x?",
            "?x256",
            "256x256",
            "512x?",
            "?x512",
            "512x512"
          ]
        ],
        "frame_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "skip_first_frames": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "select_every_nth": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "frame_count"
    ],
    "name": "VHS_LoadVideo",
    "display_name": "Load Video (Upload) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "output_node": false
  },
  "VHS_LoadVideoPath": {
    "input": {
      "required": {
        "video": [
          "STRING",
          {
            "default": "X://insert/path/here.mp4"
          }
        ],
        "force_rate": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 24,
            "step": 1
          }
        ],
        "force_size": [
          [
            "Disabled",
            "256x?",
            "?x256",
            "256x256",
            "512x?",
            "?x512",
            "512x512"
          ]
        ],
        "frame_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "skip_first_frames": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "select_every_nth": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "frame_count"
    ],
    "name": "VHS_LoadVideoPath",
    "display_name": "Load Video (Path) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "output_node": false
  },
  "VHS_LoadImages": {
    "input": {
      "required": {
        "directory": [
          []
        ]
      },
      "optional": {
        "image_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "skip_first_images": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "select_every_nth": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "name": "VHS_LoadImages",
    "display_name": "Load Images (Upload) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "output_node": false
  },
  "VHS_LoadImagesPath": {
    "input": {
      "required": {
        "directory": [
          "STRING",
          {
            "default": "X://path/to/images"
          }
        ]
      },
      "optional": {
        "image_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "skip_first_images": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "select_every_nth": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK",
      "INT"
    ],
    "name": "VHS_LoadImagesPath",
    "display_name": "Load Images (Path) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "output_node": false
  },
  "VHS_SplitLatents": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "split_index": [
          "INT",
          {
            "default": 0,
            "step": 1,
            "min": -99999999999
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "INT",
      "LATENT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "LATENT_A",
      "A_count",
      "LATENT_B",
      "B_count"
    ],
    "name": "VHS_SplitLatents",
    "display_name": "Split Latent Batch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent",
    "output_node": false
  },
  "VHS_SplitImages": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "split_index": [
          "INT",
          {
            "default": 0,
            "step": 1,
            "min": -99999999999
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "INT",
      "IMAGE",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "IMAGE_A",
      "A_count",
      "IMAGE_B",
      "B_count"
    ],
    "name": "VHS_SplitImages",
    "display_name": "Split Image Batch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image",
    "output_node": false
  },
  "VHS_MergeLatents": {
    "input": {
      "required": {
        "latents_A": [
          "LATENT"
        ],
        "latents_B": [
          "LATENT"
        ],
        "merge_strategy": [
          [
            "match A",
            "match B",
            "match smaller",
            "match larger"
          ]
        ],
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "LATENT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "LATENT",
      "count"
    ],
    "name": "VHS_MergeLatents",
    "display_name": "Merge Latent Batches \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent",
    "output_node": false
  },
  "VHS_MergeImages": {
    "input": {
      "required": {
        "images_A": [
          "IMAGE"
        ],
        "images_B": [
          "IMAGE"
        ],
        "merge_strategy": [
          [
            "match A",
            "match B",
            "match smaller",
            "match larger"
          ]
        ],
        "scale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "crop": [
          [
            "disabled",
            "center"
          ]
        ]
      }
    },
    "output": [
      "IMAGE",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "count"
    ],
    "name": "VHS_MergeImages",
    "display_name": "Merge Image Batches \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image",
    "output_node": false
  },
  "VHS_SelectEveryNthLatent": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "select_every_nth": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "LATENT",
      "count"
    ],
    "name": "VHS_SelectEveryNthLatent",
    "display_name": "Select Every Nth Latent \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent",
    "output_node": false
  },
  "VHS_SelectEveryNthImage": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "select_every_nth": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "count"
    ],
    "name": "VHS_SelectEveryNthImage",
    "display_name": "Select Every Nth Image \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image",
    "output_node": false
  },
  "VHS_GetLatentCount": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "count"
    ],
    "name": "VHS_GetLatentCount",
    "display_name": "Get Latent Count \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent",
    "output_node": false
  },
  "VHS_GetImageCount": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      }
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "count"
    ],
    "name": "VHS_GetImageCount",
    "display_name": "Get Image Count \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image",
    "output_node": false
  },
  "VHS_DuplicateLatents": {
    "input": {
      "required": {
        "latents": [
          "LATENT"
        ],
        "multiply_by": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "LATENT",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "LATENT",
      "count"
    ],
    "name": "VHS_DuplicateLatents",
    "display_name": "Duplicate Latent Batch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent",
    "output_node": false
  },
  "VHS_DuplicateImages": {
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "multiply_by": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "INT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "count"
    ],
    "name": "VHS_DuplicateImages",
    "display_name": "Duplicate Image Batch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    "description": "",
    "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image",
    "output_node": false
  },
  "FreeU (Advanced)": {
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "target_block": [
          [
            "output_block",
            "middle_block",
            "input_block",
            "all"
          ]
        ],
        "multiscale_mode": [
          [
            "Default",
            "Bandpass",
            "Low-Pass",
            "High-Pass",
            "Pass-Through",
            "Gaussian-Blur",
            "Edge-Enhancement",
            "Sharpen",
            "Multi-Bandpass",
            "Multi-Low-Pass",
            "Multi-High-Pass",
            "Multi-Pass-Through",
            "Multi-Gaussian-Blur",
            "Multi-Edge-Enhancement",
            "Multi-Sharpen"
          ]
        ],
        "multiscale_strength": [
          "FLOAT",
          {
            "default": 1.0,
            "max": 1.0,
            "min": 0,
            "step": 0.001
          }
        ],
        "slice_b1": [
          "INT",
          {
            "default": 640,
            "min": 64,
            "max": 1280,
            "step": 1
          }
        ],
        "slice_b2": [
          "INT",
          {
            "default": 320,
            "min": 64,
            "max": 640,
            "step": 1
          }
        ],
        "b1": [
          "FLOAT",
          {
            "default": 1.1,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "b2": [
          "FLOAT",
          {
            "default": 1.2,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "s1": [
          "FLOAT",
          {
            "default": 0.9,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ],
        "s2": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "b1_mode": [
          [
            "bislerp",
            "colorize",
            "cosine interp",
            "cuberp",
            "hslerp",
            "inject",
            "lerp",
            "linear dodge"
          ]
        ],
        "b1_blend": [
          "FLOAT",
          {
            "default": 1.0,
            "max": 100,
            "min": 0,
            "step": 0.001
          }
        ],
        "b2_mode": [
          [
            "bislerp",
            "colorize",
            "cosine interp",
            "cuberp",
            "hslerp",
            "inject",
            "lerp",
            "linear dodge"
          ]
        ],
        "b2_blend": [
          "FLOAT",
          {
            "default": 1.0,
            "max": 100,
            "min": 0,
            "step": 0.001
          }
        ],
        "threshold": [
          "INT",
          {
            "default": 1.0,
            "max": 10,
            "min": 1,
            "step": 1
          }
        ],
        "use_override_scales": [
          [
            "false",
            "true"
          ]
        ],
        "override_scales": [
          "STRING",
          {
            "default": "# OVERRIDE SCALES\n\n# Sharpen\n# 10, 1.5",
            "multiline": true
          }
        ]
      }
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "name": "FreeU (Advanced)",
    "display_name": "FreeU (Advanced Plus)",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  }
}
